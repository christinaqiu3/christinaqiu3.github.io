{"ast":null,"code":"var _jsxFileName = \"/Users/christinaqiu/Documents/GitHub/personal-website/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { Button } from \"./Button\";\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  const [activeSection, setActiveSection] = useState('home');\n  const homeRef = useRef(null);\n  const gameRef = useRef(null);\n  const webRef = useRef(null);\n  const artRef = useRef(null);\n  const showButton = () => {\n    if (window.innerWidth <= 930) {\n      setButton(false);\n      if (click) {\n        setClick(false);\n      }\n    } else {\n      setButton(true);\n    }\n  };\n  useEffect(() => {\n    showButton();\n  }, []);\n  useEffect(() => {\n    const smoothScroll = targetId => {\n      const targetElement = document.getElementById(targetId);\n      if (targetElement) {\n        const offset = 8 * parseFloat(getComputedStyle(document.documentElement).fontSize); // 8rem in pixels\n        window.scrollTo({\n          top: targetElement.offsetTop - offset,\n          behavior: 'smooth'\n        });\n      }\n    };\n\n    // Add smooth scroll behavior when clicking on anchor links\n    document.querySelectorAll('.nav-links').forEach(link => {\n      link.addEventListener('click', e => {\n        e.preventDefault();\n        const targetId = e.target.getAttribute('href').substring(1); // Get the target ID without the '#'\n        smoothScroll(targetId);\n      });\n    });\n  }, []);\n  const [emoji, setEmoji] = useState(\"ðŸŒ•\");\n  window.addEventListener('resize', showButton);\n  const toggleDarkMode = () => {\n    const root = document.documentElement;\n    const isDarkMode = root.classList.contains('dark-mode');\n    if (isDarkMode) {\n      root.style.setProperty('--background', '#ffffff');\n      root.style.setProperty('--text', '#222628');\n      root.style.setProperty('--card', '#e6e7ff');\n      root.style.setProperty('--heading', '#32374b');\n      //root.style.setProperty('--nav-background', '#959CF8');\n    } else {\n      root.style.setProperty('--background', '#222628'); //#32324b\n      root.style.setProperty('--text', '#D3D3F0');\n      root.style.setProperty('--card', '#32374b');\n      root.style.setProperty('--heading', '#959CF8');\n      //root.style.setProperty('--nav-background', '#656FC8');\n    }\n\n    setEmoji(isDarkMode ? \"ðŸŒ•\" : \"ðŸŒ‘\");\n    root.classList.toggle('dark-mode');\n  };\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setActiveSection(entry.target.id);\n        }\n      });\n    }, {\n      threshold: 0.5\n    } // Intersection threshold set to 50%\n    );\n\n    // Observe sections you want to highlight in the navbar\n    if (homeRef.current) observer.observe(homeRef.current);\n    if (gameRef.current) observer.observe(gameRef.current);\n    if (webRef.current) observer.observe(webRef.current);\n    if (artRef.current) observer.observe(artRef.current);\n\n    // Clean up the observer on component unmount\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"home\",\n          smooth: true,\n          duration: 500,\n          spy: true,\n          offset: -80,\n          className: `nav-links ${activeSection === 'home' ? 'active' : ''}`,\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"game\",\n          smooth: true,\n          duration: 500,\n          spy: true,\n          offset: -80,\n          className: `nav-links ${activeSection === 'game' ? 'active' : ''}`,\n          children: \"Game Dev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"web\",\n          smooth: true,\n          duration: 500,\n          spy: true,\n          offset: -80,\n          className: `nav-links ${activeSection === 'web' ? 'active' : ''}`,\n          children: \"Web Dev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"art\",\n          smooth: true,\n          duration: 500,\n          spy: true,\n          offset: -80,\n          className: `nav-links ${activeSection === 'art' ? 'active' : ''}`,\n          children: \"Artwork\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Navbar, \"bd9brsfJqg2ytMt2Ynwe4C5uGdM=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useState","useEffect","useRef","Link","Button","NavLink","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","click","setClick","button","setButton","handleClick","closeMobileMenu","activeSection","setActiveSection","homeRef","gameRef","webRef","artRef","showButton","window","innerWidth","smoothScroll","targetId","targetElement","document","getElementById","offset","parseFloat","getComputedStyle","documentElement","fontSize","scrollTo","top","offsetTop","behavior","querySelectorAll","forEach","link","addEventListener","e","preventDefault","target","getAttribute","substring","emoji","setEmoji","toggleDarkMode","root","isDarkMode","classList","contains","style","setProperty","toggle","observer","IntersectionObserver","entries","entry","isIntersecting","id","threshold","current","observe","disconnect","children","className","to","smooth","duration","spy","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/christinaqiu/Documents/GitHub/personal-website/src/components/Navbar.js"],"sourcesContent":["import {useState, useEffect, useRef} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\nimport {Button} from \"./Button\";\nimport { NavLink } from 'react-router-dom';\n\nfunction Navbar() {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const [activeSection, setActiveSection] = useState('home');\n    const homeRef = useRef(null);\n    const gameRef = useRef(null);\n    const webRef = useRef(null);\n    const artRef = useRef(null);\n\n    const showButton = () => {\n        if(window.innerWidth <= 930) {\n            setButton(false)\n            if (click) {\n                setClick(false);\n            }\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    useEffect(() => {\n        const smoothScroll = (targetId) => {\n            const targetElement = document.getElementById(targetId);\n            if (targetElement) {\n                const offset = 8 * parseFloat(getComputedStyle(document.documentElement).fontSize); // 8rem in pixels\n                window.scrollTo({\n                    top: targetElement.offsetTop - offset,\n                    behavior: 'smooth',\n                });\n            }\n        };\n\n        // Add smooth scroll behavior when clicking on anchor links\n        document.querySelectorAll('.nav-links').forEach((link) => {\n            link.addEventListener('click', (e) => {\n                e.preventDefault();\n                const targetId = e.target.getAttribute('href').substring(1); // Get the target ID without the '#'\n                smoothScroll(targetId);\n            });\n        });\n    }, []);\n\n    const [emoji, setEmoji] = useState(\"ðŸŒ•\");\n\n    window.addEventListener('resize', showButton);\n\n    const toggleDarkMode = () => {\n        const root = document.documentElement;\n        const isDarkMode = root.classList.contains('dark-mode');\n        if (isDarkMode) {\n            root.style.setProperty('--background', '#ffffff');\n            root.style.setProperty('--text', '#222628');\n            root.style.setProperty('--card', '#e6e7ff');\n            root.style.setProperty('--heading', '#32374b');\n            //root.style.setProperty('--nav-background', '#959CF8');\n        } else {\n            root.style.setProperty('--background', '#222628'); //#32324b\n            root.style.setProperty('--text', '#D3D3F0');\n            root.style.setProperty('--card', '#32374b');\n            root.style.setProperty('--heading', '#959CF8');\n            //root.style.setProperty('--nav-background', '#656FC8');\n        }\n        setEmoji(isDarkMode ? \"ðŸŒ•\" : \"ðŸŒ‘\");\n        root.classList.toggle('dark-mode');\n    };\n\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            (entries) => {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        setActiveSection(entry.target.id);\n                    }\n                });\n            },\n            { threshold: 0.5 } // Intersection threshold set to 50%\n        );\n\n        // Observe sections you want to highlight in the navbar\n        if (homeRef.current) observer.observe(homeRef.current);\n        if (gameRef.current) observer.observe(gameRef.current);\n        if (webRef.current) observer.observe(webRef.current);\n        if (artRef.current) observer.observe(artRef.current);\n\n        // Clean up the observer on component unmount\n        return () => observer.disconnect();\n    }, []);\n\n    return (\n        <>\n\n            <nav className=\"navbar\">\n                <div className=\"navbar-container\">\n                    <Link\n                        to=\"home\"\n                        smooth={true}\n                        duration={500}\n                        spy={true}\n                        offset={-80}\n                        className={`nav-links ${activeSection === 'home' ? 'active' : ''}`}\n                    >\n                        Home\n                    </Link>\n                    <Link\n                        to=\"game\"\n                        smooth={true}\n                        duration={500}\n                        spy={true}\n                        offset={-80}\n                        className={`nav-links ${activeSection === 'game' ? 'active' : ''}`}\n                    >\n                        Game Dev\n                    </Link>\n                    <Link\n                        to=\"web\"\n                        smooth={true}\n                        duration={500}\n                        spy={true}\n                        offset={-80}\n                        className={`nav-links ${activeSection === 'web' ? 'active' : ''}`}\n                    >\n                        Web Dev\n                    </Link>\n                    <Link\n                        to=\"art\"\n                        smooth={true}\n                        duration={500}\n                        spy={true}\n                        offset={-80}\n                        className={`nav-links ${activeSection === 'art' ? 'active' : ''}`}\n                    >\n                        Artwork\n                    </Link>\n                    <button onClick={toggleDarkMode}>{emoji}</button>\n                </div>\n            </nav>\n\n\n\n        </>\n    )\n}\n\nexport default Navbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}