{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$(),\n  _s16 = $RefreshSig$(),\n  _s18 = $RefreshSig$(),\n  _s19 = $RefreshSig$(),\n  _s20 = $RefreshSig$(),\n  _s21 = $RefreshSig$(),\n  _s22 = $RefreshSig$(),\n  _s23 = $RefreshSig$(),\n  _s24 = $RefreshSig$();\n/**\n * React Router DOM v6.17.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, matchPath } from '@remix-run/router';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  _s();\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    if (!viewTransitionOpts || router.window == null || typeof router.window.document.startViewTransition !== \"function\") {\n      // Mid-navigation state update, or startViewTransition isn't available\n      optInStartTransition(() => setStateImpl(newState));\n    } else if (transition && renderDfd) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [optInStartTransition, transition, renderDfd, router.window]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext.isTransitioning]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement)))), null);\n}\n_s(RouterProvider, \"IeCoOEEFUrXvyQiknRE2CV6rxVQ=\");\n_c = RouterProvider;\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n_c2 = DataRoutes;\nfunction BrowserRouter(_ref4) {\n  _s2();\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n_s2(BrowserRouter, \"4hUJUqHydkgNqll0yBdcphm8IwU=\");\n_c3 = BrowserRouter;\nfunction HashRouter(_ref5) {\n  _s3();\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n_s3(HashRouter, \"4hUJUqHydkgNqll0yBdcphm8IwU=\");\n_c4 = HashRouter;\nfunction HistoryRouter(_ref6) {\n  _s4();\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n_s4(HistoryRouter, \"qZQfXZolk6/V9qSWbR9WFN9lmtM=\");\n_c5 = HistoryRouter;\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/_s5( /*#__PURE__*/React.forwardRef(_c6 = _s5(function LinkWithRef(_ref7, ref) {\n  _s5();\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n}, \"Yajx66sAxOifLkmxXXPYSkQDUHU=\", false, function () {\n  return [useHref, useLinkClickHandler];\n})), \"Yajx66sAxOifLkmxXXPYSkQDUHU=\", false, function () {\n  return [useHref, useLinkClickHandler];\n});\n_c7 = Link;\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/_s6( /*#__PURE__*/React.forwardRef(_c8 = _s6(function NavLinkWithRef(_ref8, ref) {\n  _s6();\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n}, \"K2/j537jT+pByiYJAPQ1i1MoHxM=\", false, function () {\n  return [useResolvedPath, useLocation, useViewTransitionState];\n})), \"K2/j537jT+pByiYJAPQ1i1MoHxM=\", false, function () {\n  return [useResolvedPath, useLocation, useViewTransitionState];\n});\n_c9 = NavLink;\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/_s7( /*#__PURE__*/React.forwardRef(_c10 = _s7((props, ref) => {\n  _s7();\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n}, \"/qFIYzOq2OE/SSM69ffcyD0/sOE=\", false, function () {\n  return [useSubmit];\n})), \"/qFIYzOq2OE/SSM69ffcyD0/sOE=\", false, function () {\n  return [useSubmit];\n});\n_c11 = Form;\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/_s8( /*#__PURE__*/React.forwardRef(_c12 = _s8((_ref9, forwardedRef) => {\n  _s8();\n  let {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n}, \"ikrmxTVgoJ1SmpxGySBBzh4GZYM=\", false, function () {\n  return [useFormAction];\n})), \"ikrmxTVgoJ1SmpxGySBBzh4GZYM=\", false, function () {\n  return [useFormAction];\n});\n_c13 = FormImpl;\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  _s9();\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n_s9(ScrollRestoration, \"i2Pmz86I+GEMTyh0cl3DeIWLJmI=\", false, function () {\n  return [useScrollRestoration];\n});\n_c14 = ScrollRestoration;\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  _s10();\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n_s10(useDataRouterContext, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nfunction useDataRouterState(hookName) {\n  _s11();\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n_s11(useDataRouterState, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\nfunction useLinkClickHandler(to, _temp) {\n  _s12();\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n_s12(useLinkClickHandler, \"BZYjyGAa1ZxLRntdbX23tSdFTkI=\", false, function () {\n  return [useNavigate, useLocation, useResolvedPath];\n});\nfunction useSearchParams(defaultInit) {\n  _s13();\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n_s13(useSearchParams, \"OI4Q5UoLuAWNlbh84tDqEBFb7zQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  _s14();\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId,\n      unstable_viewTransition: options.unstable_viewTransition\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\n_s14(useSubmit, \"mA3zi2Au3iJBSgB63hGhKHztn/0=\", false, function () {\n  return [useDataRouterContext];\n});\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  _s15();\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n_s15(useSubmitFetcher, \"mA3zi2Au3iJBSgB63hGhKHztn/0=\", false, function () {\n  return [useDataRouterContext];\n});\nfunction useFormAction(action, _temp2) {\n  _s16();\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n_s16(useFormAction, \"JoBz/6khkD9g4enzYtwaKbHAM0k=\", false, function () {\n  return [useResolvedPath, useLocation];\n});\nfunction createFetcherForm(fetcherKey, routeId) {\n  var _s17 = $RefreshSig$();\n  let FetcherForm = /*#__PURE__*/_s17( /*#__PURE__*/React.forwardRef(_s17((props, ref) => {\n    _s17();\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  }, \"AdV7/pGuM5sC0p+Ex1bKiVYE5rk=\", false, function () {\n    return [useSubmitFetcher];\n  })), \"AdV7/pGuM5sC0p+Ex1bKiVYE5rk=\", false, function () {\n    return [useSubmitFetcher];\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  _s18();\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n_s18(useFetcher, \"8xZAD2dLZA/Rdd0bRl/gby8H6zw=\", false, function () {\n  return [useDataRouterContext, useSubmitFetcher];\n});\nfunction useFetchers() {\n  _s19();\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n_s19(useFetchers, \"ksx0pUFe0Qs5FOQ3bx/kwJ/n1pg=\", false, function () {\n  return [useDataRouterState];\n});\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  _s20();\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey(\n      // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n_s20(useScrollRestoration, \"qEPirZRDUbolVs17CyMR+UZZemg=\", false, function () {\n  return [useDataRouterContext, useDataRouterState, useLocation, useMatches, useNavigation, usePageHide];\n});\nfunction useBeforeUnload(callback, options) {\n  _s21();\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n_s21(useBeforeUnload, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction usePageHide(callback, options) {\n  _s22();\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n_s22(usePageHide, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction usePrompt(_ref11) {\n  _s23();\n  let {\n    when,\n    message\n  } = _ref11;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\n_s23(usePrompt, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\nfunction useViewTransitionState(to, opts) {\n  _s24();\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n_s24(useViewTransitionState, \"lzGZGowfzVlnxtaSSU6dvWwwv+E=\", false, function () {\n  return [useDataRouterContext, useResolvedPath];\n});\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"RouterProvider\");\n$RefreshReg$(_c2, \"DataRoutes\");\n$RefreshReg$(_c3, \"BrowserRouter\");\n$RefreshReg$(_c4, \"HashRouter\");\n$RefreshReg$(_c5, \"HistoryRouter\");\n$RefreshReg$(_c6, \"Link$React.forwardRef\");\n$RefreshReg$(_c7, \"Link\");\n$RefreshReg$(_c8, \"NavLink$React.forwardRef\");\n$RefreshReg$(_c9, \"NavLink\");\n$RefreshReg$(_c10, \"Form$React.forwardRef\");\n$RefreshReg$(_c11, \"Form\");\n$RefreshReg$(_c12, \"FormImpl$React.forwardRef\");\n$RefreshReg$(_c13, \"FormImpl\");\n$RefreshReg$(_c14, \"ScrollRestoration\");","map":{"version":3,"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","env","NODE_ENV","UNSAFE_warning","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","createBrowserRouter","routes","opts","createRouter","future","_extends","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","UNSAFE_mapRouteProperties","initialize","createHashRouter","createHashHistory","_window","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","UNSAFE_ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","START_TRANSITION","startTransitionImpl","startTransitionSafe","cb","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","_s","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","unstable_viewTransitionOpts","viewTransitionOpts","startViewTransition","skipTransition","currentLocation","nextLocation","useLayoutEffect","subscribe","useEffect","renderPromise","finished","finally","location","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","Fragment","UNSAFE_DataRouterContext","Provider","UNSAFE_DataRouterStateContext","Router","navigationType","historyAction","initialized","DataRoutes","_c","_ref3","UNSAFE_useRoutesImpl","_c2","BrowserRouter","_ref4","_s2","children","historyRef","useRef","current","v5Compat","listen","_c3","HashRouter","_ref5","_s3","_c4","HistoryRouter","_ref6","_s4","_c5","isBrowser","ABSOLUTE_URL_REGEX","Link","_s5","forwardRef","_c6","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","unstable_viewTransition","rest","_objectWithoutPropertiesLoose","_excluded","useContext","UNSAFE_NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","_c7","NavLink","_s6","_c8","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_excluded2","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","renderProps","ariaCurrent","filter","Boolean","join","_c9","Form","_s7","_c10","props","submit","useSubmit","FormImpl","_c11","_s8","_c12","_ref9","forwardedRef","onSubmit","_excluded3","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","_c13","ScrollRestoration","_ref10","_s9","getKey","storageKey","useScrollRestoration","_c14","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","_s10","ctx","UNSAFE_invariant","useDataRouterState","_s11","_temp","_s12","replaceProp","useNavigate","createPath","useSearchParams","defaultInit","_s13","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","_s14","UseSubmit","currentRouteId","UNSAFE_useRouteId","options","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","_s15","UseSubmitFetcher","fetch","_temp2","_s16","routeContext","UNSAFE_RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","_s17","$RefreshSig$","FetcherForm","fetcherId","useFetcher","_s18","_route$matches","UseFetcher","id","String","load","fetcher","getFetcher","fetcherWithComponents","console","warn","deleteFetcher","useFetchers","_s19","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","_s20","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","useBeforeUnload","callback","_s21","capture","addEventListener","removeEventListener","_s22","usePrompt","_ref11","_s23","when","blocker","unstable_useBlocker","proceed","confirm","setTimeout","reset","_s24","currentPath","nextPath","matchPath"],"sources":["/Users/christinaqiu/Documents/GitHub/personal-website/src/components/node_modules/react-router-dom/dom.ts","/Users/christinaqiu/Documents/GitHub/personal-website/src/components/node_modules/react-router-dom/index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [optInStartTransition, transition, renderDfd, router.window]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <ViewTransitionContext.Provider value={vtContext}>\n            <Router\n              basename={basename}\n              location={state.location}\n              navigationType={state.historyAction}\n              navigator={navigator}\n            >\n              {state.initialized ? (\n                <DataRoutes routes={router.routes} state={state} />\n              ) : (\n                fallbackElement\n              )}\n            </Router>\n          </ViewTransitionContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_viewTransition: options.unstable_viewTransition,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}