{"ast":null,"code":"import _regeneratorRuntime from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _createClass from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _wrapNativeSuper from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";import _slicedToArray from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toArray from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/toArray.js\";import _createForOfIteratorHelper from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";/**\n * @remix-run/router v1.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */var Action;(function(Action){/**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */Action[\"Pop\"]=\"POP\";/**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */Action[\"Push\"]=\"PUSH\";/**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */Action[\"Replace\"]=\"REPLACE\";})(Action||(Action={}));var PopStateEventType=\"popstate\";/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */function createMemoryHistory(options){if(options===void 0){options={};}var _options=options,_options$initialEntri=_options.initialEntries,initialEntries=_options$initialEntri===void 0?[\"/\"]:_options$initialEntri,initialIndex=_options.initialIndex,_options$v5Compat=_options.v5Compat,v5Compat=_options$v5Compat===void 0?false:_options$v5Compat;var entries;// Declare so we can access from createMemoryLocation\nentries=initialEntries.map(function(entry,index){return createMemoryLocation(entry,typeof entry===\"string\"?null:entry.state,index===0?\"default\":undefined);});var index=clampIndex(initialIndex==null?entries.length-1:initialIndex);var action=Action.Pop;var listener=null;function clampIndex(n){return Math.min(Math.max(n,0),entries.length-1);}function getCurrentLocation(){return entries[index];}function createMemoryLocation(to,state,key){if(state===void 0){state=null;}var location=createLocation(entries?getCurrentLocation().pathname:\"/\",to,state,key);warning(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in memory history: \"+JSON.stringify(to));return location;}function createHref(to){return typeof to===\"string\"?to:createPath(to);}var history={get index(){return index;},get action(){return action;},get location(){return getCurrentLocation();},createHref:createHref,createURL:function createURL(to){return new URL(createHref(to),\"http://localhost\");},encodeLocation:function encodeLocation(to){var path=typeof to===\"string\"?parsePath(to):to;return{pathname:path.pathname||\"\",search:path.search||\"\",hash:path.hash||\"\"};},push:function push(to,state){action=Action.Push;var nextLocation=createMemoryLocation(to,state);index+=1;entries.splice(index,entries.length,nextLocation);if(v5Compat&&listener){listener({action:action,location:nextLocation,delta:1});}},replace:function replace(to,state){action=Action.Replace;var nextLocation=createMemoryLocation(to,state);entries[index]=nextLocation;if(v5Compat&&listener){listener({action:action,location:nextLocation,delta:0});}},go:function go(delta){action=Action.Pop;var nextIndex=clampIndex(index+delta);var nextLocation=entries[nextIndex];index=nextIndex;if(listener){listener({action:action,location:nextLocation,delta:delta});}},listen:function listen(fn){listener=fn;return function(){listener=null;};}};return history;}/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */function createBrowserHistory(options){if(options===void 0){options={};}function createBrowserLocation(window,globalHistory){var _window$location=window.location,pathname=_window$location.pathname,search=_window$location.search,hash=_window$location.hash;return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createBrowserHref(window,to){return typeof to===\"string\"?to:createPath(to);}return getUrlBasedHistory(createBrowserLocation,createBrowserHref,null,options);}/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */function createHashHistory(options){if(options===void 0){options={};}function createHashLocation(window,globalHistory){var _parsePath=parsePath(window.location.hash.substr(1)),_parsePath$pathname=_parsePath.pathname,pathname=_parsePath$pathname===void 0?\"/\":_parsePath$pathname,_parsePath$search=_parsePath.search,search=_parsePath$search===void 0?\"\":_parsePath$search,_parsePath$hash=_parsePath.hash,hash=_parsePath$hash===void 0?\"\":_parsePath$hash;return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createHashHref(window,to){var base=window.document.querySelector(\"base\");var href=\"\";if(base&&base.getAttribute(\"href\")){var url=window.location.href;var hashIndex=url.indexOf(\"#\");href=hashIndex===-1?url:url.slice(0,hashIndex);}return href+\"#\"+(typeof to===\"string\"?to:createPath(to));}function validateHashLocation(location,to){warning(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in hash history.push(\"+JSON.stringify(to)+\")\");}return getUrlBasedHistory(createHashLocation,createHashHref,validateHashLocation,options);}function invariant(value,message){if(value===false||value===null||typeof value===\"undefined\"){throw new Error(message);}}function warning(cond,message){if(!cond){// eslint-disable-next-line no-console\nif(typeof console!==\"undefined\")console.warn(message);try{// Welcome to debugging history!\n//\n// This error is thrown as a convenience so you can more easily\n// find the source for a warning that appears in the console by\n// enabling \"pause on exceptions\" in your JavaScript debugger.\nthrow new Error(message);// eslint-disable-next-line no-empty\n}catch(e){}}}function createKey(){return Math.random().toString(36).substr(2,8);}/**\n * For browser-based histories, we combine the state and key into an object\n */function getHistoryState(location,index){return{usr:location.state,key:location.key,idx:index};}/**\n * Creates a Location object with a unique key from the given Path\n */function createLocation(current,to,state,key){if(state===void 0){state=null;}var location=_extends({pathname:typeof current===\"string\"?current:current.pathname,search:\"\",hash:\"\"},typeof to===\"string\"?parsePath(to):to,{state:state,// TODO: This could be cleaned up.  push/replace should probably just take\n// full Locations now and avoid the need to run through this flow at all\n// But that's a pretty big refactor to the current test suite so going to\n// keep as is for the time being and just let any incoming keys take precedence\nkey:to&&to.key||key||createKey()});return location;}/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */function createPath(_ref){var _ref$pathname=_ref.pathname,pathname=_ref$pathname===void 0?\"/\":_ref$pathname,_ref$search=_ref.search,search=_ref$search===void 0?\"\":_ref$search,_ref$hash=_ref.hash,hash=_ref$hash===void 0?\"\":_ref$hash;if(search&&search!==\"?\")pathname+=search.charAt(0)===\"?\"?search:\"?\"+search;if(hash&&hash!==\"#\")pathname+=hash.charAt(0)===\"#\"?hash:\"#\"+hash;return pathname;}/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */function parsePath(path){var parsedPath={};if(path){var hashIndex=path.indexOf(\"#\");if(hashIndex>=0){parsedPath.hash=path.substr(hashIndex);path=path.substr(0,hashIndex);}var searchIndex=path.indexOf(\"?\");if(searchIndex>=0){parsedPath.search=path.substr(searchIndex);path=path.substr(0,searchIndex);}if(path){parsedPath.pathname=path;}}return parsedPath;}function getUrlBasedHistory(getLocation,_createHref,validateLocation,options){if(options===void 0){options={};}var _options2=options,_options2$window=_options2.window,window=_options2$window===void 0?document.defaultView:_options2$window,_options2$v5Compat=_options2.v5Compat,v5Compat=_options2$v5Compat===void 0?false:_options2$v5Compat;var globalHistory=window.history;var action=Action.Pop;var listener=null;var index=getIndex();// Index should only be null when we initialize. If not, it's because the\n// user called history.pushState or history.replaceState directly, in which\n// case we should log a warning as it will result in bugs.\nif(index==null){index=0;globalHistory.replaceState(_extends({},globalHistory.state,{idx:index}),\"\");}function getIndex(){var state=globalHistory.state||{idx:null};return state.idx;}function handlePop(){action=Action.Pop;var nextIndex=getIndex();var delta=nextIndex==null?null:nextIndex-index;index=nextIndex;if(listener){listener({action:action,location:history.location,delta:delta});}}function push(to,state){action=Action.Push;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);index=getIndex()+1;var historyState=getHistoryState(location,index);var url=history.createHref(location);// try...catch because iOS limits us to 100 pushState calls :/\ntry{globalHistory.pushState(historyState,\"\",url);}catch(error){// If the exception is because `state` can't be serialized, let that throw\n// outwards just like a replace call would so the dev knows the cause\n// https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n// https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\nif(error instanceof DOMException&&error.name===\"DataCloneError\"){throw error;}// They are going to lose state here, but there is no real\n// way to warn them about it since the page will refresh...\nwindow.location.assign(url);}if(v5Compat&&listener){listener({action:action,location:history.location,delta:1});}}function replace(to,state){action=Action.Replace;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);index=getIndex();var historyState=getHistoryState(location,index);var url=history.createHref(location);globalHistory.replaceState(historyState,\"\",url);if(v5Compat&&listener){listener({action:action,location:history.location,delta:0});}}function createURL(to){// window.location.origin is \"null\" (the literal string value) in Firefox\n// under certain conditions, notably when serving from a local HTML file\n// See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\nvar base=window.location.origin!==\"null\"?window.location.origin:window.location.href;var href=typeof to===\"string\"?to:createPath(to);invariant(base,\"No window.location.(origin|href) available to create URL for href: \"+href);return new URL(href,base);}var history={get action(){return action;},get location(){return getLocation(window,globalHistory);},listen:function listen(fn){if(listener){throw new Error(\"A history only accepts one active listener\");}window.addEventListener(PopStateEventType,handlePop);listener=fn;return function(){window.removeEventListener(PopStateEventType,handlePop);listener=null;};},createHref:function createHref(to){return _createHref(window,to);},createURL:createURL,encodeLocation:function encodeLocation(to){// Encode a Location the same way window.location would\nvar url=createURL(to);return{pathname:url.pathname,search:url.search,hash:url.hash};},push:push,replace:replace,go:function go(n){return globalHistory.go(n);}};return history;}//#endregion\nvar ResultType;(function(ResultType){ResultType[\"data\"]=\"data\";ResultType[\"deferred\"]=\"deferred\";ResultType[\"redirect\"]=\"redirect\";ResultType[\"error\"]=\"error\";})(ResultType||(ResultType={}));var immutableRouteKeys=new Set([\"lazy\",\"caseSensitive\",\"path\",\"id\",\"index\",\"children\"]);function isIndexRoute(route){return route.index===true;}// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes,mapRouteProperties,parentPath,manifest){if(parentPath===void 0){parentPath=[];}if(manifest===void 0){manifest={};}return routes.map(function(route,index){var treePath=[].concat(_toConsumableArray(parentPath),[index]);var id=typeof route.id===\"string\"?route.id:treePath.join(\"-\");invariant(route.index!==true||!route.children,\"Cannot specify children on an index route\");invariant(!manifest[id],\"Found a route id collision on id \\\"\"+id+\"\\\".  Route \"+\"id's must be globally unique within Data Router usages\");if(isIndexRoute(route)){var indexRoute=_extends({},route,mapRouteProperties(route),{id:id});manifest[id]=indexRoute;return indexRoute;}else{var pathOrLayoutRoute=_extends({},route,mapRouteProperties(route),{id:id,children:undefined});manifest[id]=pathOrLayoutRoute;if(route.children){pathOrLayoutRoute.children=convertRoutesToDataRoutes(route.children,mapRouteProperties,treePath,manifest);}return pathOrLayoutRoute;}});}/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */function matchRoutes(routes,locationArg,basename){if(basename===void 0){basename=\"/\";}var location=typeof locationArg===\"string\"?parsePath(locationArg):locationArg;var pathname=stripBasename(location.pathname||\"/\",basename);if(pathname==null){return null;}var branches=flattenRoutes(routes);rankRouteBranches(branches);var matches=null;for(var i=0;matches==null&&i<branches.length;++i){matches=matchRouteBranch(branches[i],// Incoming pathnames are generally encoded from either window.location\n// or from router.navigate, but we want to match against the unencoded\n// paths in the route definitions.  Memory router locations won't be\n// encoded here but there also shouldn't be anything to decode so this\n// should be a safe operation.  This avoids needing matchRoutes to be\n// history-aware.\nsafelyDecodeURI(pathname));}return matches;}function flattenRoutes(routes,branches,parentsMeta,parentPath){if(branches===void 0){branches=[];}if(parentsMeta===void 0){parentsMeta=[];}if(parentPath===void 0){parentPath=\"\";}var flattenRoute=function flattenRoute(route,index,relativePath){var meta={relativePath:relativePath===undefined?route.path||\"\":relativePath,caseSensitive:route.caseSensitive===true,childrenIndex:index,route:route};if(meta.relativePath.startsWith(\"/\")){invariant(meta.relativePath.startsWith(parentPath),\"Absolute route path \\\"\"+meta.relativePath+\"\\\" nested under path \"+(\"\\\"\"+parentPath+\"\\\" is not valid. An absolute child route path \")+\"must start with the combined path of all its parent routes.\");meta.relativePath=meta.relativePath.slice(parentPath.length);}var path=joinPaths([parentPath,meta.relativePath]);var routesMeta=parentsMeta.concat(meta);// Add the children before adding this route to the array so we traverse the\n// route tree depth-first and child routes appear before their parents in\n// the \"flattened\" version.\nif(route.children&&route.children.length>0){invariant(// Our types know better, but runtime JS may not!\n// @ts-expect-error\nroute.index!==true,\"Index routes must not have child routes. Please remove \"+(\"all child routes from route path \\\"\"+path+\"\\\".\"));flattenRoutes(route.children,branches,routesMeta,path);}// Routes without a path shouldn't ever match by themselves unless they are\n// index routes, so don't add them to the list of possible branches.\nif(route.path==null&&!route.index){return;}branches.push({path:path,score:computeScore(path,route.index),routesMeta:routesMeta});};routes.forEach(function(route,index){var _route$path;// coarse-grain check for optional params\nif(route.path===\"\"||!((_route$path=route.path)!=null&&_route$path.includes(\"?\"))){flattenRoute(route,index);}else{var _iterator=_createForOfIteratorHelper(explodeOptionalSegments(route.path)),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var exploded=_step.value;flattenRoute(route,index,exploded);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}});return branches;}/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */function explodeOptionalSegments(path){var segments=path.split(\"/\");if(segments.length===0)return[];var _segments=_toArray(segments),first=_segments[0],rest=_segments.slice(1);// Optional path segments are denoted by a trailing `?`\nvar isOptional=first.endsWith(\"?\");// Compute the corresponding required segment: `foo?` -> `foo`\nvar required=first.replace(/\\?$/,\"\");if(rest.length===0){// Intepret empty string as omitting an optional segment\n// `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\nreturn isOptional?[required,\"\"]:[required];}var restExploded=explodeOptionalSegments(rest.join(\"/\"));var result=[];// All child paths with the prefix.  Do this for all children before the\n// optional version for all children so we get consistent ordering where the\n// parent optional aspect is preferred as required.  Otherwise, we can get\n// child sections interspersed where deeper optional segments are higher than\n// parent optional segments, where for example, /:two would explodes _earlier_\n// then /:one.  By always including the parent as required _for all children_\n// first, we avoid this issue\nresult.push.apply(result,_toConsumableArray(restExploded.map(function(subpath){return subpath===\"\"?required:[required,subpath].join(\"/\");})));// Then if this is an optional value, add all child versions without\nif(isOptional){result.push.apply(result,_toConsumableArray(restExploded));}// for absolute paths, ensure `/` instead of empty segment\nreturn result.map(function(exploded){return path.startsWith(\"/\")&&exploded===\"\"?\"/\":exploded;});}function rankRouteBranches(branches){branches.sort(function(a,b){return a.score!==b.score?b.score-a.score// Higher score first\n:compareIndexes(a.routesMeta.map(function(meta){return meta.childrenIndex;}),b.routesMeta.map(function(meta){return meta.childrenIndex;}));});}var paramRe=/^:\\w+$/;var dynamicSegmentValue=3;var indexRouteValue=2;var emptySegmentValue=1;var staticSegmentValue=10;var splatPenalty=-2;var isSplat=function isSplat(s){return s===\"*\";};function computeScore(path,index){var segments=path.split(\"/\");var initialScore=segments.length;if(segments.some(isSplat)){initialScore+=splatPenalty;}if(index){initialScore+=indexRouteValue;}return segments.filter(function(s){return!isSplat(s);}).reduce(function(score,segment){return score+(paramRe.test(segment)?dynamicSegmentValue:segment===\"\"?emptySegmentValue:staticSegmentValue);},initialScore);}function compareIndexes(a,b){var siblings=a.length===b.length&&a.slice(0,-1).every(function(n,i){return n===b[i];});return siblings?// If two routes are siblings, we should try to match the earlier sibling\n// first. This allows people to have fine-grained control over the matching\n// behavior by simply putting routes with identical paths in the order they\n// want them tried.\na[a.length-1]-b[b.length-1]:// Otherwise, it doesn't really make sense to rank non-siblings by index,\n// so they sort equally.\n0;}function matchRouteBranch(branch,pathname){var routesMeta=branch.routesMeta;var matchedParams={};var matchedPathname=\"/\";var matches=[];for(var i=0;i<routesMeta.length;++i){var meta=routesMeta[i];var end=i===routesMeta.length-1;var remainingPathname=matchedPathname===\"/\"?pathname:pathname.slice(matchedPathname.length)||\"/\";var match=matchPath({path:meta.relativePath,caseSensitive:meta.caseSensitive,end:end},remainingPathname);if(!match)return null;Object.assign(matchedParams,match.params);var route=meta.route;matches.push({// TODO: Can this as be avoided?\nparams:matchedParams,pathname:joinPaths([matchedPathname,match.pathname]),pathnameBase:normalizePathname(joinPaths([matchedPathname,match.pathnameBase])),route:route});if(match.pathnameBase!==\"/\"){matchedPathname=joinPaths([matchedPathname,match.pathnameBase]);}}return matches;}/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */function generatePath(originalPath,params){if(params===void 0){params={};}var path=originalPath;if(path.endsWith(\"*\")&&path!==\"*\"&&!path.endsWith(\"/*\")){warning(false,\"Route path \\\"\"+path+\"\\\" will be treated as if it were \"+(\"\\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\" because the `*` character must \")+\"always follow a `/` in the pattern. To get rid of this warning, \"+(\"please change the route path to \\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\".\"));path=path.replace(/\\*$/,\"/*\");}// ensure `/` is added at the beginning if the path is absolute\nvar prefix=path.startsWith(\"/\")?\"/\":\"\";var segments=path.split(/\\/+/).map(function(segment,index,array){var isLastSegment=index===array.length-1;// only apply the splat if it's the last segment\nif(isLastSegment&&segment===\"*\"){var star=\"*\";var starParam=params[star];// Apply the splat\nreturn starParam;}var keyMatch=segment.match(/^:(\\w+)(\\??)$/);if(keyMatch){var _keyMatch=_slicedToArray(keyMatch,3),key=_keyMatch[1],optional=_keyMatch[2];var param=params[key];if(optional===\"?\"){return param==null?\"\":param;}if(param==null){invariant(false,\"Missing \\\":\"+key+\"\\\" param\");}return param;}// Remove any optional markers from optional static segments\nreturn segment.replace(/\\?$/g,\"\");})// Remove empty segments\n.filter(function(segment){return!!segment;});return prefix+segments.join(\"/\");}/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */function matchPath(pattern,pathname){if(typeof pattern===\"string\"){pattern={path:pattern,caseSensitive:false,end:true};}var _compilePath=compilePath(pattern.path,pattern.caseSensitive,pattern.end),_compilePath2=_slicedToArray(_compilePath,2),matcher=_compilePath2[0],paramNames=_compilePath2[1];var match=pathname.match(matcher);if(!match)return null;var matchedPathname=match[0];var pathnameBase=matchedPathname.replace(/(.)\\/+$/,\"$1\");var captureGroups=match.slice(1);var params=paramNames.reduce(function(memo,paramName,index){// We need to compute the pathnameBase here using the raw splat value\n// instead of using params[\"*\"] later because it will be decoded then\nif(paramName===\"*\"){var splatValue=captureGroups[index]||\"\";pathnameBase=matchedPathname.slice(0,matchedPathname.length-splatValue.length).replace(/(.)\\/+$/,\"$1\");}memo[paramName]=safelyDecodeURIComponent(captureGroups[index]||\"\",paramName);return memo;},{});return{params:params,pathname:matchedPathname,pathnameBase:pathnameBase,pattern:pattern};}function compilePath(path,caseSensitive,end){if(caseSensitive===void 0){caseSensitive=false;}if(end===void 0){end=true;}warning(path===\"*\"||!path.endsWith(\"*\")||path.endsWith(\"/*\"),\"Route path \\\"\"+path+\"\\\" will be treated as if it were \"+(\"\\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\" because the `*` character must \")+\"always follow a `/` in the pattern. To get rid of this warning, \"+(\"please change the route path to \\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\".\"));var paramNames=[];var regexpSource=\"^\"+path.replace(/\\/*\\*?$/,\"\")// Ignore trailing / and /*, we'll handle it below\n.replace(/^\\/*/,\"/\")// Make sure it has a leading /\n.replace(/[\\\\.*+^$?{}|()[\\]]/g,\"\\\\$&\")// Escape special regex chars\n.replace(/\\/:(\\w+)/g,function(_,paramName){paramNames.push(paramName);return\"/([^\\\\/]+)\";});if(path.endsWith(\"*\")){paramNames.push(\"*\");regexpSource+=path===\"*\"||path===\"/*\"?\"(.*)$\"// Already matched the initial /, just match the rest\n:\"(?:\\\\/(.+)|\\\\/*)$\";// Don't include the / in params[\"*\"]\n}else if(end){// When matching to the end, ignore trailing slashes\nregexpSource+=\"\\\\/*$\";}else if(path!==\"\"&&path!==\"/\"){// If our path is non-empty and contains anything beyond an initial slash,\n// then we have _some_ form of path in our regex so we should expect to\n// match only if we find the end of this path segment.  Look for an optional\n// non-captured trailing slash (to match a portion of the URL) or the end\n// of the path (if we've matched to the end).  We used to do this with a\n// word boundary but that gives false positives on routes like\n// /user-preferences since `-` counts as a word boundary.\nregexpSource+=\"(?:(?=\\\\/|$))\";}else;var matcher=new RegExp(regexpSource,caseSensitive?undefined:\"i\");return[matcher,paramNames];}function safelyDecodeURI(value){try{return decodeURI(value);}catch(error){warning(false,\"The URL path \\\"\"+value+\"\\\" could not be decoded because it is is a \"+\"malformed URL segment. This is probably due to a bad percent \"+(\"encoding (\"+error+\").\"));return value;}}function safelyDecodeURIComponent(value,paramName){try{return decodeURIComponent(value);}catch(error){warning(false,\"The value for the URL param \\\"\"+paramName+\"\\\" will not be decoded because\"+(\" the string \\\"\"+value+\"\\\" is a malformed URL segment. This is probably\")+(\" due to a bad percent encoding (\"+error+\").\"));return value;}}/**\n * @private\n */function stripBasename(pathname,basename){if(basename===\"/\")return pathname;if(!pathname.toLowerCase().startsWith(basename.toLowerCase())){return null;}// We want to leave trailing slash behavior in the user's control, so if they\n// specify a basename with a trailing slash, we should support it\nvar startIndex=basename.endsWith(\"/\")?basename.length-1:basename.length;var nextChar=pathname.charAt(startIndex);if(nextChar&&nextChar!==\"/\"){// pathname does not start with basename/\nreturn null;}return pathname.slice(startIndex)||\"/\";}/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */function resolvePath(to,fromPathname){if(fromPathname===void 0){fromPathname=\"/\";}var _ref3=typeof to===\"string\"?parsePath(to):to,toPathname=_ref3.pathname,_ref3$search=_ref3.search,search=_ref3$search===void 0?\"\":_ref3$search,_ref3$hash=_ref3.hash,hash=_ref3$hash===void 0?\"\":_ref3$hash;var pathname=toPathname?toPathname.startsWith(\"/\")?toPathname:resolvePathname(toPathname,fromPathname):fromPathname;return{pathname:pathname,search:normalizeSearch(search),hash:normalizeHash(hash)};}function resolvePathname(relativePath,fromPathname){var segments=fromPathname.replace(/\\/+$/,\"\").split(\"/\");var relativeSegments=relativePath.split(\"/\");relativeSegments.forEach(function(segment){if(segment===\"..\"){// Keep the root \"\" segment so the pathname starts at /\nif(segments.length>1)segments.pop();}else if(segment!==\".\"){segments.push(segment);}});return segments.length>1?segments.join(\"/\"):\"/\";}function getInvalidPathError(char,field,dest,path){return\"Cannot include a '\"+char+\"' character in a manually specified \"+(\"`to.\"+field+\"` field [\"+JSON.stringify(path)+\"].  Please separate it out to the \")+(\"`to.\"+dest+\"` field. Alternatively you may provide the full path as \")+\"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";}/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */function getPathContributingMatches(matches){return matches.filter(function(match,index){return index===0||match.route.path&&match.route.path.length>0;});}/**\n * @private\n */function resolveTo(toArg,routePathnames,locationPathname,isPathRelative){if(isPathRelative===void 0){isPathRelative=false;}var to;if(typeof toArg===\"string\"){to=parsePath(toArg);}else{to=_extends({},toArg);invariant(!to.pathname||!to.pathname.includes(\"?\"),getInvalidPathError(\"?\",\"pathname\",\"search\",to));invariant(!to.pathname||!to.pathname.includes(\"#\"),getInvalidPathError(\"#\",\"pathname\",\"hash\",to));invariant(!to.search||!to.search.includes(\"#\"),getInvalidPathError(\"#\",\"search\",\"hash\",to));}var isEmptyPath=toArg===\"\"||to.pathname===\"\";var toPathname=isEmptyPath?\"/\":to.pathname;var from;// Routing is relative to the current pathname if explicitly requested.\n//\n// If a pathname is explicitly provided in `to`, it should be relative to the\n// route context. This is explained in `Note on `<Link to>` values` in our\n// migration guide from v5 as a means of disambiguation between `to` values\n// that begin with `/` and those that do not. However, this is problematic for\n// `to` values that do not provide a pathname. `to` can simply be a search or\n// hash string, in which case we should assume that the navigation is relative\n// to the current location's pathname and *not* the route pathname.\nif(isPathRelative||toPathname==null){from=locationPathname;}else{var routePathnameIndex=routePathnames.length-1;if(toPathname.startsWith(\"..\")){var toSegments=toPathname.split(\"/\");// Each leading .. segment means \"go up one route\" instead of \"go up one\n// URL segment\".  This is a key difference from how <a href> works and a\n// major reason we call this a \"to\" value instead of a \"href\".\nwhile(toSegments[0]===\"..\"){toSegments.shift();routePathnameIndex-=1;}to.pathname=toSegments.join(\"/\");}// If there are more \"..\" segments than parent routes, resolve relative to\n// the root / URL.\nfrom=routePathnameIndex>=0?routePathnames[routePathnameIndex]:\"/\";}var path=resolvePath(to,from);// Ensure the pathname has a trailing slash if the original \"to\" had one\nvar hasExplicitTrailingSlash=toPathname&&toPathname!==\"/\"&&toPathname.endsWith(\"/\");// Or if this was a link to the current path which has a trailing slash\nvar hasCurrentTrailingSlash=(isEmptyPath||toPathname===\".\")&&locationPathname.endsWith(\"/\");if(!path.pathname.endsWith(\"/\")&&(hasExplicitTrailingSlash||hasCurrentTrailingSlash)){path.pathname+=\"/\";}return path;}/**\n * @private\n */function getToPathname(to){// Empty strings should be treated the same as / paths\nreturn to===\"\"||to.pathname===\"\"?\"/\":typeof to===\"string\"?parsePath(to).pathname:to.pathname;}/**\n * @private\n */var joinPaths=function joinPaths(paths){return paths.join(\"/\").replace(/\\/\\/+/g,\"/\");};/**\n * @private\n */var normalizePathname=function normalizePathname(pathname){return pathname.replace(/\\/+$/,\"\").replace(/^\\/*/,\"/\");};/**\n * @private\n */var normalizeSearch=function normalizeSearch(search){return!search||search===\"?\"?\"\":search.startsWith(\"?\")?search:\"?\"+search;};/**\n * @private\n */var normalizeHash=function normalizeHash(hash){return!hash||hash===\"#\"?\"\":hash.startsWith(\"#\")?hash:\"#\"+hash;};/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */var json=function json(data,init){if(init===void 0){init={};}var responseInit=typeof init===\"number\"?{status:init}:init;var headers=new Headers(responseInit.headers);if(!headers.has(\"Content-Type\")){headers.set(\"Content-Type\",\"application/json; charset=utf-8\");}return new Response(JSON.stringify(data),_extends({},responseInit,{headers:headers}));};var AbortedDeferredError=/*#__PURE__*/function(_Error){_inherits(AbortedDeferredError,_Error);var _super=_createSuper(AbortedDeferredError);function AbortedDeferredError(){_classCallCheck(this,AbortedDeferredError);return _super.apply(this,arguments);}return _createClass(AbortedDeferredError);}(/*#__PURE__*/_wrapNativeSuper(Error));var DeferredData=/*#__PURE__*/function(){function DeferredData(data,responseInit){var _this=this;_classCallCheck(this,DeferredData);this.pendingKeysSet=new Set();this.subscribers=new Set();this.deferredKeys=[];invariant(data&&typeof data===\"object\"&&!Array.isArray(data),\"defer() only accepts plain objects\");// Set up an AbortController + Promise we can race against to exit early\n// cancellation\nvar reject;this.abortPromise=new Promise(function(_,r){return reject=r;});this.controller=new AbortController();var onAbort=function onAbort(){return reject(new AbortedDeferredError(\"Deferred data aborted\"));};this.unlistenAbortSignal=function(){return _this.controller.signal.removeEventListener(\"abort\",onAbort);};this.controller.signal.addEventListener(\"abort\",onAbort);this.data=Object.entries(data).reduce(function(acc,_ref){var _ref4=_slicedToArray(_ref,2),key=_ref4[0],value=_ref4[1];return Object.assign(acc,_defineProperty({},key,_this.trackPromise(key,value)));},{});if(this.done){// All incoming values were resolved\nthis.unlistenAbortSignal();}this.init=responseInit;}_createClass(DeferredData,[{key:\"trackPromise\",value:function trackPromise(key,value){var _this2=this;if(!(value instanceof Promise)){return value;}this.deferredKeys.push(key);this.pendingKeysSet.add(key);// We store a little wrapper promise that will be extended with\n// _data/_error props upon resolve/reject\nvar promise=Promise.race([value,this.abortPromise]).then(function(data){return _this2.onSettle(promise,key,null,data);},function(error){return _this2.onSettle(promise,key,error);});// Register rejection listeners to avoid uncaught promise rejections on\n// errors or aborted deferred values\npromise.catch(function(){});Object.defineProperty(promise,\"_tracked\",{get:function get(){return true;}});return promise;}},{key:\"onSettle\",value:function onSettle(promise,key,error,data){if(this.controller.signal.aborted&&error instanceof AbortedDeferredError){this.unlistenAbortSignal();Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});return Promise.reject(error);}this.pendingKeysSet.delete(key);if(this.done){// Nothing left to abort!\nthis.unlistenAbortSignal();}if(error){Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});this.emit(false,key);return Promise.reject(error);}Object.defineProperty(promise,\"_data\",{get:function get(){return data;}});this.emit(false,key);return data;}},{key:\"emit\",value:function emit(aborted,settledKey){this.subscribers.forEach(function(subscriber){return subscriber(aborted,settledKey);});}},{key:\"subscribe\",value:function subscribe(fn){var _this3=this;this.subscribers.add(fn);return function(){return _this3.subscribers.delete(fn);};}},{key:\"cancel\",value:function cancel(){var _this4=this;this.controller.abort();this.pendingKeysSet.forEach(function(v,k){return _this4.pendingKeysSet.delete(k);});this.emit(true);}},{key:\"resolveData\",value:function(){var _resolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(signal){var _this5=this;var aborted,onAbort;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:aborted=false;if(this.done){_context.next=7;break;}onAbort=function onAbort(){return _this5.cancel();};signal.addEventListener(\"abort\",onAbort);_context.next=6;return new Promise(function(resolve){_this5.subscribe(function(aborted){signal.removeEventListener(\"abort\",onAbort);if(aborted||_this5.done){resolve(aborted);}});});case 6:aborted=_context.sent;case 7:return _context.abrupt(\"return\",aborted);case 8:case\"end\":return _context.stop();}},_callee,this);}));function resolveData(_x){return _resolveData.apply(this,arguments);}return resolveData;}()},{key:\"done\",get:function get(){return this.pendingKeysSet.size===0;}},{key:\"unwrappedData\",get:function get(){invariant(this.data!==null&&this.done,\"Can only unwrap data on initialized and settled deferreds\");return Object.entries(this.data).reduce(function(acc,_ref2){var _ref5=_slicedToArray(_ref2,2),key=_ref5[0],value=_ref5[1];return Object.assign(acc,_defineProperty({},key,unwrapTrackedPromise(value)));},{});}},{key:\"pendingKeys\",get:function get(){return Array.from(this.pendingKeysSet);}}]);return DeferredData;}();function isTrackedPromise(value){return value instanceof Promise&&value._tracked===true;}function unwrapTrackedPromise(value){if(!isTrackedPromise(value)){return value;}if(value._error){throw value._error;}return value._data;}var defer=function defer(data,init){if(init===void 0){init={};}var responseInit=typeof init===\"number\"?{status:init}:init;return new DeferredData(data,responseInit);};/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */var redirect=function redirect(url,init){if(init===void 0){init=302;}var responseInit=init;if(typeof responseInit===\"number\"){responseInit={status:responseInit};}else if(typeof responseInit.status===\"undefined\"){responseInit.status=302;}var headers=new Headers(responseInit.headers);headers.set(\"Location\",url);return new Response(null,_extends({},responseInit,{headers:headers}));};/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */var ErrorResponse=/*#__PURE__*/_createClass(function ErrorResponse(status,statusText,data,internal){_classCallCheck(this,ErrorResponse);if(internal===void 0){internal=false;}this.status=status;this.statusText=statusText||\"\";this.internal=internal;if(data instanceof Error){this.data=data.toString();this.error=data;}else{this.data=data;}});/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */function isRouteErrorResponse(error){return error!=null&&typeof error.status===\"number\"&&typeof error.statusText===\"string\"&&typeof error.internal===\"boolean\"&&\"data\"in error;}var validMutationMethodsArr=[\"post\",\"put\",\"patch\",\"delete\"];var validMutationMethods=new Set(validMutationMethodsArr);var validRequestMethodsArr=[\"get\"].concat(validMutationMethodsArr);var validRequestMethods=new Set(validRequestMethodsArr);var redirectStatusCodes=new Set([301,302,303,307,308]);var redirectPreserveMethodStatusCodes=new Set([307,308]);var IDLE_NAVIGATION={state:\"idle\",location:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};var IDLE_FETCHER={state:\"idle\",data:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined};var IDLE_BLOCKER={state:\"unblocked\",proceed:undefined,reset:undefined,location:undefined};var ABSOLUTE_URL_REGEX=/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;var defaultMapRouteProperties=function defaultMapRouteProperties(route){return{hasErrorBoundary:Boolean(route.hasErrorBoundary)};};//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */function createRouter(init){var routerWindow=init.window?init.window:typeof window!==\"undefined\"?window:undefined;var isBrowser=typeof routerWindow!==\"undefined\"&&typeof routerWindow.document!==\"undefined\"&&typeof routerWindow.document.createElement!==\"undefined\";var isServer=!isBrowser;invariant(init.routes.length>0,\"You must provide a non-empty routes array to createRouter\");var mapRouteProperties;if(init.mapRouteProperties){mapRouteProperties=init.mapRouteProperties;}else if(init.detectErrorBoundary){// If they are still using the deprecated version, wrap it with the new API\nvar detectErrorBoundary=init.detectErrorBoundary;mapRouteProperties=function mapRouteProperties(route){return{hasErrorBoundary:detectErrorBoundary(route)};};}else{mapRouteProperties=defaultMapRouteProperties;}// Routes keyed by ID\nvar manifest={};// Routes in tree format for matching\nvar dataRoutes=convertRoutesToDataRoutes(init.routes,mapRouteProperties,undefined,manifest);var inFlightDataRoutes;var basename=init.basename||\"/\";// Config driven behavior flags\nvar future=_extends({v7_normalizeFormMethod:false,v7_prependBasename:false},init.future);// Cleanup function for history\nvar unlistenHistory=null;// Externally-provided functions to call on all state changes\nvar subscribers=new Set();// Externally-provided object to hold scroll restoration locations during routing\nvar savedScrollPositions=null;// Externally-provided function to get scroll restoration keys\nvar getScrollRestorationKey=null;// Externally-provided function to get current scroll position\nvar getScrollPosition=null;// One-time flag to control the initial hydration scroll restoration.  Because\n// we don't get the saved positions from <ScrollRestoration /> until _after_\n// the initial render, we need to manually trigger a separate updateState to\n// send along the restoreScrollPosition\n// Set to true if we have `hydrationData` since we assume we were SSR'd and that\n// SSR did the initial scroll restoration.\nvar initialScrollRestored=init.hydrationData!=null;var initialMatches=matchRoutes(dataRoutes,init.history.location,basename);var initialErrors=null;if(initialMatches==null){// If we do not match a user-provided-route, fall back to the root\n// to allow the error boundary to take over\nvar error=getInternalRouterError(404,{pathname:init.history.location.pathname});var _getShortCircuitMatch=getShortCircuitMatches(dataRoutes),matches=_getShortCircuitMatch.matches,route=_getShortCircuitMatch.route;initialMatches=matches;initialErrors=_defineProperty({},route.id,error);}var initialized=// All initialMatches need to be loaded before we're ready.  If we have lazy\n// functions around still then we'll need to run them in initialize()\n!initialMatches.some(function(m){return m.route.lazy;})&&(// And we have to either have no loaders or have been provided hydrationData\n!initialMatches.some(function(m){return m.route.loader;})||init.hydrationData!=null);var router;var state={historyAction:init.history.action,location:init.history.location,matches:initialMatches,initialized:initialized,navigation:IDLE_NAVIGATION,// Don't restore on initial updateState() if we were SSR'd\nrestoreScrollPosition:init.hydrationData!=null?false:null,preventScrollReset:false,revalidation:\"idle\",loaderData:init.hydrationData&&init.hydrationData.loaderData||{},actionData:init.hydrationData&&init.hydrationData.actionData||null,errors:init.hydrationData&&init.hydrationData.errors||initialErrors,fetchers:new Map(),blockers:new Map()};// -- Stateful internal variables to manage navigations --\n// Current navigation in progress (to be committed in completeNavigation)\nvar pendingAction=Action.Pop;// Should the current navigation prevent the scroll reset if scroll cannot\n// be restored?\nvar pendingPreventScrollReset=false;// AbortController for the active navigation\nvar pendingNavigationController;// We use this to avoid touching history in completeNavigation if a\n// revalidation is entirely uninterrupted\nvar isUninterruptedRevalidation=false;// Use this internal flag to force revalidation of all loaders:\n//  - submissions (completed or interrupted)\n//  - useRevalidator()\n//  - X-Remix-Revalidate (from redirect)\nvar isRevalidationRequired=false;// Use this internal array to capture routes that require revalidation due\n// to a cancelled deferred on action submission\nvar cancelledDeferredRoutes=[];// Use this internal array to capture fetcher loads that were cancelled by an\n// action navigation and require revalidation\nvar cancelledFetcherLoads=[];// AbortControllers for any in-flight fetchers\nvar fetchControllers=new Map();// Track loads based on the order in which they started\nvar incrementingLoadId=0;// Track the outstanding pending navigation data load to be compared against\n// the globally incrementing load when a fetcher load lands after a completed\n// navigation\nvar pendingNavigationLoadId=-1;// Fetchers that triggered data reloads as a result of their actions\nvar fetchReloadIds=new Map();// Fetchers that triggered redirect navigations\nvar fetchRedirectIds=new Set();// Most recent href/match for fetcher.load calls for fetchers\nvar fetchLoadMatches=new Map();// Store DeferredData instances for active route matches.  When a\n// route loader returns defer() we stick one in here.  Then, when a nested\n// promise resolves we update loaderData.  If a new navigation starts we\n// cancel active deferreds for eliminated routes.\nvar activeDeferreds=new Map();// Store blocker functions in a separate Map outside of router state since\n// we don't need to update UI state if they change\nvar blockerFunctions=new Map();// Flag to ignore the next history update, so we can revert the URL change on\n// a POP navigation that was blocked by the user without touching router state\nvar ignoreNextHistoryUpdate=false;// Initialize the router, all side effects should be kicked off from here.\n// Implemented as a Fluent API for ease of:\n//   let router = createRouter(init).initialize();\nfunction initialize(){// If history informs us of a POP navigation, start the navigation but do not update\n// state.  We'll update our own state once the navigation completes\nunlistenHistory=init.history.listen(function(_ref){var historyAction=_ref.action,location=_ref.location,delta=_ref.delta;// Ignore this event if it was just us resetting the URL from a\n// blocked POP navigation\nif(ignoreNextHistoryUpdate){ignoreNextHistoryUpdate=false;return;}warning(blockerFunctions.size===0||delta!=null,\"You are trying to use a blocker on a POP navigation to a location \"+\"that was not created by @remix-run/router. This will fail silently in \"+\"production. This can happen if you are navigating outside the router \"+\"via `window.history.pushState`/`window.location.hash` instead of using \"+\"router navigation APIs.  This can also happen if you are using \"+\"createHashRouter and the user manually changes the URL.\");var blockerKey=shouldBlockNavigation({currentLocation:state.location,nextLocation:location,historyAction:historyAction});if(blockerKey&&delta!=null){// Restore the URL to match the current UI, but don't update router state\nignoreNextHistoryUpdate=true;init.history.go(delta*-1);// Put the blocker into a blocked state\nupdateBlocker(blockerKey,{state:\"blocked\",location:location,proceed:function proceed(){updateBlocker(blockerKey,{state:\"proceeding\",proceed:undefined,reset:undefined,location:location});// Re-do the same POP navigation we just blocked\ninit.history.go(delta);},reset:function reset(){deleteBlocker(blockerKey);updateState({blockers:new Map(router.state.blockers)});}});return;}return startNavigation(historyAction,location);});// Kick off initial data load if needed.  Use Pop to avoid modifying history\n// Note we don't do any handling of lazy here.  For SPA's it'll get handled\n// in the normal navigation flow.  For SSR it's expected that lazy modules are\n// resolved prior to router creation since we can't go into a fallbackElement\n// UI for SSR'd apps\nif(!state.initialized){startNavigation(Action.Pop,state.location);}return router;}// Clean up a router and it's side effects\nfunction dispose(){if(unlistenHistory){unlistenHistory();}subscribers.clear();pendingNavigationController&&pendingNavigationController.abort();state.fetchers.forEach(function(_,key){return deleteFetcher(key);});state.blockers.forEach(function(_,key){return deleteBlocker(key);});}// Subscribe to state updates for the router\nfunction subscribe(fn){subscribers.add(fn);return function(){return subscribers.delete(fn);};}// Update our state and notify the calling context of the change\nfunction updateState(newState){state=_extends({},state,newState);subscribers.forEach(function(subscriber){return subscriber(state);});}// Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n// and setting state.[historyAction/location/matches] to the new route.\n// - Location is a required param\n// - Navigation will always be set to IDLE_NAVIGATION\n// - Can pass any other state in newState\nfunction completeNavigation(location,newState){var _location$state,_location$state2;// Deduce if we're in a loading/actionReload state:\n// - We have committed actionData in the store\n// - The current navigation was a mutation submission\n// - We're past the submitting state and into the loading state\n// - The location being loaded is not the result of a redirect\nvar isActionReload=state.actionData!=null&&state.navigation.formMethod!=null&&isMutationMethod(state.navigation.formMethod)&&state.navigation.state===\"loading\"&&((_location$state=location.state)==null?void 0:_location$state._isRedirect)!==true;var actionData;if(newState.actionData){if(Object.keys(newState.actionData).length>0){actionData=newState.actionData;}else{// Empty actionData -> clear prior actionData due to an action error\nactionData=null;}}else if(isActionReload){// Keep the current data if we're wrapping up the action reload\nactionData=state.actionData;}else{// Clear actionData on any other completed navigations\nactionData=null;}// Always preserve any existing loaderData from re-used routes\nvar loaderData=newState.loaderData?mergeLoaderData(state.loaderData,newState.loaderData,newState.matches||[],newState.errors):state.loaderData;// On a successful navigation we can assume we got through all blockers\n// so we can start fresh\nvar _iterator2=_createForOfIteratorHelper(blockerFunctions),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _step2$value=_slicedToArray(_step2.value,1),key=_step2$value[0];deleteBlocker(key);}// Always respect the user flag.  Otherwise don't reset on mutation\n// submission navigations unless they redirect\n}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var preventScrollReset=pendingPreventScrollReset===true||state.navigation.formMethod!=null&&isMutationMethod(state.navigation.formMethod)&&((_location$state2=location.state)==null?void 0:_location$state2._isRedirect)!==true;if(inFlightDataRoutes){dataRoutes=inFlightDataRoutes;inFlightDataRoutes=undefined;}updateState(_extends({},newState,{actionData:actionData,loaderData:loaderData,historyAction:pendingAction,location:location,initialized:true,navigation:IDLE_NAVIGATION,revalidation:\"idle\",restoreScrollPosition:getSavedScrollPosition(location,newState.matches||state.matches),preventScrollReset:preventScrollReset,blockers:new Map(state.blockers)}));if(isUninterruptedRevalidation);else if(pendingAction===Action.Pop);else if(pendingAction===Action.Push){init.history.push(location,location.state);}else if(pendingAction===Action.Replace){init.history.replace(location,location.state);}// Reset stateful navigation vars\npendingAction=Action.Pop;pendingPreventScrollReset=false;isUninterruptedRevalidation=false;isRevalidationRequired=false;cancelledDeferredRoutes=[];cancelledFetcherLoads=[];}// Trigger a navigation event, which can either be a numerical POP or a PUSH\n// replace with an optional submission\nfunction navigate(_x2,_x3){return _navigate.apply(this,arguments);}// Revalidate all current loaders.  If a navigation is in progress or if this\n// is interrupted by a navigation, allow this to \"succeed\" by calling all\n// loaders during the next loader round\nfunction _navigate(){_navigate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(to,opts){var normalizedPath,_normalizeNavigateOpt2,path,submission,error,currentLocation,nextLocation,userReplace,historyAction,preventScrollReset,blockerKey;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(typeof to===\"number\")){_context2.next=3;break;}init.history.go(to);return _context2.abrupt(\"return\");case 3:normalizedPath=normalizeTo(state.location,state.matches,basename,future.v7_prependBasename,to,opts==null?void 0:opts.fromRouteId,opts==null?void 0:opts.relative);_normalizeNavigateOpt2=normalizeNavigateOptions(future.v7_normalizeFormMethod,false,normalizedPath,opts),path=_normalizeNavigateOpt2.path,submission=_normalizeNavigateOpt2.submission,error=_normalizeNavigateOpt2.error;currentLocation=state.location;nextLocation=createLocation(state.location,path,opts&&opts.state);// When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n// URL from window.location, so we need to encode it here so the behavior\n// remains the same as POP and non-data-router usages.  new URL() does all\n// the same encoding we'd get from a history.pushState/window.location read\n// without having to touch history\nnextLocation=_extends({},nextLocation,init.history.encodeLocation(nextLocation));userReplace=opts&&opts.replace!=null?opts.replace:undefined;historyAction=Action.Push;if(userReplace===true){historyAction=Action.Replace;}else if(userReplace===false);else if(submission!=null&&isMutationMethod(submission.formMethod)&&submission.formAction===state.location.pathname+state.location.search){// By default on submissions to the current location we REPLACE so that\n// users don't have to double-click the back button to get to the prior\n// location.  If the user redirects to a different location from the\n// action/loader this will be ignored and the redirect will be a PUSH\nhistoryAction=Action.Replace;}preventScrollReset=opts&&\"preventScrollReset\"in opts?opts.preventScrollReset===true:undefined;blockerKey=shouldBlockNavigation({currentLocation:currentLocation,nextLocation:nextLocation,historyAction:historyAction});if(!blockerKey){_context2.next=16;break;}// Put the blocker into a blocked state\nupdateBlocker(blockerKey,{state:\"blocked\",location:nextLocation,proceed:function proceed(){updateBlocker(blockerKey,{state:\"proceeding\",proceed:undefined,reset:undefined,location:nextLocation});// Send the same navigation through\nnavigate(to,opts);},reset:function reset(){deleteBlocker(blockerKey);updateState({blockers:new Map(state.blockers)});}});return _context2.abrupt(\"return\");case 16:_context2.next=18;return startNavigation(historyAction,nextLocation,{submission:submission,// Send through the formData serialization error if we have one so we can\n// render at the right error boundary after we match routes\npendingError:error,preventScrollReset:preventScrollReset,replace:opts&&opts.replace});case 18:return _context2.abrupt(\"return\",_context2.sent);case 19:case\"end\":return _context2.stop();}},_callee2);}));return _navigate.apply(this,arguments);}function revalidate(){interruptActiveLoads();updateState({revalidation:\"loading\"});// If we're currently submitting an action, we don't need to start a new\n// navigation, we'll just let the follow up loader execution call all loaders\nif(state.navigation.state===\"submitting\"){return;}// If we're currently in an idle state, start a new navigation for the current\n// action/location and mark it as uninterrupted, which will skip the history\n// update in completeNavigation\nif(state.navigation.state===\"idle\"){startNavigation(state.historyAction,state.location,{startUninterruptedRevalidation:true});return;}// Otherwise, if we're currently in a loading state, just start a new\n// navigation to the navigation.location but do not trigger an uninterrupted\n// revalidation so that history correctly updates once the navigation completes\nstartNavigation(pendingAction||state.historyAction,state.navigation.location,{overrideNavigation:state.navigation});}// Start a navigation to the given action/location.  Can optionally provide a\n// overrideNavigation which will override the normalLoad in the case of a redirect\n// navigation\nfunction startNavigation(_x4,_x5,_x6){return _startNavigation.apply(this,arguments);}// Call the action matched by the leaf route for this navigation and handle\n// redirects/errors\nfunction _startNavigation(){_startNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(historyAction,location,opts){var routesToUse,loadingNavigation,matches,_error,_getShortCircuitMatch2,notFoundMatches,_route,request,pendingActionData,pendingError,actionOutput,navigation,_yield$handleLoaders,shortCircuited,loaderData,errors;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:// Abort any in-progress navigations and start a new one. Unset any ongoing\n// uninterrupted revalidations unless told otherwise, since we want this\n// new navigation to update history normally\npendingNavigationController&&pendingNavigationController.abort();pendingNavigationController=null;pendingAction=historyAction;isUninterruptedRevalidation=(opts&&opts.startUninterruptedRevalidation)===true;// Save the current scroll position every time we start a new navigation,\n// and track whether we should reset scroll on completion\nsaveScrollPosition(state.location,state.matches);pendingPreventScrollReset=(opts&&opts.preventScrollReset)===true;routesToUse=inFlightDataRoutes||dataRoutes;loadingNavigation=opts&&opts.overrideNavigation;matches=matchRoutes(routesToUse,location,basename);// Short circuit with a 404 on the root error boundary if we match nothing\nif(matches){_context3.next=15;break;}_error=getInternalRouterError(404,{pathname:location.pathname});_getShortCircuitMatch2=getShortCircuitMatches(routesToUse),notFoundMatches=_getShortCircuitMatch2.matches,_route=_getShortCircuitMatch2.route;// Cancel all pending deferred on 404s since we don't keep any routes\ncancelActiveDeferreds();completeNavigation(location,{matches:notFoundMatches,loaderData:{},errors:_defineProperty({},_route.id,_error)});return _context3.abrupt(\"return\");case 15:if(!(state.initialized&&!isRevalidationRequired&&isHashChangeOnly(state.location,location)&&!(opts&&opts.submission&&isMutationMethod(opts.submission.formMethod)))){_context3.next=18;break;}completeNavigation(location,{matches:matches});return _context3.abrupt(\"return\");case 18:// Create a controller/Request for this navigation\npendingNavigationController=new AbortController();request=createClientSideRequest(init.history,location,pendingNavigationController.signal,opts&&opts.submission);if(!(opts&&opts.pendingError)){_context3.next=24;break;}// If we have a pendingError, it means the user attempted a GET submission\n// with binary FormData so assign here and skip to handleLoaders.  That\n// way we handle calling loaders above the boundary etc.  It's not really\n// different from an actionError in that sense.\npendingError=_defineProperty({},findNearestBoundary(matches).route.id,opts.pendingError);_context3.next=35;break;case 24:if(!(opts&&opts.submission&&isMutationMethod(opts.submission.formMethod))){_context3.next=35;break;}_context3.next=27;return handleAction(request,location,opts.submission,matches,{replace:opts.replace});case 27:actionOutput=_context3.sent;if(!actionOutput.shortCircuited){_context3.next=30;break;}return _context3.abrupt(\"return\");case 30:pendingActionData=actionOutput.pendingActionData;pendingError=actionOutput.pendingActionError;navigation=_extends({state:\"loading\",location:location},opts.submission);loadingNavigation=navigation;// Create a GET request for the loaders\nrequest=new Request(request.url,{signal:request.signal});case 35:_context3.next=37;return handleLoaders(request,location,matches,loadingNavigation,opts&&opts.submission,opts&&opts.fetcherSubmission,opts&&opts.replace,pendingActionData,pendingError);case 37:_yield$handleLoaders=_context3.sent;shortCircuited=_yield$handleLoaders.shortCircuited;loaderData=_yield$handleLoaders.loaderData;errors=_yield$handleLoaders.errors;if(!shortCircuited){_context3.next=43;break;}return _context3.abrupt(\"return\");case 43:// Clean up now that the action/loaders have completed.  Don't clean up if\n// we short circuited because pendingNavigationController will have already\n// been assigned to a new controller for the next navigation\npendingNavigationController=null;completeNavigation(location,_extends({matches:matches},pendingActionData?{actionData:pendingActionData}:{},{loaderData:loaderData,errors:errors}));case 45:case\"end\":return _context3.stop();}},_callee3);}));return _startNavigation.apply(this,arguments);}function handleAction(_x7,_x8,_x9,_x10,_x11){return _handleAction.apply(this,arguments);}// Call all applicable loaders for the given matches, handling redirects,\n// errors, etc.\nfunction _handleAction(){_handleAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request,location,submission,matches,opts){var navigation,result,actionMatch,replace,boundaryMatch;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:interruptActiveLoads();// Put us in a submitting state\nnavigation=_extends({state:\"submitting\",location:location},submission);updateState({navigation:navigation});// Call our action and get the result\nactionMatch=getTargetMatch(matches,location);if(!(!actionMatch.route.action&&!actionMatch.route.lazy)){_context4.next=8;break;}result={type:ResultType.error,error:getInternalRouterError(405,{method:request.method,pathname:location.pathname,routeId:actionMatch.route.id})};_context4.next=13;break;case 8:_context4.next=10;return callLoaderOrAction(\"action\",request,actionMatch,matches,manifest,mapRouteProperties,basename);case 10:result=_context4.sent;if(!request.signal.aborted){_context4.next=13;break;}return _context4.abrupt(\"return\",{shortCircuited:true});case 13:if(!isRedirectResult(result)){_context4.next=18;break;}if(opts&&opts.replace!=null){replace=opts.replace;}else{// If the user didn't explicity indicate replace behavior, replace if\n// we redirected to the exact same location we're currently at to avoid\n// double back-buttons\nreplace=result.location===state.location.pathname+state.location.search;}_context4.next=17;return startRedirectNavigation(state,result,{submission:submission,replace:replace});case 17:return _context4.abrupt(\"return\",{shortCircuited:true});case 18:if(!isErrorResult(result)){_context4.next=22;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\nboundaryMatch=findNearestBoundary(matches,actionMatch.route.id);// By default, all submissions are REPLACE navigations, but if the\n// action threw an error that'll be rendered in an errorElement, we fall\n// back to PUSH so that the user can use the back button to get back to\n// the pre-submission form location to try again\nif((opts&&opts.replace)!==true){pendingAction=Action.Push;}return _context4.abrupt(\"return\",{// Send back an empty object we can use to clear out any prior actionData\npendingActionData:{},pendingActionError:_defineProperty({},boundaryMatch.route.id,result.error)});case 22:if(!isDeferredResult(result)){_context4.next=24;break;}throw getInternalRouterError(400,{type:\"defer-action\"});case 24:return _context4.abrupt(\"return\",{pendingActionData:_defineProperty({},actionMatch.route.id,result.data)});case 25:case\"end\":return _context4.stop();}},_callee4);}));return _handleAction.apply(this,arguments);}function handleLoaders(_x12,_x13,_x14,_x15,_x16,_x17,_x18,_x19,_x20){return _handleLoaders.apply(this,arguments);}function _handleLoaders(){_handleLoaders=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request,location,matches,overrideNavigation,submission,fetcherSubmission,replace,pendingActionData,pendingError){var loadingNavigation,navigation,activeSubmission,routesToUse,_getMatchesToLoad,_getMatchesToLoad2,matchesToLoad,revalidatingFetchers,_updatedFetchers,actionData,abortPendingFetchRevalidations,_yield$callLoadersAnd,results,loaderResults,fetcherResults,redirect,_processLoaderData,loaderData,errors,updatedFetchers,didAbortFetchLoads,shouldUpdateFetchers;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:// Figure out the right navigation we want to use for data loading\nloadingNavigation=overrideNavigation;if(!loadingNavigation){navigation=_extends({state:\"loading\",location:location,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined},submission);loadingNavigation=navigation;}// If this was a redirect from an action we don't have a \"submission\" but\n// we have it on the loading navigation so use that if available\nactiveSubmission=submission||fetcherSubmission?submission||fetcherSubmission:loadingNavigation.formMethod&&loadingNavigation.formAction&&loadingNavigation.formData&&loadingNavigation.formEncType?{formMethod:loadingNavigation.formMethod,formAction:loadingNavigation.formAction,formData:loadingNavigation.formData,formEncType:loadingNavigation.formEncType}:undefined;routesToUse=inFlightDataRoutes||dataRoutes;_getMatchesToLoad=getMatchesToLoad(init.history,state,matches,activeSubmission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,routesToUse,basename,pendingActionData,pendingError),_getMatchesToLoad2=_slicedToArray(_getMatchesToLoad,2),matchesToLoad=_getMatchesToLoad2[0],revalidatingFetchers=_getMatchesToLoad2[1];// Cancel pending deferreds for no-longer-matched routes or routes we're\n// about to reload.  Note that if this is an action reload we would have\n// already cancelled all pending deferreds so this would be a no-op\ncancelActiveDeferreds(function(routeId){return!(matches&&matches.some(function(m){return m.route.id===routeId;}))||matchesToLoad&&matchesToLoad.some(function(m){return m.route.id===routeId;});});// Short circuit if we have no loaders to run\nif(!(matchesToLoad.length===0&&revalidatingFetchers.length===0)){_context5.next=10;break;}_updatedFetchers=markFetchRedirectsDone();completeNavigation(location,_extends({matches:matches,loaderData:{},// Commit pending error if we're short circuiting\nerrors:pendingError||null},pendingActionData?{actionData:pendingActionData}:{},_updatedFetchers?{fetchers:new Map(state.fetchers)}:{}));return _context5.abrupt(\"return\",{shortCircuited:true});case 10:// If this is an uninterrupted revalidation, we remain in our current idle\n// state.  If not, we need to switch to our loading state and load data,\n// preserving any new action data or existing action data (in the case of\n// a revalidation interrupting an actionReload)\nif(!isUninterruptedRevalidation){revalidatingFetchers.forEach(function(rf){var fetcher=state.fetchers.get(rf.key);var revalidatingFetcher={state:\"loading\",data:fetcher&&fetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(rf.key,revalidatingFetcher);});actionData=pendingActionData||state.actionData;updateState(_extends({navigation:loadingNavigation},actionData?Object.keys(actionData).length===0?{actionData:null}:{actionData:actionData}:{},revalidatingFetchers.length>0?{fetchers:new Map(state.fetchers)}:{}));}pendingNavigationLoadId=++incrementingLoadId;revalidatingFetchers.forEach(function(rf){if(rf.controller){// Fetchers use an independent AbortController so that aborting a fetcher\n// (via deleteFetcher) does not abort the triggering navigation that\n// triggered the revalidation\nfetchControllers.set(rf.key,rf.controller);}});// Proxy navigation abort through to revalidation fetchers\nabortPendingFetchRevalidations=function abortPendingFetchRevalidations(){return revalidatingFetchers.forEach(function(f){return abortFetcher(f.key);});};if(pendingNavigationController){pendingNavigationController.signal.addEventListener(\"abort\",abortPendingFetchRevalidations);}_context5.next=17;return callLoadersAndMaybeResolveData(state.matches,matches,matchesToLoad,revalidatingFetchers,request);case 17:_yield$callLoadersAnd=_context5.sent;results=_yield$callLoadersAnd.results;loaderResults=_yield$callLoadersAnd.loaderResults;fetcherResults=_yield$callLoadersAnd.fetcherResults;if(!request.signal.aborted){_context5.next=23;break;}return _context5.abrupt(\"return\",{shortCircuited:true});case 23:// Clean up _after_ loaders have completed.  Don't clean up if we short\n// circuited because fetchControllers would have been aborted and\n// reassigned to new controllers for the next navigation\nif(pendingNavigationController){pendingNavigationController.signal.removeEventListener(\"abort\",abortPendingFetchRevalidations);}revalidatingFetchers.forEach(function(rf){return fetchControllers.delete(rf.key);});// If any loaders returned a redirect Response, start a new REPLACE navigation\nredirect=findRedirect(results);if(!redirect){_context5.next=30;break;}_context5.next=29;return startRedirectNavigation(state,redirect,{replace:replace});case 29:return _context5.abrupt(\"return\",{shortCircuited:true});case 30:// Process and commit output from loaders\n_processLoaderData=processLoaderData(state,matches,matchesToLoad,loaderResults,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData.loaderData,errors=_processLoaderData.errors;// Wire up subscribers to update loaderData as promises settle\nactiveDeferreds.forEach(function(deferredData,routeId){deferredData.subscribe(function(aborted){// Note: No need to updateState here since the TrackedPromise on\n// loaderData is stable across resolve/reject\n// Remove this instance if we were aborted or if promises have settled\nif(aborted||deferredData.done){activeDeferreds.delete(routeId);}});});updatedFetchers=markFetchRedirectsDone();didAbortFetchLoads=abortStaleFetchLoads(pendingNavigationLoadId);shouldUpdateFetchers=updatedFetchers||didAbortFetchLoads||revalidatingFetchers.length>0;return _context5.abrupt(\"return\",_extends({loaderData:loaderData,errors:errors},shouldUpdateFetchers?{fetchers:new Map(state.fetchers)}:{}));case 36:case\"end\":return _context5.stop();}},_callee5);}));return _handleLoaders.apply(this,arguments);}function getFetcher(key){return state.fetchers.get(key)||IDLE_FETCHER;}// Trigger a fetcher load/submit for the given fetcher key\nfunction fetch(key,routeId,href,opts){if(isServer){throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \"+\"You are likely calling a useFetcher() method in the body of your component. \"+\"Try moving it to a useEffect or a callback.\");}if(fetchControllers.has(key))abortFetcher(key);var routesToUse=inFlightDataRoutes||dataRoutes;var normalizedPath=normalizeTo(state.location,state.matches,basename,future.v7_prependBasename,href,routeId,opts==null?void 0:opts.relative);var matches=matchRoutes(routesToUse,normalizedPath,basename);if(!matches){setFetcherError(key,routeId,getInternalRouterError(404,{pathname:normalizedPath}));return;}var _normalizeNavigateOpt=normalizeNavigateOptions(future.v7_normalizeFormMethod,true,normalizedPath,opts),path=_normalizeNavigateOpt.path,submission=_normalizeNavigateOpt.submission;var match=getTargetMatch(matches,path);pendingPreventScrollReset=(opts&&opts.preventScrollReset)===true;if(submission&&isMutationMethod(submission.formMethod)){handleFetcherAction(key,routeId,path,match,matches,submission);return;}// Store off the match so we can call it's shouldRevalidate on subsequent\n// revalidations\nfetchLoadMatches.set(key,{routeId:routeId,path:path});handleFetcherLoader(key,routeId,path,match,matches,submission);}// Call the action for the matched fetcher.submit(), and then handle redirects,\n// errors, and revalidation\nfunction handleFetcherAction(_x21,_x22,_x23,_x24,_x25,_x26){return _handleFetcherAction.apply(this,arguments);}// Call the matched loader for fetcher.load(), handling redirects, errors, etc.\nfunction _handleFetcherAction(){_handleFetcherAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key,routeId,path,match,requestMatches,submission){var _error2,existingFetcher,fetcher,abortController,fetchRequest,actionResult,loadingFetcher,nextLocation,revalidationRequest,routesToUse,matches,loadId,loadFetcher,_getMatchesToLoad3,_getMatchesToLoad4,matchesToLoad,revalidatingFetchers,abortPendingFetchRevalidations,_yield$callLoadersAnd2,results,loaderResults,fetcherResults,redirect,_processLoaderData2,loaderData,errors,doneFetcher,didAbortFetchLoads;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:interruptActiveLoads();fetchLoadMatches.delete(key);if(!(!match.route.action&&!match.route.lazy)){_context6.next=6;break;}_error2=getInternalRouterError(405,{method:submission.formMethod,pathname:path,routeId:routeId});setFetcherError(key,routeId,_error2);return _context6.abrupt(\"return\");case 6:// Put this fetcher into it's submitting state\nexistingFetcher=state.fetchers.get(key);fetcher=_extends({state:\"submitting\"},submission,{data:existingFetcher&&existingFetcher.data,\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,fetcher);updateState({fetchers:new Map(state.fetchers)});// Call the action for the fetcher\nabortController=new AbortController();fetchRequest=createClientSideRequest(init.history,path,abortController.signal,submission);fetchControllers.set(key,abortController);_context6.next=15;return callLoaderOrAction(\"action\",fetchRequest,match,requestMatches,manifest,mapRouteProperties,basename);case 15:actionResult=_context6.sent;if(!fetchRequest.signal.aborted){_context6.next=19;break;}// We can delete this so long as we weren't aborted by ou our own fetcher\n// re-submit which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}return _context6.abrupt(\"return\");case 19:if(!isRedirectResult(actionResult)){_context6.next=26;break;}fetchControllers.delete(key);fetchRedirectIds.add(key);loadingFetcher=_extends({state:\"loading\"},submission,{data:undefined,\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});return _context6.abrupt(\"return\",startRedirectNavigation(state,actionResult,{submission:submission,isFetchActionRedirect:true}));case 26:if(!isErrorResult(actionResult)){_context6.next=29;break;}setFetcherError(key,routeId,actionResult.error);return _context6.abrupt(\"return\");case 29:if(!isDeferredResult(actionResult)){_context6.next=31;break;}throw getInternalRouterError(400,{type:\"defer-action\"});case 31:// Start the data load for current matches, or the next location if we're\n// in the middle of a navigation\nnextLocation=state.navigation.location||state.location;revalidationRequest=createClientSideRequest(init.history,nextLocation,abortController.signal);routesToUse=inFlightDataRoutes||dataRoutes;matches=state.navigation.state!==\"idle\"?matchRoutes(routesToUse,state.navigation.location,basename):state.matches;invariant(matches,\"Didn't find any matches after fetcher action\");loadId=++incrementingLoadId;fetchReloadIds.set(key,loadId);loadFetcher=_extends({state:\"loading\",data:actionResult.data},submission,{\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,loadFetcher);_getMatchesToLoad3=getMatchesToLoad(init.history,state,matches,submission,nextLocation,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,routesToUse,basename,_defineProperty({},match.route.id,actionResult.data),undefined// No need to send through errors since we short circuit above\n),_getMatchesToLoad4=_slicedToArray(_getMatchesToLoad3,2),matchesToLoad=_getMatchesToLoad4[0],revalidatingFetchers=_getMatchesToLoad4[1];// Put all revalidating fetchers into the loading state, except for the\n// current fetcher which we want to keep in it's current loading state which\n// contains it's action submission info + action data\nrevalidatingFetchers.filter(function(rf){return rf.key!==key;}).forEach(function(rf){var staleKey=rf.key;var existingFetcher=state.fetchers.get(staleKey);var revalidatingFetcher={state:\"loading\",data:existingFetcher&&existingFetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(staleKey,revalidatingFetcher);if(rf.controller){fetchControllers.set(staleKey,rf.controller);}});updateState({fetchers:new Map(state.fetchers)});abortPendingFetchRevalidations=function abortPendingFetchRevalidations(){return revalidatingFetchers.forEach(function(rf){return abortFetcher(rf.key);});};abortController.signal.addEventListener(\"abort\",abortPendingFetchRevalidations);_context6.next=47;return callLoadersAndMaybeResolveData(state.matches,matches,matchesToLoad,revalidatingFetchers,revalidationRequest);case 47:_yield$callLoadersAnd2=_context6.sent;results=_yield$callLoadersAnd2.results;loaderResults=_yield$callLoadersAnd2.loaderResults;fetcherResults=_yield$callLoadersAnd2.fetcherResults;if(!abortController.signal.aborted){_context6.next=53;break;}return _context6.abrupt(\"return\");case 53:abortController.signal.removeEventListener(\"abort\",abortPendingFetchRevalidations);fetchReloadIds.delete(key);fetchControllers.delete(key);revalidatingFetchers.forEach(function(r){return fetchControllers.delete(r.key);});redirect=findRedirect(results);if(!redirect){_context6.next=60;break;}return _context6.abrupt(\"return\",startRedirectNavigation(state,redirect));case 60:// Process and commit output from loaders\n_processLoaderData2=processLoaderData(state,state.matches,matchesToLoad,loaderResults,undefined,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData2.loaderData,errors=_processLoaderData2.errors;// Since we let revalidations complete even if the submitting fetcher was\n// deleted, only put it back to idle if it hasn't been deleted\nif(state.fetchers.has(key)){doneFetcher={state:\"idle\",data:actionResult.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);}didAbortFetchLoads=abortStaleFetchLoads(loadId);// If we are currently in a navigation loading state and this fetcher is\n// more recent than the navigation, we want the newer data so abort the\n// navigation and complete it with the fetcher data\nif(state.navigation.state===\"loading\"&&loadId>pendingNavigationLoadId){invariant(pendingAction,\"Expected pending action\");pendingNavigationController&&pendingNavigationController.abort();completeNavigation(state.navigation.location,{matches:matches,loaderData:loaderData,errors:errors,fetchers:new Map(state.fetchers)});}else{// otherwise just update with the fetcher data, preserving any existing\n// loaderData for loaders that did not need to reload.  We have to\n// manually merge here since we aren't going through completeNavigation\nupdateState(_extends({errors:errors,loaderData:mergeLoaderData(state.loaderData,loaderData,matches,errors)},didAbortFetchLoads||revalidatingFetchers.length>0?{fetchers:new Map(state.fetchers)}:{}));isRevalidationRequired=false;}case 64:case\"end\":return _context6.stop();}},_callee6);}));return _handleFetcherAction.apply(this,arguments);}function handleFetcherLoader(_x27,_x28,_x29,_x30,_x31,_x32){return _handleFetcherLoader.apply(this,arguments);}/**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */function _handleFetcherLoader(){_handleFetcherLoader=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key,routeId,path,match,matches,submission){var existingFetcher,loadingFetcher,abortController,fetchRequest,result,boundaryMatch,doneFetcher;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:existingFetcher=state.fetchers.get(key);// Put this fetcher into it's loading state\nloadingFetcher=_extends({state:\"loading\",formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined},submission,{data:existingFetcher&&existingFetcher.data,\" _hasFetcherDoneAnything \":true});state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});// Call the loader for this fetcher route match\nabortController=new AbortController();fetchRequest=createClientSideRequest(init.history,path,abortController.signal);fetchControllers.set(key,abortController);_context7.next=9;return callLoaderOrAction(\"loader\",fetchRequest,match,matches,manifest,mapRouteProperties,basename);case 9:result=_context7.sent;if(!isDeferredResult(result)){_context7.next=17;break;}_context7.next=13;return resolveDeferredData(result,fetchRequest.signal,true);case 13:_context7.t0=_context7.sent;if(_context7.t0){_context7.next=16;break;}_context7.t0=result;case 16:result=_context7.t0;case 17:// We can delete this so long as we weren't aborted by our our own fetcher\n// re-load which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}if(!fetchRequest.signal.aborted){_context7.next=20;break;}return _context7.abrupt(\"return\");case 20:if(!isRedirectResult(result)){_context7.next=25;break;}fetchRedirectIds.add(key);_context7.next=24;return startRedirectNavigation(state,result);case 24:return _context7.abrupt(\"return\");case 25:if(!isErrorResult(result)){_context7.next=30;break;}boundaryMatch=findNearestBoundary(state.matches,routeId);state.fetchers.delete(key);// TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n// do we need to behave any differently with our non-redirect errors?\n// What if it was a non-redirect Response?\nupdateState({fetchers:new Map(state.fetchers),errors:_defineProperty({},boundaryMatch.route.id,result.error)});return _context7.abrupt(\"return\");case 30:invariant(!isDeferredResult(result),\"Unhandled fetcher deferred data\");// Put the fetcher back into an idle state\ndoneFetcher={state:\"idle\",data:result.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);updateState({fetchers:new Map(state.fetchers)});case 34:case\"end\":return _context7.stop();}},_callee7);}));return _handleFetcherLoader.apply(this,arguments);}function startRedirectNavigation(_x33,_x34,_x35){return _startRedirectNavigation.apply(this,arguments);}function _startRedirectNavigation(){_startRedirectNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(state,redirect,_temp){var _ref6,submission,replace,isFetchActionRedirect,redirectLocation,url,isDifferentBasename,redirectHistoryAction,_state$navigation,formMethod,formAction,formEncType,formData;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:_ref6=_temp===void 0?{}:_temp,submission=_ref6.submission,replace=_ref6.replace,isFetchActionRedirect=_ref6.isFetchActionRedirect;if(redirect.revalidate){isRevalidationRequired=true;}redirectLocation=createLocation(state.location,redirect.location,// TODO: This can be removed once we get rid of useTransition in Remix v2\n_extends({_isRedirect:true},isFetchActionRedirect?{_isFetchActionRedirect:true}:{}));invariant(redirectLocation,\"Expected a location on the redirect navigation\");// Check if this an absolute external redirect that goes to a new origin\nif(!(ABSOLUTE_URL_REGEX.test(redirect.location)&&isBrowser)){_context8.next=10;break;}url=init.history.createURL(redirect.location);isDifferentBasename=stripBasename(url.pathname,basename)==null;if(!(routerWindow.location.origin!==url.origin||isDifferentBasename)){_context8.next=10;break;}if(replace){routerWindow.location.replace(redirect.location);}else{routerWindow.location.assign(redirect.location);}return _context8.abrupt(\"return\");case 10:// There's no need to abort on redirects, since we don't detect the\n// redirect until the action/loaders have settled\npendingNavigationController=null;redirectHistoryAction=replace===true?Action.Replace:Action.Push;// Use the incoming submission if provided, fallback on the active one in\n// state.navigation\n_state$navigation=state.navigation,formMethod=_state$navigation.formMethod,formAction=_state$navigation.formAction,formEncType=_state$navigation.formEncType,formData=_state$navigation.formData;if(!submission&&formMethod&&formAction&&formData&&formEncType){submission={formMethod:formMethod,formAction:formAction,formEncType:formEncType,formData:formData};}// If this was a 307/308 submission we want to preserve the HTTP method and\n// re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n// redirected location\nif(!(redirectPreserveMethodStatusCodes.has(redirect.status)&&submission&&isMutationMethod(submission.formMethod))){_context8.next=19;break;}_context8.next=17;return startNavigation(redirectHistoryAction,redirectLocation,{submission:_extends({},submission,{formAction:redirect.location}),// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 17:_context8.next=26;break;case 19:if(!isFetchActionRedirect){_context8.next=24;break;}_context8.next=22;return startNavigation(redirectHistoryAction,redirectLocation,{overrideNavigation:{state:\"loading\",location:redirectLocation,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined},fetcherSubmission:submission,// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 22:_context8.next=26;break;case 24:_context8.next=26;return startNavigation(redirectHistoryAction,redirectLocation,{overrideNavigation:{state:\"loading\",location:redirectLocation,formMethod:submission?submission.formMethod:undefined,formAction:submission?submission.formAction:undefined,formEncType:submission?submission.formEncType:undefined,formData:submission?submission.formData:undefined},// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 26:case\"end\":return _context8.stop();}},_callee8);}));return _startRedirectNavigation.apply(this,arguments);}function callLoadersAndMaybeResolveData(_x36,_x37,_x38,_x39,_x40){return _callLoadersAndMaybeResolveData.apply(this,arguments);}function _callLoadersAndMaybeResolveData(){_callLoadersAndMaybeResolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(currentMatches,matches,matchesToLoad,fetchersToLoad,request){var results,loaderResults,fetcherResults;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1)switch(_context9.prev=_context9.next){case 0:_context9.next=2;return Promise.all([].concat(_toConsumableArray(matchesToLoad.map(function(match){return callLoaderOrAction(\"loader\",request,match,matches,manifest,mapRouteProperties,basename);})),_toConsumableArray(fetchersToLoad.map(function(f){if(f.matches&&f.match&&f.controller){return callLoaderOrAction(\"loader\",createClientSideRequest(init.history,f.path,f.controller.signal),f.match,f.matches,manifest,mapRouteProperties,basename);}else{var _error3={type:ResultType.error,error:getInternalRouterError(404,{pathname:f.path})};return _error3;}}))));case 2:results=_context9.sent;loaderResults=results.slice(0,matchesToLoad.length);fetcherResults=results.slice(matchesToLoad.length);_context9.next=7;return Promise.all([resolveDeferredResults(currentMatches,matchesToLoad,loaderResults,loaderResults.map(function(){return request.signal;}),false,state.loaderData),resolveDeferredResults(currentMatches,fetchersToLoad.map(function(f){return f.match;}),fetcherResults,fetchersToLoad.map(function(f){return f.controller?f.controller.signal:null;}),true)]);case 7:return _context9.abrupt(\"return\",{results:results,loaderResults:loaderResults,fetcherResults:fetcherResults});case 8:case\"end\":return _context9.stop();}},_callee9);}));return _callLoadersAndMaybeResolveData.apply(this,arguments);}function interruptActiveLoads(){var _cancelledDeferredRou;// Every interruption triggers a revalidation\nisRevalidationRequired=true;// Cancel pending route-level deferreds and mark cancelled routes for\n// revalidation\n(_cancelledDeferredRou=cancelledDeferredRoutes).push.apply(_cancelledDeferredRou,_toConsumableArray(cancelActiveDeferreds()));// Abort in-flight fetcher loads\nfetchLoadMatches.forEach(function(_,key){if(fetchControllers.has(key)){cancelledFetcherLoads.push(key);abortFetcher(key);}});}function setFetcherError(key,routeId,error){var boundaryMatch=findNearestBoundary(state.matches,routeId);deleteFetcher(key);updateState({errors:_defineProperty({},boundaryMatch.route.id,error),fetchers:new Map(state.fetchers)});}function deleteFetcher(key){var fetcher=state.fetchers.get(key);// Don't abort the controller if this is a deletion of a fetcher.submit()\n// in it's loading phase since - we don't want to abort the corresponding\n// revalidation and want them to complete and land\nif(fetchControllers.has(key)&&!(fetcher&&fetcher.state===\"loading\"&&fetchReloadIds.has(key))){abortFetcher(key);}fetchLoadMatches.delete(key);fetchReloadIds.delete(key);fetchRedirectIds.delete(key);state.fetchers.delete(key);}function abortFetcher(key){var controller=fetchControllers.get(key);invariant(controller,\"Expected fetch controller: \"+key);controller.abort();fetchControllers.delete(key);}function markFetchersDone(keys){var _iterator3=_createForOfIteratorHelper(keys),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var key=_step3.value;var fetcher=getFetcher(key);var doneFetcher={state:\"idle\",data:fetcher.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}function markFetchRedirectsDone(){var doneKeys=[];var updatedFetchers=false;var _iterator4=_createForOfIteratorHelper(fetchRedirectIds),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var key=_step4.value;var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){fetchRedirectIds.delete(key);doneKeys.push(key);updatedFetchers=true;}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}markFetchersDone(doneKeys);return updatedFetchers;}function abortStaleFetchLoads(landedId){var yeetedKeys=[];var _iterator5=_createForOfIteratorHelper(fetchReloadIds),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var _step5$value=_slicedToArray(_step5.value,2),key=_step5$value[0],id=_step5$value[1];if(id<landedId){var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){abortFetcher(key);fetchReloadIds.delete(key);yeetedKeys.push(key);}}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}markFetchersDone(yeetedKeys);return yeetedKeys.length>0;}function getBlocker(key,fn){var blocker=state.blockers.get(key)||IDLE_BLOCKER;if(blockerFunctions.get(key)!==fn){blockerFunctions.set(key,fn);}return blocker;}function deleteBlocker(key){state.blockers.delete(key);blockerFunctions.delete(key);}// Utility function to update blockers, ensuring valid state transitions\nfunction updateBlocker(key,newBlocker){var blocker=state.blockers.get(key)||IDLE_BLOCKER;// Poor mans state machine :)\n// https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\ninvariant(blocker.state===\"unblocked\"&&newBlocker.state===\"blocked\"||blocker.state===\"blocked\"&&newBlocker.state===\"blocked\"||blocker.state===\"blocked\"&&newBlocker.state===\"proceeding\"||blocker.state===\"blocked\"&&newBlocker.state===\"unblocked\"||blocker.state===\"proceeding\"&&newBlocker.state===\"unblocked\",\"Invalid blocker state transition: \"+blocker.state+\" -> \"+newBlocker.state);state.blockers.set(key,newBlocker);updateState({blockers:new Map(state.blockers)});}function shouldBlockNavigation(_ref2){var currentLocation=_ref2.currentLocation,nextLocation=_ref2.nextLocation,historyAction=_ref2.historyAction;if(blockerFunctions.size===0){return;}// We ony support a single active blocker at the moment since we don't have\n// any compelling use cases for multi-blocker yet\nif(blockerFunctions.size>1){warning(false,\"A router only supports one blocker at a time\");}var entries=Array.from(blockerFunctions.entries());var _entries=_slicedToArray(entries[entries.length-1],2),blockerKey=_entries[0],blockerFunction=_entries[1];var blocker=state.blockers.get(blockerKey);if(blocker&&blocker.state===\"proceeding\"){// If the blocker is currently proceeding, we don't need to re-check\n// it and can let this navigation continue\nreturn;}// At this point, we know we're unblocked/blocked so we need to check the\n// user-provided blocker function\nif(blockerFunction({currentLocation:currentLocation,nextLocation:nextLocation,historyAction:historyAction})){return blockerKey;}}function cancelActiveDeferreds(predicate){var cancelledRouteIds=[];activeDeferreds.forEach(function(dfd,routeId){if(!predicate||predicate(routeId)){// Cancel the deferred - but do not remove from activeDeferreds here -\n// we rely on the subscribers to do that so our tests can assert proper\n// cleanup via _internalActiveDeferreds\ndfd.cancel();cancelledRouteIds.push(routeId);activeDeferreds.delete(routeId);}});return cancelledRouteIds;}// Opt in to capturing and reporting scroll positions during navigations,\n// used by the <ScrollRestoration> component\nfunction enableScrollRestoration(positions,getPosition,getKey){savedScrollPositions=positions;getScrollPosition=getPosition;getScrollRestorationKey=getKey||function(location){return location.key;};// Perform initial hydration scroll restoration, since we miss the boat on\n// the initial updateState() because we've not yet rendered <ScrollRestoration/>\n// and therefore have no savedScrollPositions available\nif(!initialScrollRestored&&state.navigation===IDLE_NAVIGATION){initialScrollRestored=true;var y=getSavedScrollPosition(state.location,state.matches);if(y!=null){updateState({restoreScrollPosition:y});}}return function(){savedScrollPositions=null;getScrollPosition=null;getScrollRestorationKey=null;};}function saveScrollPosition(location,matches){if(savedScrollPositions&&getScrollRestorationKey&&getScrollPosition){var userMatches=matches.map(function(m){return createUseMatchesMatch(m,state.loaderData);});var key=getScrollRestorationKey(location,userMatches)||location.key;savedScrollPositions[key]=getScrollPosition();}}function getSavedScrollPosition(location,matches){if(savedScrollPositions&&getScrollRestorationKey&&getScrollPosition){var userMatches=matches.map(function(m){return createUseMatchesMatch(m,state.loaderData);});var key=getScrollRestorationKey(location,userMatches)||location.key;var y=savedScrollPositions[key];if(typeof y===\"number\"){return y;}}return null;}function _internalSetRoutes(newRoutes){manifest={};inFlightDataRoutes=convertRoutesToDataRoutes(newRoutes,mapRouteProperties,undefined,manifest);}router={get basename(){return basename;},get state(){return state;},get routes(){return dataRoutes;},initialize:initialize,subscribe:subscribe,enableScrollRestoration:enableScrollRestoration,navigate:navigate,fetch:fetch,revalidate:revalidate,// Passthrough to history-aware createHref used by useHref so we get proper\n// hash-aware URLs in DOM paths\ncreateHref:function createHref(to){return init.history.createHref(to);},encodeLocation:function encodeLocation(to){return init.history.encodeLocation(to);},getFetcher:getFetcher,deleteFetcher:deleteFetcher,dispose:dispose,getBlocker:getBlocker,deleteBlocker:deleteBlocker,_internalFetchControllers:fetchControllers,_internalActiveDeferreds:activeDeferreds,// TODO: Remove setRoutes, it's temporary to avoid dealing with\n// updating the tree while validating the update algorithm.\n_internalSetRoutes:_internalSetRoutes};return router;}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nvar UNSAFE_DEFERRED_SYMBOL=Symbol(\"deferred\");function createStaticHandler(routes,opts){invariant(routes.length>0,\"You must provide a non-empty routes array to createStaticHandler\");var manifest={};var basename=(opts?opts.basename:null)||\"/\";var mapRouteProperties;if(opts!=null&&opts.mapRouteProperties){mapRouteProperties=opts.mapRouteProperties;}else if(opts!=null&&opts.detectErrorBoundary){// If they are still using the deprecated version, wrap it with the new API\nvar detectErrorBoundary=opts.detectErrorBoundary;mapRouteProperties=function mapRouteProperties(route){return{hasErrorBoundary:detectErrorBoundary(route)};};}else{mapRouteProperties=defaultMapRouteProperties;}var dataRoutes=convertRoutesToDataRoutes(routes,mapRouteProperties,undefined,manifest);/**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */function query(_x41,_x42){return _query.apply(this,arguments);}/**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */function _query(){_query=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request,_temp2){var _ref7,requestContext,url,method,location,matches,error,_getShortCircuitMatch3,methodNotAllowedMatches,route,_error4,_getShortCircuitMatch4,notFoundMatches,_route2,result;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1)switch(_context10.prev=_context10.next){case 0:_ref7=_temp2===void 0?{}:_temp2,requestContext=_ref7.requestContext;url=new URL(request.url);method=request.method;location=createLocation(\"\",createPath(url),null,\"default\");matches=matchRoutes(dataRoutes,location,basename);// SSR supports HEAD requests while SPA doesn't\nif(!(!isValidMethod(method)&&method!==\"HEAD\")){_context10.next=11;break;}error=getInternalRouterError(405,{method:method});_getShortCircuitMatch3=getShortCircuitMatches(dataRoutes),methodNotAllowedMatches=_getShortCircuitMatch3.matches,route=_getShortCircuitMatch3.route;return _context10.abrupt(\"return\",{basename:basename,location:location,matches:methodNotAllowedMatches,loaderData:{},actionData:null,errors:_defineProperty({},route.id,error),statusCode:error.status,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 11:if(matches){_context10.next=15;break;}_error4=getInternalRouterError(404,{pathname:location.pathname});_getShortCircuitMatch4=getShortCircuitMatches(dataRoutes),notFoundMatches=_getShortCircuitMatch4.matches,_route2=_getShortCircuitMatch4.route;return _context10.abrupt(\"return\",{basename:basename,location:location,matches:notFoundMatches,loaderData:{},actionData:null,errors:_defineProperty({},_route2.id,_error4),statusCode:_error4.status,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 15:_context10.next=17;return queryImpl(request,location,matches,requestContext);case 17:result=_context10.sent;if(!isResponse(result)){_context10.next=20;break;}return _context10.abrupt(\"return\",result);case 20:return _context10.abrupt(\"return\",_extends({location:location,basename:basename},result));case 21:case\"end\":return _context10.stop();}},_callee10);}));return _query.apply(this,arguments);}function queryRoute(_x43,_x44){return _queryRoute.apply(this,arguments);}function _queryRoute(){_queryRoute=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request,_temp3){var _ref8,routeId,requestContext,url,method,location,matches,match,result,error,_result$activeDeferre,data;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1)switch(_context11.prev=_context11.next){case 0:_ref8=_temp3===void 0?{}:_temp3,routeId=_ref8.routeId,requestContext=_ref8.requestContext;url=new URL(request.url);method=request.method;location=createLocation(\"\",createPath(url),null,\"default\");matches=matchRoutes(dataRoutes,location,basename);// SSR supports HEAD requests while SPA doesn't\nif(!(!isValidMethod(method)&&method!==\"HEAD\"&&method!==\"OPTIONS\")){_context11.next=9;break;}throw getInternalRouterError(405,{method:method});case 9:if(matches){_context11.next=11;break;}throw getInternalRouterError(404,{pathname:location.pathname});case 11:match=routeId?matches.find(function(m){return m.route.id===routeId;}):getTargetMatch(matches,location);if(!(routeId&&!match)){_context11.next=16;break;}throw getInternalRouterError(403,{pathname:location.pathname,routeId:routeId});case 16:if(match){_context11.next=18;break;}throw getInternalRouterError(404,{pathname:location.pathname});case 18:_context11.next=20;return queryImpl(request,location,matches,requestContext,match);case 20:result=_context11.sent;if(!isResponse(result)){_context11.next=23;break;}return _context11.abrupt(\"return\",result);case 23:error=result.errors?Object.values(result.errors)[0]:undefined;if(!(error!==undefined)){_context11.next=26;break;}throw error;case 26:if(!result.actionData){_context11.next=28;break;}return _context11.abrupt(\"return\",Object.values(result.actionData)[0]);case 28:if(!result.loaderData){_context11.next=32;break;}data=Object.values(result.loaderData)[0];if((_result$activeDeferre=result.activeDeferreds)!=null&&_result$activeDeferre[match.route.id]){data[UNSAFE_DEFERRED_SYMBOL]=result.activeDeferreds[match.route.id];}return _context11.abrupt(\"return\",data);case 32:return _context11.abrupt(\"return\",undefined);case 33:case\"end\":return _context11.stop();}},_callee11);}));return _queryRoute.apply(this,arguments);}function queryImpl(_x45,_x46,_x47,_x48,_x49){return _queryImpl.apply(this,arguments);}function _queryImpl(){_queryImpl=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request,location,matches,requestContext,routeMatch){var _result,result;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1)switch(_context12.prev=_context12.next){case 0:invariant(request.signal,\"query()/queryRoute() requests must contain an AbortController signal\");_context12.prev=1;if(!isMutationMethod(request.method.toLowerCase())){_context12.next=7;break;}_context12.next=5;return submit(request,matches,routeMatch||getTargetMatch(matches,location),requestContext,routeMatch!=null);case 5:_result=_context12.sent;return _context12.abrupt(\"return\",_result);case 7:_context12.next=9;return loadRouteData(request,matches,requestContext,routeMatch);case 9:result=_context12.sent;return _context12.abrupt(\"return\",isResponse(result)?result:_extends({},result,{actionData:null,actionHeaders:{}}));case 13:_context12.prev=13;_context12.t0=_context12[\"catch\"](1);if(!isQueryRouteResponse(_context12.t0)){_context12.next=19;break;}if(!(_context12.t0.type===ResultType.error&&!isRedirectResponse(_context12.t0.response))){_context12.next=18;break;}throw _context12.t0.response;case 18:return _context12.abrupt(\"return\",_context12.t0.response);case 19:if(!isRedirectResponse(_context12.t0)){_context12.next=21;break;}return _context12.abrupt(\"return\",_context12.t0);case 21:throw _context12.t0;case 22:case\"end\":return _context12.stop();}},_callee12,null,[[1,13]]);}));return _queryImpl.apply(this,arguments);}function submit(_x50,_x51,_x52,_x53,_x54){return _submit.apply(this,arguments);}function _submit(){_submit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request,matches,actionMatch,requestContext,isRouteRequest){var result,error,method,_error5,boundaryMatch,_context13,loaderRequest,context;return _regeneratorRuntime().wrap(function _callee13$(_context14){while(1)switch(_context14.prev=_context14.next){case 0:if(!(!actionMatch.route.action&&!actionMatch.route.lazy)){_context14.next=7;break;}error=getInternalRouterError(405,{method:request.method,pathname:new URL(request.url).pathname,routeId:actionMatch.route.id});if(!isRouteRequest){_context14.next=4;break;}throw error;case 4:result={type:ResultType.error,error:error};_context14.next=13;break;case 7:_context14.next=9;return callLoaderOrAction(\"action\",request,actionMatch,matches,manifest,mapRouteProperties,basename,true,isRouteRequest,requestContext);case 9:result=_context14.sent;if(!request.signal.aborted){_context14.next=13;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted\");case 13:if(!isRedirectResult(result)){_context14.next=15;break;}throw new Response(null,{status:result.status,headers:{Location:result.location}});case 15:if(!isDeferredResult(result)){_context14.next=20;break;}_error5=getInternalRouterError(400,{type:\"defer-action\"});if(!isRouteRequest){_context14.next=19;break;}throw _error5;case 19:result={type:ResultType.error,error:_error5};case 20:if(!isRouteRequest){_context14.next=24;break;}if(!isErrorResult(result)){_context14.next=23;break;}throw result.error;case 23:return _context14.abrupt(\"return\",{matches:[actionMatch],loaderData:{},actionData:_defineProperty({},actionMatch.route.id,result.data),errors:null,// Note: statusCode + headers are unused here since queryRoute will\n// return the raw Response or value\nstatusCode:200,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 24:if(!isErrorResult(result)){_context14.next=30;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\nboundaryMatch=findNearestBoundary(matches,actionMatch.route.id);_context14.next=28;return loadRouteData(request,matches,requestContext,undefined,_defineProperty({},boundaryMatch.route.id,result.error));case 28:_context13=_context14.sent;return _context14.abrupt(\"return\",_extends({},_context13,{statusCode:isRouteErrorResponse(result.error)?result.error.status:500,actionData:null,actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 30:// Create a GET request for the loaders\nloaderRequest=new Request(request.url,{headers:request.headers,redirect:request.redirect,signal:request.signal});_context14.next=33;return loadRouteData(loaderRequest,matches,requestContext);case 33:context=_context14.sent;return _context14.abrupt(\"return\",_extends({},context,result.statusCode?{statusCode:result.statusCode}:{},{actionData:_defineProperty({},actionMatch.route.id,result.data),actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 35:case\"end\":return _context14.stop();}},_callee13);}));return _submit.apply(this,arguments);}function loadRouteData(_x55,_x56,_x57,_x58,_x59){return _loadRouteData.apply(this,arguments);}function _loadRouteData(){_loadRouteData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request,matches,requestContext,routeMatch,pendingActionError){var isRouteRequest,requestMatches,matchesToLoad,results,method,activeDeferreds,context,executedLoaders;return _regeneratorRuntime().wrap(function _callee14$(_context15){while(1)switch(_context15.prev=_context15.next){case 0:isRouteRequest=routeMatch!=null;// Short circuit if we have no loaders to run (queryRoute())\nif(!(isRouteRequest&&!(routeMatch!=null&&routeMatch.route.loader)&&!(routeMatch!=null&&routeMatch.route.lazy))){_context15.next=3;break;}throw getInternalRouterError(400,{method:request.method,pathname:new URL(request.url).pathname,routeId:routeMatch==null?void 0:routeMatch.route.id});case 3:requestMatches=routeMatch?[routeMatch]:getLoaderMatchesUntilBoundary(matches,Object.keys(pendingActionError||{})[0]);matchesToLoad=requestMatches.filter(function(m){return m.route.loader||m.route.lazy;});// Short circuit if we have no loaders to run (query())\nif(!(matchesToLoad.length===0)){_context15.next=7;break;}return _context15.abrupt(\"return\",{matches:matches,// Add a null for all matched routes for proper revalidation on the client\nloaderData:matches.reduce(function(acc,m){return Object.assign(acc,_defineProperty({},m.route.id,null));},{}),errors:pendingActionError||null,statusCode:200,loaderHeaders:{},activeDeferreds:null});case 7:_context15.next=9;return Promise.all(_toConsumableArray(matchesToLoad.map(function(match){return callLoaderOrAction(\"loader\",request,match,matches,manifest,mapRouteProperties,basename,true,isRouteRequest,requestContext);})));case 9:results=_context15.sent;if(!request.signal.aborted){_context15.next=13;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted\");case 13:// Process and commit output from loaders\nactiveDeferreds=new Map();context=processRouteLoaderData(matches,matchesToLoad,results,pendingActionError,activeDeferreds);// Add a null for any non-loader matches for proper revalidation on the client\nexecutedLoaders=new Set(matchesToLoad.map(function(match){return match.route.id;}));matches.forEach(function(match){if(!executedLoaders.has(match.route.id)){context.loaderData[match.route.id]=null;}});return _context15.abrupt(\"return\",_extends({},context,{matches:matches,activeDeferreds:activeDeferreds.size>0?Object.fromEntries(activeDeferreds.entries()):null}));case 18:case\"end\":return _context15.stop();}},_callee14);}));return _loadRouteData.apply(this,arguments);}return{dataRoutes:dataRoutes,query:query,queryRoute:queryRoute};}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */function getStaticContextFromError(routes,context,error){var newContext=_extends({},context,{statusCode:500,errors:_defineProperty({},context._deepestRenderedBoundaryId||routes[0].id,error)});return newContext;}function isSubmissionNavigation(opts){return opts!=null&&\"formData\"in opts;}function normalizeTo(location,matches,basename,prependBasename,to,fromRouteId,relative){var contextualMatches;var activeRouteMatch;if(fromRouteId!=null&&relative!==\"path\"){// Grab matches up to the calling route so our route-relative logic is\n// relative to the correct source route.  When using relative:path,\n// fromRouteId is ignored since that is always relative to the current\n// location path\ncontextualMatches=[];var _iterator6=_createForOfIteratorHelper(matches),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var match=_step6.value;contextualMatches.push(match);if(match.route.id===fromRouteId){activeRouteMatch=match;break;}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}}else{contextualMatches=matches;activeRouteMatch=matches[matches.length-1];}// Resolve the relative path\nvar path=resolveTo(to?to:\".\",getPathContributingMatches(contextualMatches).map(function(m){return m.pathnameBase;}),stripBasename(location.pathname,basename)||location.pathname,relative===\"path\");// When `to` is not specified we inherit search/hash from the current\n// location, unlike when to=\".\" and we just inherit the path.\n// See https://github.com/remix-run/remix/issues/927\nif(to==null){path.search=location.search;path.hash=location.hash;}// Add an ?index param for matched index routes if we don't already have one\nif((to==null||to===\"\"||to===\".\")&&activeRouteMatch&&activeRouteMatch.route.index&&!hasNakedIndexQuery(path.search)){path.search=path.search?path.search.replace(/^\\?/,\"?index&\"):\"?index\";}// If we're operating within a basename, prepend it to the pathname.  If\n// this is a root navigation, then just use the raw basename which allows\n// the basename to have full control over the presence of a trailing slash\n// on root actions\nif(prependBasename&&basename!==\"/\"){path.pathname=path.pathname===\"/\"?basename:joinPaths([basename,path.pathname]);}return createPath(path);}// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod,isFetcher,path,opts){// Return location verbatim on non-submission navigations\nif(!opts||!isSubmissionNavigation(opts)){return{path:path};}if(opts.formMethod&&!isValidMethod(opts.formMethod)){return{path:path,error:getInternalRouterError(405,{method:opts.formMethod})};}// Create a Submission on non-GET navigations\nvar submission;if(opts.formData){var formMethod=opts.formMethod||\"get\";submission={formMethod:normalizeFormMethod?formMethod.toUpperCase():formMethod.toLowerCase(),formAction:stripHashFromPath(path),formEncType:opts&&opts.formEncType||\"application/x-www-form-urlencoded\",formData:opts.formData};if(isMutationMethod(submission.formMethod)){return{path:path,submission:submission};}}// Flatten submission onto URLSearchParams for GET submissions\nvar parsedPath=parsePath(path);var searchParams=convertFormDataToSearchParams(opts.formData);// On GET navigation submissions we can drop the ?index param from the\n// resulting location since all loaders will run.  But fetcher GET submissions\n// only run a single loader so we need to preserve any incoming ?index params\nif(isFetcher&&parsedPath.search&&hasNakedIndexQuery(parsedPath.search)){searchParams.append(\"index\",\"\");}parsedPath.search=\"?\"+searchParams;return{path:createPath(parsedPath),submission:submission};}// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches,boundaryId){var boundaryMatches=matches;if(boundaryId){var index=matches.findIndex(function(m){return m.route.id===boundaryId;});if(index>=0){boundaryMatches=matches.slice(0,index);}}return boundaryMatches;}function getMatchesToLoad(history,state,matches,submission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,routesToUse,basename,pendingActionData,pendingError){var actionResult=pendingError?Object.values(pendingError)[0]:pendingActionData?Object.values(pendingActionData)[0]:undefined;var currentUrl=history.createURL(state.location);var nextUrl=history.createURL(location);// Pick navigation matches that are net-new or qualify for revalidation\nvar boundaryId=pendingError?Object.keys(pendingError)[0]:undefined;var boundaryMatches=getLoaderMatchesUntilBoundary(matches,boundaryId);var navigationMatches=boundaryMatches.filter(function(match,index){if(match.route.lazy){// We haven't loaded this route yet so we don't know if it's got a loader!\nreturn true;}if(match.route.loader==null){return false;}// Always call the loader on new route instances and pending defer cancellations\nif(isNewLoader(state.loaderData,state.matches[index],match)||cancelledDeferredRoutes.some(function(id){return id===match.route.id;})){return true;}// This is the default implementation for when we revalidate.  If the route\n// provides it's own implementation, then we give them full control but\n// provide this value so they can leverage it if needed after they check\n// their own specific use cases\nvar currentRouteMatch=state.matches[index];var nextRouteMatch=match;return shouldRevalidateLoader(match,_extends({currentUrl:currentUrl,currentParams:currentRouteMatch.params,nextUrl:nextUrl,nextParams:nextRouteMatch.params},submission,{actionResult:actionResult,defaultShouldRevalidate:// Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\nisRevalidationRequired||// Clicked the same link, resubmitted a GET form\ncurrentUrl.pathname+currentUrl.search===nextUrl.pathname+nextUrl.search||// Search params affect all loaders\ncurrentUrl.search!==nextUrl.search||isNewRouteInstance(currentRouteMatch,nextRouteMatch)}));});// Pick fetcher.loads that need to be revalidated\nvar revalidatingFetchers=[];fetchLoadMatches.forEach(function(f,key){// Don't revalidate if fetcher won't be present in the subsequent render\nif(!matches.some(function(m){return m.route.id===f.routeId;})){return;}var fetcherMatches=matchRoutes(routesToUse,f.path,basename);// If the fetcher path no longer matches, push it in with null matches so\n// we can trigger a 404 in callLoadersAndMaybeResolveData\nif(!fetcherMatches){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:null,match:null,controller:null});return;}var fetcherMatch=getTargetMatch(fetcherMatches,f.path);if(cancelledFetcherLoads.includes(key)){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:fetcherMatches,match:fetcherMatch,controller:new AbortController()});return;}// Revalidating fetchers are decoupled from the route matches since they\n// hit a static href, so they _always_ check shouldRevalidate and the\n// default is strictly if a revalidation is explicitly required (action\n// submissions, useRevalidator, X-Remix-Revalidate).\nvar shouldRevalidate=shouldRevalidateLoader(fetcherMatch,_extends({currentUrl:currentUrl,currentParams:state.matches[state.matches.length-1].params,nextUrl:nextUrl,nextParams:matches[matches.length-1].params},submission,{actionResult:actionResult,// Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\ndefaultShouldRevalidate:isRevalidationRequired}));if(shouldRevalidate){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:fetcherMatches,match:fetcherMatch,controller:new AbortController()});}});return[navigationMatches,revalidatingFetchers];}function isNewLoader(currentLoaderData,currentMatch,match){var isNew=// [a] -> [a, b]\n!currentMatch||// [a, b] -> [a, c]\nmatch.route.id!==currentMatch.route.id;// Handle the case that we don't have data for a re-used route, potentially\n// from a prior error or from a cancelled pending deferred\nvar isMissingData=currentLoaderData[match.route.id]===undefined;// Always load if this is a net-new route or we don't yet have data\nreturn isNew||isMissingData;}function isNewRouteInstance(currentMatch,match){var currentPath=currentMatch.route.path;return(// param change for this match, /users/123 -> /users/456\ncurrentMatch.pathname!==match.pathname||// splat param changed, which is not present in match.path\n// e.g. /files/images/avatar.jpg -> files/finances.xls\ncurrentPath!=null&&currentPath.endsWith(\"*\")&&currentMatch.params[\"*\"]!==match.params[\"*\"]);}function shouldRevalidateLoader(loaderMatch,arg){if(loaderMatch.route.shouldRevalidate){var routeChoice=loaderMatch.route.shouldRevalidate(arg);if(typeof routeChoice===\"boolean\"){return routeChoice;}}return arg.defaultShouldRevalidate;}/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */function loadLazyRouteModule(_x60,_x61,_x62){return _loadLazyRouteModule.apply(this,arguments);}function _loadLazyRouteModule(){_loadLazyRouteModule=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(route,mapRouteProperties,manifest){var lazyRoute,routeToUpdate,routeUpdates,lazyRouteProperty,staticRouteValue,isPropertyStaticallyDefined;return _regeneratorRuntime().wrap(function _callee15$(_context16){while(1)switch(_context16.prev=_context16.next){case 0:if(route.lazy){_context16.next=2;break;}return _context16.abrupt(\"return\");case 2:_context16.next=4;return route.lazy();case 4:lazyRoute=_context16.sent;if(route.lazy){_context16.next=7;break;}return _context16.abrupt(\"return\");case 7:routeToUpdate=manifest[route.id];invariant(routeToUpdate,\"No route found in manifest\");// Update the route in place.  This should be safe because there's no way\n// we could yet be sitting on this route as we can't get there without\n// resolving lazy() first.\n//\n// This is different than the HMR \"update\" use-case where we may actively be\n// on the route being updated.  The main concern boils down to \"does this\n// mutation affect any ongoing navigations or any current state.matches\n// values?\".  If not, it should be safe to update in place.\nrouteUpdates={};for(lazyRouteProperty in lazyRoute){staticRouteValue=routeToUpdate[lazyRouteProperty];isPropertyStaticallyDefined=staticRouteValue!==undefined&&// This property isn't static since it should always be updated based\n// on the route updates\nlazyRouteProperty!==\"hasErrorBoundary\";warning(!isPropertyStaticallyDefined,\"Route \\\"\"+routeToUpdate.id+\"\\\" has a static property \\\"\"+lazyRouteProperty+\"\\\" \"+\"defined but its lazy function is also returning a value for this property. \"+(\"The lazy route property \\\"\"+lazyRouteProperty+\"\\\" will be ignored.\"));if(!isPropertyStaticallyDefined&&!immutableRouteKeys.has(lazyRouteProperty)){routeUpdates[lazyRouteProperty]=lazyRoute[lazyRouteProperty];}}// Mutate the route with the provided updates.  Do this first so we pass\n// the updated version to mapRouteProperties\nObject.assign(routeToUpdate,routeUpdates);// Mutate the `hasErrorBoundary` property on the route based on the route\n// updates and remove the `lazy` function so we don't resolve the lazy\n// route again.\nObject.assign(routeToUpdate,_extends({},mapRouteProperties(routeToUpdate),{lazy:undefined}));case 13:case\"end\":return _context16.stop();}},_callee15);}));return _loadLazyRouteModule.apply(this,arguments);}function callLoaderOrAction(_x63,_x64,_x65,_x66,_x67,_x68,_x69,_x70,_x71,_x72){return _callLoaderOrAction.apply(this,arguments);}// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction _callLoaderOrAction(){_callLoaderOrAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(type,request,match,matches,manifest,mapRouteProperties,basename,isStaticRequest,isRouteRequest,requestContext){var resultType,result,onReject,runHandler,handler,values,url,pathname,_url,_pathname,status,location,currentUrl,_url2,isSameBasename,data,contentType,_result$init,_result$init2;return _regeneratorRuntime().wrap(function _callee16$(_context17){while(1)switch(_context17.prev=_context17.next){case 0:if(isStaticRequest===void 0){isStaticRequest=false;}if(isRouteRequest===void 0){isRouteRequest=false;}runHandler=function runHandler(handler){// Setup a promise we can race against so that abort signals short circuit\nvar reject;var abortPromise=new Promise(function(_,r){return reject=r;});onReject=function onReject(){return reject();};request.signal.addEventListener(\"abort\",onReject);return Promise.race([handler({request:request,params:match.params,context:requestContext}),abortPromise]);};_context17.prev=3;handler=match.route[type];if(!match.route.lazy){_context17.next=31;break;}if(!handler){_context17.next=13;break;}_context17.next=9;return Promise.all([runHandler(handler),loadLazyRouteModule(match.route,mapRouteProperties,manifest)]);case 9:values=_context17.sent;result=values[0];_context17.next=29;break;case 13:_context17.next=15;return loadLazyRouteModule(match.route,mapRouteProperties,manifest);case 15:handler=match.route[type];if(!handler){_context17.next=22;break;}_context17.next=19;return runHandler(handler);case 19:result=_context17.sent;_context17.next=29;break;case 22:if(!(type===\"action\")){_context17.next=28;break;}url=new URL(request.url);pathname=url.pathname+url.search;throw getInternalRouterError(405,{method:request.method,pathname:pathname,routeId:match.route.id});case 28:return _context17.abrupt(\"return\",{type:ResultType.data,data:undefined});case 29:_context17.next=40;break;case 31:if(handler){_context17.next=37;break;}_url=new URL(request.url);_pathname=_url.pathname+_url.search;throw getInternalRouterError(404,{pathname:_pathname});case 37:_context17.next=39;return runHandler(handler);case 39:result=_context17.sent;case 40:invariant(result!==undefined,\"You defined \"+(type===\"action\"?\"an action\":\"a loader\")+\" for route \"+(\"\\\"\"+match.route.id+\"\\\" but didn't return anything from your `\"+type+\"` \")+\"function. Please return a value or `null`.\");_context17.next=47;break;case 43:_context17.prev=43;_context17.t0=_context17[\"catch\"](3);resultType=ResultType.error;result=_context17.t0;case 47:_context17.prev=47;if(onReject){request.signal.removeEventListener(\"abort\",onReject);}return _context17.finish(47);case 50:if(!isResponse(result)){_context17.next=75;break;}status=result.status;// Process redirects\nif(!redirectStatusCodes.has(status)){_context17.next=60;break;}location=result.headers.get(\"Location\");invariant(location,\"Redirects returned/thrown from loaders/actions must have a Location header\");// Support relative routing in internal redirects\nif(!ABSOLUTE_URL_REGEX.test(location)){location=normalizeTo(new URL(request.url),matches.slice(0,matches.indexOf(match)+1),basename,true,location);}else if(!isStaticRequest){// Strip off the protocol+origin for same-origin + same-basename absolute\n// redirects. If this is a static request, we can let it go back to the\n// browser as-is\ncurrentUrl=new URL(request.url);_url2=location.startsWith(\"//\")?new URL(currentUrl.protocol+location):new URL(location);isSameBasename=stripBasename(_url2.pathname,basename)!=null;if(_url2.origin===currentUrl.origin&&isSameBasename){location=_url2.pathname+_url2.search+_url2.hash;}}// Don't process redirects in the router during static requests requests.\n// Instead, throw the Response and let the server handle it with an HTTP\n// redirect.  We also update the Location header in place in this flow so\n// basename and relative routing is taken into account\nif(!isStaticRequest){_context17.next=59;break;}result.headers.set(\"Location\",location);throw result;case 59:return _context17.abrupt(\"return\",{type:ResultType.redirect,status:status,location:location,revalidate:result.headers.get(\"X-Remix-Revalidate\")!==null});case 60:if(!isRouteRequest){_context17.next=62;break;}throw{type:resultType||ResultType.data,response:result};case 62:contentType=result.headers.get(\"Content-Type\");// Check between word boundaries instead of startsWith() due to the last\n// paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\nif(!(contentType&&/\\bapplication\\/json\\b/.test(contentType))){_context17.next=69;break;}_context17.next=66;return result.json();case 66:data=_context17.sent;_context17.next=72;break;case 69:_context17.next=71;return result.text();case 71:data=_context17.sent;case 72:if(!(resultType===ResultType.error)){_context17.next=74;break;}return _context17.abrupt(\"return\",{type:resultType,error:new ErrorResponse(status,result.statusText,data),headers:result.headers});case 74:return _context17.abrupt(\"return\",{type:ResultType.data,data:data,statusCode:result.status,headers:result.headers});case 75:if(!(resultType===ResultType.error)){_context17.next=77;break;}return _context17.abrupt(\"return\",{type:resultType,error:result});case 77:if(!isDeferredData(result)){_context17.next=79;break;}return _context17.abrupt(\"return\",{type:ResultType.deferred,deferredData:result,statusCode:(_result$init=result.init)==null?void 0:_result$init.status,headers:((_result$init2=result.init)==null?void 0:_result$init2.headers)&&new Headers(result.init.headers)});case 79:return _context17.abrupt(\"return\",{type:ResultType.data,data:result});case 80:case\"end\":return _context17.stop();}},_callee16,null,[[3,43,47,50]]);}));return _callLoaderOrAction.apply(this,arguments);}function createClientSideRequest(history,location,signal,submission){var url=history.createURL(stripHashFromPath(location)).toString();var init={signal:signal};if(submission&&isMutationMethod(submission.formMethod)){var formMethod=submission.formMethod,formEncType=submission.formEncType,formData=submission.formData;// Didn't think we needed this but it turns out unlike other methods, patch\n// won't be properly normalized to uppercase and results in a 405 error.\n// See: https://fetch.spec.whatwg.org/#concept-method\ninit.method=formMethod.toUpperCase();init.body=formEncType===\"application/x-www-form-urlencoded\"?convertFormDataToSearchParams(formData):formData;}// Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\nreturn new Request(url,init);}function convertFormDataToSearchParams(formData){var searchParams=new URLSearchParams();var _iterator7=_createForOfIteratorHelper(formData.entries()),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var _step7$value=_slicedToArray(_step7.value,2),key=_step7$value[0],value=_step7$value[1];// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\nsearchParams.append(key,value instanceof File?value.name:value);}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}return searchParams;}function processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds){// Fill in loaderData/errors from our loaders\nvar loaderData={};var errors=null;var statusCode;var foundError=false;var loaderHeaders={};// Process loader results into state.loaderData/state.errors\nresults.forEach(function(result,index){var id=matchesToLoad[index].route.id;invariant(!isRedirectResult(result),\"Cannot handle redirect results in processLoaderData\");if(isErrorResult(result)){// Look upwards from the matched route for the closest ancestor\n// error boundary, defaulting to the root match\nvar boundaryMatch=findNearestBoundary(matches,id);var error=result.error;// If we have a pending action error, we report it at the highest-route\n// that throws a loader error, and then clear it out to indicate that\n// it was consumed\nif(pendingError){error=Object.values(pendingError)[0];pendingError=undefined;}errors=errors||{};// Prefer higher error values if lower errors bubble to the same boundary\nif(errors[boundaryMatch.route.id]==null){errors[boundaryMatch.route.id]=error;}// Clear our any prior loaderData for the throwing route\nloaderData[id]=undefined;// Once we find our first (highest) error, we set the status code and\n// prevent deeper status codes from overriding\nif(!foundError){foundError=true;statusCode=isRouteErrorResponse(result.error)?result.error.status:500;}if(result.headers){loaderHeaders[id]=result.headers;}}else{if(isDeferredResult(result)){activeDeferreds.set(id,result.deferredData);loaderData[id]=result.deferredData.data;}else{loaderData[id]=result.data;}// Error status codes always override success status codes, but if all\n// loaders are successful we take the deepest status code.\nif(result.statusCode!=null&&result.statusCode!==200&&!foundError){statusCode=result.statusCode;}if(result.headers){loaderHeaders[id]=result.headers;}}});// If we didn't consume the pending action error (i.e., all loaders\n// resolved), then consume it here.  Also clear out any loaderData for the\n// throwing route\nif(pendingError){errors=pendingError;loaderData[Object.keys(pendingError)[0]]=undefined;}return{loaderData:loaderData,errors:errors,statusCode:statusCode||200,loaderHeaders:loaderHeaders};}function processLoaderData(state,matches,matchesToLoad,results,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds){var _processRouteLoaderDa=processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds),loaderData=_processRouteLoaderDa.loaderData,errors=_processRouteLoaderDa.errors;// Process results from our revalidating fetchers\nfor(var index=0;index<revalidatingFetchers.length;index++){var _revalidatingFetchers=revalidatingFetchers[index],key=_revalidatingFetchers.key,match=_revalidatingFetchers.match,controller=_revalidatingFetchers.controller;invariant(fetcherResults!==undefined&&fetcherResults[index]!==undefined,\"Did not find corresponding fetcher result\");var result=fetcherResults[index];// Process fetcher non-redirect errors\nif(controller&&controller.signal.aborted){// Nothing to do for aborted fetchers\ncontinue;}else if(isErrorResult(result)){var boundaryMatch=findNearestBoundary(state.matches,match==null?void 0:match.route.id);if(!(errors&&errors[boundaryMatch.route.id])){errors=_extends({},errors,_defineProperty({},boundaryMatch.route.id,result.error));}state.fetchers.delete(key);}else if(isRedirectResult(result)){// Should never get here, redirects should get processed above, but we\n// keep this to type narrow to a success result in the else\ninvariant(false,\"Unhandled fetcher revalidation redirect\");}else if(isDeferredResult(result)){// Should never get here, deferred data should be awaited for fetchers\n// in resolveDeferredResults\ninvariant(false,\"Unhandled fetcher deferred data\");}else{var doneFetcher={state:\"idle\",data:result.data,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,\" _hasFetcherDoneAnything \":true};state.fetchers.set(key,doneFetcher);}}return{loaderData:loaderData,errors:errors};}function mergeLoaderData(loaderData,newLoaderData,matches,errors){var mergedLoaderData=_extends({},newLoaderData);var _iterator8=_createForOfIteratorHelper(matches),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var match=_step8.value;var id=match.route.id;if(newLoaderData.hasOwnProperty(id)){if(newLoaderData[id]!==undefined){mergedLoaderData[id]=newLoaderData[id];}}else if(loaderData[id]!==undefined&&match.route.loader){// Preserve existing keys not included in newLoaderData and where a loader\n// wasn't removed by HMR\nmergedLoaderData[id]=loaderData[id];}if(errors&&errors.hasOwnProperty(id)){// Don't keep any loader data below the boundary\nbreak;}}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}return mergedLoaderData;}// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches,routeId){var eligibleMatches=routeId?matches.slice(0,matches.findIndex(function(m){return m.route.id===routeId;})+1):_toConsumableArray(matches);return eligibleMatches.reverse().find(function(m){return m.route.hasErrorBoundary===true;})||matches[0];}function getShortCircuitMatches(routes){// Prefer a root layout route if present, otherwise shim in a route object\nvar route=routes.find(function(r){return r.index||!r.path||r.path===\"/\";})||{id:\"__shim-error-route__\"};return{matches:[{params:{},pathname:\"\",pathnameBase:\"\",route:route}],route:route};}function getInternalRouterError(status,_temp4){var _ref11=_temp4===void 0?{}:_temp4,pathname=_ref11.pathname,routeId=_ref11.routeId,method=_ref11.method,type=_ref11.type;var statusText=\"Unknown Server Error\";var errorMessage=\"Unknown @remix-run/router error\";if(status===400){statusText=\"Bad Request\";if(method&&pathname&&routeId){errorMessage=\"You made a \"+method+\" request to \\\"\"+pathname+\"\\\" but \"+(\"did not provide a `loader` for route \\\"\"+routeId+\"\\\", \")+\"so there is no way to handle the request.\";}else if(type===\"defer-action\"){errorMessage=\"defer() is not supported in actions\";}}else if(status===403){statusText=\"Forbidden\";errorMessage=\"Route \\\"\"+routeId+\"\\\" does not match URL \\\"\"+pathname+\"\\\"\";}else if(status===404){statusText=\"Not Found\";errorMessage=\"No route matches URL \\\"\"+pathname+\"\\\"\";}else if(status===405){statusText=\"Method Not Allowed\";if(method&&pathname&&routeId){errorMessage=\"You made a \"+method.toUpperCase()+\" request to \\\"\"+pathname+\"\\\" but \"+(\"did not provide an `action` for route \\\"\"+routeId+\"\\\", \")+\"so there is no way to handle the request.\";}else if(method){errorMessage=\"Invalid request method \\\"\"+method.toUpperCase()+\"\\\"\";}}return new ErrorResponse(status||500,statusText,new Error(errorMessage),true);}// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results){for(var i=results.length-1;i>=0;i--){var result=results[i];if(isRedirectResult(result)){return result;}}}function stripHashFromPath(path){var parsedPath=typeof path===\"string\"?parsePath(path):path;return createPath(_extends({},parsedPath,{hash:\"\"}));}function isHashChangeOnly(a,b){if(a.pathname!==b.pathname||a.search!==b.search){return false;}if(a.hash===\"\"){// /page -> /page#hash\nreturn b.hash!==\"\";}else if(a.hash===b.hash){// /page#hash -> /page#hash\nreturn true;}else if(b.hash!==\"\"){// /page#hash -> /page#other\nreturn true;}// If the hash is removed the browser will re-perform a request to the server\n// /page#hash -> /page\nreturn false;}function isDeferredResult(result){return result.type===ResultType.deferred;}function isErrorResult(result){return result.type===ResultType.error;}function isRedirectResult(result){return(result&&result.type)===ResultType.redirect;}function isDeferredData(value){var deferred=value;return deferred&&typeof deferred===\"object\"&&typeof deferred.data===\"object\"&&typeof deferred.subscribe===\"function\"&&typeof deferred.cancel===\"function\"&&typeof deferred.resolveData===\"function\";}function isResponse(value){return value!=null&&typeof value.status===\"number\"&&typeof value.statusText===\"string\"&&typeof value.headers===\"object\"&&typeof value.body!==\"undefined\";}function isRedirectResponse(result){if(!isResponse(result)){return false;}var status=result.status;var location=result.headers.get(\"Location\");return status>=300&&status<=399&&location!=null;}function isQueryRouteResponse(obj){return obj&&isResponse(obj.response)&&(obj.type===ResultType.data||ResultType.error);}function isValidMethod(method){return validRequestMethods.has(method.toLowerCase());}function isMutationMethod(method){return validMutationMethods.has(method.toLowerCase());}function resolveDeferredResults(_x73,_x74,_x75,_x76,_x77,_x78){return _resolveDeferredResults.apply(this,arguments);}function _resolveDeferredResults(){_resolveDeferredResults=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(currentMatches,matchesToLoad,results,signals,isFetcher,currentLoaderData){var _loop,index,_ret;return _regeneratorRuntime().wrap(function _callee17$(_context19){while(1)switch(_context19.prev=_context19.next){case 0:_loop=/*#__PURE__*/_regeneratorRuntime().mark(function _loop(index){var result,match,currentMatch,isRevalidatingLoader,signal;return _regeneratorRuntime().wrap(function _loop$(_context18){while(1)switch(_context18.prev=_context18.next){case 0:result=results[index];match=matchesToLoad[index];// If we don't have a match, then we can have a deferred result to do\n// anything with.  This is for revalidating fetchers where the route was\n// removed during HMR\nif(match){_context18.next=4;break;}return _context18.abrupt(\"return\",\"continue\");case 4:currentMatch=currentMatches.find(function(m){return m.route.id===match.route.id;});isRevalidatingLoader=currentMatch!=null&&!isNewRouteInstance(currentMatch,match)&&(currentLoaderData&&currentLoaderData[match.route.id])!==undefined;if(!(isDeferredResult(result)&&(isFetcher||isRevalidatingLoader))){_context18.next=11;break;}// Note: we do not have to touch activeDeferreds here since we race them\n// against the signal in resolveDeferredData and they'll get aborted\n// there if needed\nsignal=signals[index];invariant(signal,\"Expected an AbortSignal for revalidating fetcher deferred result\");_context18.next=11;return resolveDeferredData(result,signal,isFetcher).then(function(result){if(result){results[index]=result||results[index];}});case 11:case\"end\":return _context18.stop();}},_loop);});index=0;case 2:if(!(index<results.length)){_context19.next=10;break;}return _context19.delegateYield(_loop(index),\"t0\",4);case 4:_ret=_context19.t0;if(!(_ret===\"continue\")){_context19.next=7;break;}return _context19.abrupt(\"continue\",7);case 7:index++;_context19.next=2;break;case 10:case\"end\":return _context19.stop();}},_callee17);}));return _resolveDeferredResults.apply(this,arguments);}function resolveDeferredData(_x79,_x80,_x81){return _resolveDeferredData.apply(this,arguments);}function _resolveDeferredData(){_resolveDeferredData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(result,signal,unwrap){var aborted;return _regeneratorRuntime().wrap(function _callee18$(_context20){while(1)switch(_context20.prev=_context20.next){case 0:if(unwrap===void 0){unwrap=false;}_context20.next=3;return result.deferredData.resolveData(signal);case 3:aborted=_context20.sent;if(!aborted){_context20.next=6;break;}return _context20.abrupt(\"return\");case 6:if(!unwrap){_context20.next=14;break;}_context20.prev=7;return _context20.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.unwrappedData});case 11:_context20.prev=11;_context20.t0=_context20[\"catch\"](7);return _context20.abrupt(\"return\",{type:ResultType.error,error:_context20.t0});case 14:return _context20.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.data});case 15:case\"end\":return _context20.stop();}},_callee18,null,[[7,11]]);}));return _resolveDeferredData.apply(this,arguments);}function hasNakedIndexQuery(search){return new URLSearchParams(search).getAll(\"index\").some(function(v){return v===\"\";});}// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match,loaderData){var route=match.route,pathname=match.pathname,params=match.params;return{id:route.id,pathname:pathname,params:params,data:loaderData[route.id],handle:route.handle};}function getTargetMatch(matches,location){var search=typeof location===\"string\"?parsePath(location).search:location.search;if(matches[matches.length-1].route.index&&hasNakedIndexQuery(search||\"\")){// Return the leaf index route when index is present\nreturn matches[matches.length-1];}// Otherwise grab the deepest \"path contributing\" match (ignoring index and\n// pathless layout routes)\nvar pathMatches=getPathContributingMatches(matches);return pathMatches[pathMatches.length-1];}//#endregion\nexport{AbortedDeferredError,Action,ErrorResponse,IDLE_BLOCKER,IDLE_FETCHER,IDLE_NAVIGATION,UNSAFE_DEFERRED_SYMBOL,DeferredData as UNSAFE_DeferredData,convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes,getPathContributingMatches as UNSAFE_getPathContributingMatches,invariant as UNSAFE_invariant,warning as UNSAFE_warning,createBrowserHistory,createHashHistory,createMemoryHistory,createPath,createRouter,createStaticHandler,defer,generatePath,getStaticContextFromError,getToPathname,isDeferredData,isRouteErrorResponse,joinPaths,json,matchPath,matchRoutes,normalizePathname,parsePath,redirect,resolvePath,resolveTo,stripBasename};","map":{"version":3,"names":["Action","PopStateEventType","createMemoryHistory","options","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","entries","map","entry","index","createMemoryLocation","state","undefined","clampIndex","length","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","key","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","history","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","_window$location","usr","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","invariant","value","message","Error","cond","console","warn","e","createKey","random","toString","getHistoryState","idx","current","_extends","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","getIndex","replaceState","handlePop","historyState","pushState","error","DOMException","name","assign","origin","addEventListener","removeEventListener","ResultType","immutableRouteKeys","Set","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","concat","_toConsumableArray","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","startsWith","joinPaths","routesMeta","score","computeScore","forEach","_route$path","includes","_iterator","_createForOfIteratorHelper","explodeOptionalSegments","_step","s","done","exploded","err","f","segments","split","_segments","_toArray","first","rest","isOptional","endsWith","required","restExploded","result","apply","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","params","pathnameBase","normalizePathname","generatePath","originalPath","prefix","array","isLastSegment","star","starParam","keyMatch","_keyMatch","_slicedToArray","optional","param","pattern","_compilePath","compilePath","_compilePath2","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","_","RegExp","decodeURI","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref3","toPathname","_ref3$search","_ref3$hash","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","getToPathname","paths","json","data","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","arguments","_createClass","_wrapNativeSuper","DeferredData","_this","pendingKeysSet","subscribers","deferredKeys","Array","isArray","reject","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref4","_defineProperty","trackPromise","_this2","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","emit","settledKey","subscriber","subscribe","_this3","cancel","_this4","abort","v","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_callee$","_context","prev","next","resolve","sent","abrupt","stop","resolveData","_x","size","_ref2","_ref5","unwrapTrackedPromise","isTrackedPromise","_tracked","_error","_data","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","dataRoutes","inFlightDataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","initialized","m","lazy","loader","router","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","initialize","blockerKey","shouldBlockNavigation","currentLocation","updateBlocker","deleteBlocker","updateState","startNavigation","dispose","clear","deleteFetcher","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","_iterator2","_step2","_step2$value","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","userReplace","_callee2$","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","pendingError","revalidate","interruptActiveLoads","startUninterruptedRevalidation","overrideNavigation","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_callee3$","_context3","saveScrollPosition","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_callee4$","_context4","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_callee5$","_context5","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","fetch","setFetcherError","_normalizeNavigateOpt","handleFetcherAction","handleFetcherLoader","_x21","_x22","_x23","_x24","_x25","_x26","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","doneFetcher","_callee6$","_context6","isFetchActionRedirect","staleKey","_x27","_x28","_x29","_x30","_x31","_x32","_handleFetcherLoader","_callee7","_callee7$","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_ref6","redirectLocation","isDifferentBasename","redirectHistoryAction","_state$navigation","_callee8$","_context8","_isFetchActionRedirect","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_callee9$","_context9","all","resolveDeferredResults","_cancelledDeferredRou","markFetchersDone","_iterator3","_step3","doneKeys","_iterator4","_step4","landedId","yeetedKeys","_iterator5","_step5","_step5$value","getBlocker","blocker","newBlocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","userMatches","createUseMatchesMatch","_internalSetRoutes","newRoutes","_internalFetchControllers","_internalActiveDeferreds","UNSAFE_DEFERRED_SYMBOL","Symbol","createStaticHandler","query","_x41","_x42","_query","_callee10","_temp2","_ref7","requestContext","_getShortCircuitMatch3","methodNotAllowedMatches","_error4","_getShortCircuitMatch4","_route2","_callee10$","_context10","isValidMethod","statusCode","loaderHeaders","actionHeaders","queryImpl","isResponse","queryRoute","_x43","_x44","_queryRoute","_callee11","_temp3","_ref8","_result$activeDeferre","_callee11$","_context11","find","values","_x45","_x46","_x47","_x48","_x49","_queryImpl","_callee12","routeMatch","_result","_callee12$","_context12","submit","loadRouteData","isQueryRouteResponse","isRedirectResponse","response","_x50","_x51","_x52","_x53","_x54","_submit","_callee13","isRouteRequest","_error5","_context13","loaderRequest","context","_callee13$","_context14","Location","_x55","_x56","_x57","_x58","_x59","_loadRouteData","_callee14","executedLoaders","_callee14$","_context15","getLoaderMatchesUntilBoundary","processRouteLoaderData","fromEntries","getStaticContextFromError","newContext","_deepestRenderedBoundaryId","isSubmissionNavigation","prependBasename","contextualMatches","activeRouteMatch","_iterator6","_step6","hasNakedIndexQuery","normalizeFormMethod","isFetcher","toUpperCase","stripHashFromPath","searchParams","convertFormDataToSearchParams","append","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_callee15$","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_callLoaderOrAction","_callee16","isStaticRequest","resultType","onReject","runHandler","handler","_url","_pathname","_url2","isSameBasename","contentType","_result$init","_result$init2","_callee16$","_context17","finish","protocol","text","isDeferredData","deferred","body","URLSearchParams","_iterator7","_step7","_step7$value","File","foundError","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","mergedLoaderData","_iterator8","_step8","hasOwnProperty","eligibleMatches","reverse","_temp4","_ref11","errorMessage","obj","_x73","_x74","_x75","_x76","_x77","_x78","_resolveDeferredResults","_callee17","signals","_loop","_ret","_callee17$","_context19","isRevalidatingLoader","_loop$","_context18","delegateYield","_x79","_x80","_x81","_resolveDeferredData","_callee18","unwrap","_callee18$","_context20","unwrappedData","getAll","handle","pathMatches"],"sources":["/Users/christinaqiu/Documents/GitHub/personal-website/src/node_modules/@remix-run/router/history.ts","/Users/christinaqiu/Documents/GitHub/personal-website/src/node_modules/@remix-run/router/utils.ts","/Users/christinaqiu/Documents/GitHub/personal-website/src/node_modules/@remix-run/router/router.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod | V7_FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<Omit<R, ImmutableRouteKey>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        const starParam = params[star];\n\n        // Apply the splat\n        return starParam;\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n\n        if (optional === \"?\") {\n          return param == null ? \"\" : param;\n        }\n\n        if (param == null) {\n          invariant(false, `Missing \":${key}\" param`);\n        }\n\n        return param;\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\ntype BaseNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  fromRouteId?: string;\n};\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | V7_FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod | V7_FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission || fetcherSubmission\n        ? submission || fetcherSubmission\n        : loadingNavigation.formMethod &&\n          loadingNavigation.formAction &&\n          loadingNavigation.formData &&\n          loadingNavigation.formEncType\n        ? {\n            formMethod: loadingNavigation.formMethod,\n            formAction: loadingNavigation.formAction,\n            formData: loadingNavigation.formData,\n            formEncType: loadingNavigation.formEncType,\n          }\n        : undefined;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) => {\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: actionResult.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      fetchRedirectIds.add(key);\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: normalizeFormMethod\n        ? (formMethod.toUpperCase() as V7_FormMethod)\n        : (formMethod.toLowerCase() as FormMethod),\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params,\n      ...submission,\n      actionResult,\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      defaultShouldRevalidate: isRevalidationRequired,\n    });\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}