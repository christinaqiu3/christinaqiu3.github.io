{"ast":null,"code":"import _regeneratorRuntime from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _createClass from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _wrapNativeSuper from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";import _slicedToArray from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toArray from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/toArray.js\";import _createForOfIteratorHelper from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/Users/christinaqiu/Documents/GitHub/personal-website/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";/**\n * @remix-run/router v1.10.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */var Action;(function(Action){/**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */Action[\"Pop\"]=\"POP\";/**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */Action[\"Push\"]=\"PUSH\";/**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */Action[\"Replace\"]=\"REPLACE\";})(Action||(Action={}));var PopStateEventType=\"popstate\";/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */function createMemoryHistory(options){if(options===void 0){options={};}var _options=options,_options$initialEntri=_options.initialEntries,initialEntries=_options$initialEntri===void 0?[\"/\"]:_options$initialEntri,initialIndex=_options.initialIndex,_options$v5Compat=_options.v5Compat,v5Compat=_options$v5Compat===void 0?false:_options$v5Compat;var entries;// Declare so we can access from createMemoryLocation\nentries=initialEntries.map(function(entry,index){return createMemoryLocation(entry,typeof entry===\"string\"?null:entry.state,index===0?\"default\":undefined);});var index=clampIndex(initialIndex==null?entries.length-1:initialIndex);var action=Action.Pop;var listener=null;function clampIndex(n){return Math.min(Math.max(n,0),entries.length-1);}function getCurrentLocation(){return entries[index];}function createMemoryLocation(to,state,key){if(state===void 0){state=null;}var location=createLocation(entries?getCurrentLocation().pathname:\"/\",to,state,key);warning(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in memory history: \"+JSON.stringify(to));return location;}function createHref(to){return typeof to===\"string\"?to:createPath(to);}var history={get index(){return index;},get action(){return action;},get location(){return getCurrentLocation();},createHref:createHref,createURL:function createURL(to){return new URL(createHref(to),\"http://localhost\");},encodeLocation:function encodeLocation(to){var path=typeof to===\"string\"?parsePath(to):to;return{pathname:path.pathname||\"\",search:path.search||\"\",hash:path.hash||\"\"};},push:function push(to,state){action=Action.Push;var nextLocation=createMemoryLocation(to,state);index+=1;entries.splice(index,entries.length,nextLocation);if(v5Compat&&listener){listener({action:action,location:nextLocation,delta:1});}},replace:function replace(to,state){action=Action.Replace;var nextLocation=createMemoryLocation(to,state);entries[index]=nextLocation;if(v5Compat&&listener){listener({action:action,location:nextLocation,delta:0});}},go:function go(delta){action=Action.Pop;var nextIndex=clampIndex(index+delta);var nextLocation=entries[nextIndex];index=nextIndex;if(listener){listener({action:action,location:nextLocation,delta:delta});}},listen:function listen(fn){listener=fn;return function(){listener=null;};}};return history;}/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */function createBrowserHistory(options){if(options===void 0){options={};}function createBrowserLocation(window,globalHistory){var _window$location=window.location,pathname=_window$location.pathname,search=_window$location.search,hash=_window$location.hash;return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createBrowserHref(window,to){return typeof to===\"string\"?to:createPath(to);}return getUrlBasedHistory(createBrowserLocation,createBrowserHref,null,options);}/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */function createHashHistory(options){if(options===void 0){options={};}function createHashLocation(window,globalHistory){var _parsePath=parsePath(window.location.hash.substr(1)),_parsePath$pathname=_parsePath.pathname,pathname=_parsePath$pathname===void 0?\"/\":_parsePath$pathname,_parsePath$search=_parsePath.search,search=_parsePath$search===void 0?\"\":_parsePath$search,_parsePath$hash=_parsePath.hash,hash=_parsePath$hash===void 0?\"\":_parsePath$hash;// Hash URL should always have a leading / just like window.location.pathname\n// does, so if an app ends up at a route like /#something then we add a\n// leading slash so all of our path-matching behaves the same as if it would\n// in a browser router.  This is particularly important when there exists a\n// root splat route (<Route path=\"*\">) since that matches internally against\n// \"/*\" and we'd expect /#something to 404 in a hash router app.\nif(!pathname.startsWith(\"/\")&&!pathname.startsWith(\".\")){pathname=\"/\"+pathname;}return createLocation(\"\",{pathname:pathname,search:search,hash:hash},// state defaults to `null` because `window.history.state` does\nglobalHistory.state&&globalHistory.state.usr||null,globalHistory.state&&globalHistory.state.key||\"default\");}function createHashHref(window,to){var base=window.document.querySelector(\"base\");var href=\"\";if(base&&base.getAttribute(\"href\")){var url=window.location.href;var hashIndex=url.indexOf(\"#\");href=hashIndex===-1?url:url.slice(0,hashIndex);}return href+\"#\"+(typeof to===\"string\"?to:createPath(to));}function validateHashLocation(location,to){warning(location.pathname.charAt(0)===\"/\",\"relative pathnames are not supported in hash history.push(\"+JSON.stringify(to)+\")\");}return getUrlBasedHistory(createHashLocation,createHashHref,validateHashLocation,options);}function invariant(value,message){if(value===false||value===null||typeof value===\"undefined\"){throw new Error(message);}}function warning(cond,message){if(!cond){// eslint-disable-next-line no-console\nif(typeof console!==\"undefined\")console.warn(message);try{// Welcome to debugging history!\n//\n// This error is thrown as a convenience, so you can more easily\n// find the source for a warning that appears in the console by\n// enabling \"pause on exceptions\" in your JavaScript debugger.\nthrow new Error(message);// eslint-disable-next-line no-empty\n}catch(e){}}}function createKey(){return Math.random().toString(36).substr(2,8);}/**\n * For browser-based histories, we combine the state and key into an object\n */function getHistoryState(location,index){return{usr:location.state,key:location.key,idx:index};}/**\n * Creates a Location object with a unique key from the given Path\n */function createLocation(current,to,state,key){if(state===void 0){state=null;}var location=_extends({pathname:typeof current===\"string\"?current:current.pathname,search:\"\",hash:\"\"},typeof to===\"string\"?parsePath(to):to,{state:state,// TODO: This could be cleaned up.  push/replace should probably just take\n// full Locations now and avoid the need to run through this flow at all\n// But that's a pretty big refactor to the current test suite so going to\n// keep as is for the time being and just let any incoming keys take precedence\nkey:to&&to.key||key||createKey()});return location;}/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */function createPath(_ref){var _ref$pathname=_ref.pathname,pathname=_ref$pathname===void 0?\"/\":_ref$pathname,_ref$search=_ref.search,search=_ref$search===void 0?\"\":_ref$search,_ref$hash=_ref.hash,hash=_ref$hash===void 0?\"\":_ref$hash;if(search&&search!==\"?\")pathname+=search.charAt(0)===\"?\"?search:\"?\"+search;if(hash&&hash!==\"#\")pathname+=hash.charAt(0)===\"#\"?hash:\"#\"+hash;return pathname;}/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */function parsePath(path){var parsedPath={};if(path){var hashIndex=path.indexOf(\"#\");if(hashIndex>=0){parsedPath.hash=path.substr(hashIndex);path=path.substr(0,hashIndex);}var searchIndex=path.indexOf(\"?\");if(searchIndex>=0){parsedPath.search=path.substr(searchIndex);path=path.substr(0,searchIndex);}if(path){parsedPath.pathname=path;}}return parsedPath;}function getUrlBasedHistory(getLocation,_createHref,validateLocation,options){if(options===void 0){options={};}var _options2=options,_options2$window=_options2.window,window=_options2$window===void 0?document.defaultView:_options2$window,_options2$v5Compat=_options2.v5Compat,v5Compat=_options2$v5Compat===void 0?false:_options2$v5Compat;var globalHistory=window.history;var action=Action.Pop;var listener=null;var index=getIndex();// Index should only be null when we initialize. If not, it's because the\n// user called history.pushState or history.replaceState directly, in which\n// case we should log a warning as it will result in bugs.\nif(index==null){index=0;globalHistory.replaceState(_extends({},globalHistory.state,{idx:index}),\"\");}function getIndex(){var state=globalHistory.state||{idx:null};return state.idx;}function handlePop(){action=Action.Pop;var nextIndex=getIndex();var delta=nextIndex==null?null:nextIndex-index;index=nextIndex;if(listener){listener({action:action,location:history.location,delta:delta});}}function push(to,state){action=Action.Push;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);index=getIndex()+1;var historyState=getHistoryState(location,index);var url=history.createHref(location);// try...catch because iOS limits us to 100 pushState calls :/\ntry{globalHistory.pushState(historyState,\"\",url);}catch(error){// If the exception is because `state` can't be serialized, let that throw\n// outwards just like a replace call would so the dev knows the cause\n// https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n// https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\nif(error instanceof DOMException&&error.name===\"DataCloneError\"){throw error;}// They are going to lose state here, but there is no real\n// way to warn them about it since the page will refresh...\nwindow.location.assign(url);}if(v5Compat&&listener){listener({action:action,location:history.location,delta:1});}}function replace(to,state){action=Action.Replace;var location=createLocation(history.location,to,state);if(validateLocation)validateLocation(location,to);index=getIndex();var historyState=getHistoryState(location,index);var url=history.createHref(location);globalHistory.replaceState(historyState,\"\",url);if(v5Compat&&listener){listener({action:action,location:history.location,delta:0});}}function createURL(to){// window.location.origin is \"null\" (the literal string value) in Firefox\n// under certain conditions, notably when serving from a local HTML file\n// See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\nvar base=window.location.origin!==\"null\"?window.location.origin:window.location.href;var href=typeof to===\"string\"?to:createPath(to);invariant(base,\"No window.location.(origin|href) available to create URL for href: \"+href);return new URL(href,base);}var history={get action(){return action;},get location(){return getLocation(window,globalHistory);},listen:function listen(fn){if(listener){throw new Error(\"A history only accepts one active listener\");}window.addEventListener(PopStateEventType,handlePop);listener=fn;return function(){window.removeEventListener(PopStateEventType,handlePop);listener=null;};},createHref:function createHref(to){return _createHref(window,to);},createURL:createURL,encodeLocation:function encodeLocation(to){// Encode a Location the same way window.location would\nvar url=createURL(to);return{pathname:url.pathname,search:url.search,hash:url.hash};},push:push,replace:replace,go:function go(n){return globalHistory.go(n);}};return history;}//#endregion\nvar ResultType;(function(ResultType){ResultType[\"data\"]=\"data\";ResultType[\"deferred\"]=\"deferred\";ResultType[\"redirect\"]=\"redirect\";ResultType[\"error\"]=\"error\";})(ResultType||(ResultType={}));var immutableRouteKeys=new Set([\"lazy\",\"caseSensitive\",\"path\",\"id\",\"index\",\"children\"]);function isIndexRoute(route){return route.index===true;}// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes,mapRouteProperties,parentPath,manifest){if(parentPath===void 0){parentPath=[];}if(manifest===void 0){manifest={};}return routes.map(function(route,index){var treePath=[].concat(_toConsumableArray(parentPath),[index]);var id=typeof route.id===\"string\"?route.id:treePath.join(\"-\");invariant(route.index!==true||!route.children,\"Cannot specify children on an index route\");invariant(!manifest[id],\"Found a route id collision on id \\\"\"+id+\"\\\".  Route \"+\"id's must be globally unique within Data Router usages\");if(isIndexRoute(route)){var indexRoute=_extends({},route,mapRouteProperties(route),{id:id});manifest[id]=indexRoute;return indexRoute;}else{var pathOrLayoutRoute=_extends({},route,mapRouteProperties(route),{id:id,children:undefined});manifest[id]=pathOrLayoutRoute;if(route.children){pathOrLayoutRoute.children=convertRoutesToDataRoutes(route.children,mapRouteProperties,treePath,manifest);}return pathOrLayoutRoute;}});}/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */function matchRoutes(routes,locationArg,basename){if(basename===void 0){basename=\"/\";}var location=typeof locationArg===\"string\"?parsePath(locationArg):locationArg;var pathname=stripBasename(location.pathname||\"/\",basename);if(pathname==null){return null;}var branches=flattenRoutes(routes);rankRouteBranches(branches);var matches=null;for(var i=0;matches==null&&i<branches.length;++i){matches=matchRouteBranch(branches[i],// Incoming pathnames are generally encoded from either window.location\n// or from router.navigate, but we want to match against the unencoded\n// paths in the route definitions.  Memory router locations won't be\n// encoded here but there also shouldn't be anything to decode so this\n// should be a safe operation.  This avoids needing matchRoutes to be\n// history-aware.\nsafelyDecodeURI(pathname));}return matches;}function convertRouteMatchToUiMatch(match,loaderData){var route=match.route,pathname=match.pathname,params=match.params;return{id:route.id,pathname:pathname,params:params,data:loaderData[route.id],handle:route.handle};}function flattenRoutes(routes,branches,parentsMeta,parentPath){if(branches===void 0){branches=[];}if(parentsMeta===void 0){parentsMeta=[];}if(parentPath===void 0){parentPath=\"\";}var flattenRoute=function flattenRoute(route,index,relativePath){var meta={relativePath:relativePath===undefined?route.path||\"\":relativePath,caseSensitive:route.caseSensitive===true,childrenIndex:index,route:route};if(meta.relativePath.startsWith(\"/\")){invariant(meta.relativePath.startsWith(parentPath),\"Absolute route path \\\"\"+meta.relativePath+\"\\\" nested under path \"+(\"\\\"\"+parentPath+\"\\\" is not valid. An absolute child route path \")+\"must start with the combined path of all its parent routes.\");meta.relativePath=meta.relativePath.slice(parentPath.length);}var path=joinPaths([parentPath,meta.relativePath]);var routesMeta=parentsMeta.concat(meta);// Add the children before adding this route to the array, so we traverse the\n// route tree depth-first and child routes appear before their parents in\n// the \"flattened\" version.\nif(route.children&&route.children.length>0){invariant(// Our types know better, but runtime JS may not!\n// @ts-expect-error\nroute.index!==true,\"Index routes must not have child routes. Please remove \"+(\"all child routes from route path \\\"\"+path+\"\\\".\"));flattenRoutes(route.children,branches,routesMeta,path);}// Routes without a path shouldn't ever match by themselves unless they are\n// index routes, so don't add them to the list of possible branches.\nif(route.path==null&&!route.index){return;}branches.push({path:path,score:computeScore(path,route.index),routesMeta:routesMeta});};routes.forEach(function(route,index){var _route$path;// coarse-grain check for optional params\nif(route.path===\"\"||!((_route$path=route.path)!=null&&_route$path.includes(\"?\"))){flattenRoute(route,index);}else{var _iterator=_createForOfIteratorHelper(explodeOptionalSegments(route.path)),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var exploded=_step.value;flattenRoute(route,index,exploded);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}});return branches;}/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */function explodeOptionalSegments(path){var segments=path.split(\"/\");if(segments.length===0)return[];var _segments=_toArray(segments),first=_segments[0],rest=_segments.slice(1);// Optional path segments are denoted by a trailing `?`\nvar isOptional=first.endsWith(\"?\");// Compute the corresponding required segment: `foo?` -> `foo`\nvar required=first.replace(/\\?$/,\"\");if(rest.length===0){// Intepret empty string as omitting an optional segment\n// `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\nreturn isOptional?[required,\"\"]:[required];}var restExploded=explodeOptionalSegments(rest.join(\"/\"));var result=[];// All child paths with the prefix.  Do this for all children before the\n// optional version for all children, so we get consistent ordering where the\n// parent optional aspect is preferred as required.  Otherwise, we can get\n// child sections interspersed where deeper optional segments are higher than\n// parent optional segments, where for example, /:two would explode _earlier_\n// then /:one.  By always including the parent as required _for all children_\n// first, we avoid this issue\nresult.push.apply(result,_toConsumableArray(restExploded.map(function(subpath){return subpath===\"\"?required:[required,subpath].join(\"/\");})));// Then, if this is an optional value, add all child versions without\nif(isOptional){result.push.apply(result,_toConsumableArray(restExploded));}// for absolute paths, ensure `/` instead of empty segment\nreturn result.map(function(exploded){return path.startsWith(\"/\")&&exploded===\"\"?\"/\":exploded;});}function rankRouteBranches(branches){branches.sort(function(a,b){return a.score!==b.score?b.score-a.score// Higher score first\n:compareIndexes(a.routesMeta.map(function(meta){return meta.childrenIndex;}),b.routesMeta.map(function(meta){return meta.childrenIndex;}));});}var paramRe=/^:\\w+$/;var dynamicSegmentValue=3;var indexRouteValue=2;var emptySegmentValue=1;var staticSegmentValue=10;var splatPenalty=-2;var isSplat=function isSplat(s){return s===\"*\";};function computeScore(path,index){var segments=path.split(\"/\");var initialScore=segments.length;if(segments.some(isSplat)){initialScore+=splatPenalty;}if(index){initialScore+=indexRouteValue;}return segments.filter(function(s){return!isSplat(s);}).reduce(function(score,segment){return score+(paramRe.test(segment)?dynamicSegmentValue:segment===\"\"?emptySegmentValue:staticSegmentValue);},initialScore);}function compareIndexes(a,b){var siblings=a.length===b.length&&a.slice(0,-1).every(function(n,i){return n===b[i];});return siblings?// If two routes are siblings, we should try to match the earlier sibling\n// first. This allows people to have fine-grained control over the matching\n// behavior by simply putting routes with identical paths in the order they\n// want them tried.\na[a.length-1]-b[b.length-1]:// Otherwise, it doesn't really make sense to rank non-siblings by index,\n// so they sort equally.\n0;}function matchRouteBranch(branch,pathname){var routesMeta=branch.routesMeta;var matchedParams={};var matchedPathname=\"/\";var matches=[];for(var i=0;i<routesMeta.length;++i){var meta=routesMeta[i];var end=i===routesMeta.length-1;var remainingPathname=matchedPathname===\"/\"?pathname:pathname.slice(matchedPathname.length)||\"/\";var match=matchPath({path:meta.relativePath,caseSensitive:meta.caseSensitive,end:end},remainingPathname);if(!match)return null;Object.assign(matchedParams,match.params);var route=meta.route;matches.push({// TODO: Can this as be avoided?\nparams:matchedParams,pathname:joinPaths([matchedPathname,match.pathname]),pathnameBase:normalizePathname(joinPaths([matchedPathname,match.pathnameBase])),route:route});if(match.pathnameBase!==\"/\"){matchedPathname=joinPaths([matchedPathname,match.pathnameBase]);}}return matches;}/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */function generatePath(originalPath,params){if(params===void 0){params={};}var path=originalPath;if(path.endsWith(\"*\")&&path!==\"*\"&&!path.endsWith(\"/*\")){warning(false,\"Route path \\\"\"+path+\"\\\" will be treated as if it were \"+(\"\\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\" because the `*` character must \")+\"always follow a `/` in the pattern. To get rid of this warning, \"+(\"please change the route path to \\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\".\"));path=path.replace(/\\*$/,\"/*\");}// ensure `/` is added at the beginning if the path is absolute\nvar prefix=path.startsWith(\"/\")?\"/\":\"\";var stringify=function stringify(p){return p==null?\"\":typeof p===\"string\"?p:String(p);};var segments=path.split(/\\/+/).map(function(segment,index,array){var isLastSegment=index===array.length-1;// only apply the splat if it's the last segment\nif(isLastSegment&&segment===\"*\"){var star=\"*\";// Apply the splat\nreturn stringify(params[star]);}var keyMatch=segment.match(/^:(\\w+)(\\??)$/);if(keyMatch){var _keyMatch=_slicedToArray(keyMatch,3),key=_keyMatch[1],optional=_keyMatch[2];var param=params[key];invariant(optional===\"?\"||param!=null,\"Missing \\\":\"+key+\"\\\" param\");return stringify(param);}// Remove any optional markers from optional static segments\nreturn segment.replace(/\\?$/g,\"\");})// Remove empty segments\n.filter(function(segment){return!!segment;});return prefix+segments.join(\"/\");}/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */function matchPath(pattern,pathname){if(typeof pattern===\"string\"){pattern={path:pattern,caseSensitive:false,end:true};}var _compilePath=compilePath(pattern.path,pattern.caseSensitive,pattern.end),_compilePath2=_slicedToArray(_compilePath,2),matcher=_compilePath2[0],paramNames=_compilePath2[1];var match=pathname.match(matcher);if(!match)return null;var matchedPathname=match[0];var pathnameBase=matchedPathname.replace(/(.)\\/+$/,\"$1\");var captureGroups=match.slice(1);var params=paramNames.reduce(function(memo,paramName,index){// We need to compute the pathnameBase here using the raw splat value\n// instead of using params[\"*\"] later because it will be decoded then\nif(paramName===\"*\"){var splatValue=captureGroups[index]||\"\";pathnameBase=matchedPathname.slice(0,matchedPathname.length-splatValue.length).replace(/(.)\\/+$/,\"$1\");}memo[paramName]=safelyDecodeURIComponent(captureGroups[index]||\"\",paramName);return memo;},{});return{params:params,pathname:matchedPathname,pathnameBase:pathnameBase,pattern:pattern};}function compilePath(path,caseSensitive,end){if(caseSensitive===void 0){caseSensitive=false;}if(end===void 0){end=true;}warning(path===\"*\"||!path.endsWith(\"*\")||path.endsWith(\"/*\"),\"Route path \\\"\"+path+\"\\\" will be treated as if it were \"+(\"\\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\" because the `*` character must \")+\"always follow a `/` in the pattern. To get rid of this warning, \"+(\"please change the route path to \\\"\"+path.replace(/\\*$/,\"/*\")+\"\\\".\"));var paramNames=[];var regexpSource=\"^\"+path.replace(/\\/*\\*?$/,\"\")// Ignore trailing / and /*, we'll handle it below\n.replace(/^\\/*/,\"/\")// Make sure it has a leading /\n.replace(/[\\\\.*+^$?{}|()[\\]]/g,\"\\\\$&\")// Escape special regex chars\n.replace(/\\/:(\\w+)/g,function(_,paramName){paramNames.push(paramName);return\"/([^\\\\/]+)\";});if(path.endsWith(\"*\")){paramNames.push(\"*\");regexpSource+=path===\"*\"||path===\"/*\"?\"(.*)$\"// Already matched the initial /, just match the rest\n:\"(?:\\\\/(.+)|\\\\/*)$\";// Don't include the / in params[\"*\"]\n}else if(end){// When matching to the end, ignore trailing slashes\nregexpSource+=\"\\\\/*$\";}else if(path!==\"\"&&path!==\"/\"){// If our path is non-empty and contains anything beyond an initial slash,\n// then we have _some_ form of path in our regex, so we should expect to\n// match only if we find the end of this path segment.  Look for an optional\n// non-captured trailing slash (to match a portion of the URL) or the end\n// of the path (if we've matched to the end).  We used to do this with a\n// word boundary but that gives false positives on routes like\n// /user-preferences since `-` counts as a word boundary.\nregexpSource+=\"(?:(?=\\\\/|$))\";}else;var matcher=new RegExp(regexpSource,caseSensitive?undefined:\"i\");return[matcher,paramNames];}function safelyDecodeURI(value){try{return decodeURI(value);}catch(error){warning(false,\"The URL path \\\"\"+value+\"\\\" could not be decoded because it is is a \"+\"malformed URL segment. This is probably due to a bad percent \"+(\"encoding (\"+error+\").\"));return value;}}function safelyDecodeURIComponent(value,paramName){try{return decodeURIComponent(value);}catch(error){warning(false,\"The value for the URL param \\\"\"+paramName+\"\\\" will not be decoded because\"+(\" the string \\\"\"+value+\"\\\" is a malformed URL segment. This is probably\")+(\" due to a bad percent encoding (\"+error+\").\"));return value;}}/**\n * @private\n */function stripBasename(pathname,basename){if(basename===\"/\")return pathname;if(!pathname.toLowerCase().startsWith(basename.toLowerCase())){return null;}// We want to leave trailing slash behavior in the user's control, so if they\n// specify a basename with a trailing slash, we should support it\nvar startIndex=basename.endsWith(\"/\")?basename.length-1:basename.length;var nextChar=pathname.charAt(startIndex);if(nextChar&&nextChar!==\"/\"){// pathname does not start with basename/\nreturn null;}return pathname.slice(startIndex)||\"/\";}/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */function resolvePath(to,fromPathname){if(fromPathname===void 0){fromPathname=\"/\";}var _ref4=typeof to===\"string\"?parsePath(to):to,toPathname=_ref4.pathname,_ref4$search=_ref4.search,search=_ref4$search===void 0?\"\":_ref4$search,_ref4$hash=_ref4.hash,hash=_ref4$hash===void 0?\"\":_ref4$hash;var pathname=toPathname?toPathname.startsWith(\"/\")?toPathname:resolvePathname(toPathname,fromPathname):fromPathname;return{pathname:pathname,search:normalizeSearch(search),hash:normalizeHash(hash)};}function resolvePathname(relativePath,fromPathname){var segments=fromPathname.replace(/\\/+$/,\"\").split(\"/\");var relativeSegments=relativePath.split(\"/\");relativeSegments.forEach(function(segment){if(segment===\"..\"){// Keep the root \"\" segment so the pathname starts at /\nif(segments.length>1)segments.pop();}else if(segment!==\".\"){segments.push(segment);}});return segments.length>1?segments.join(\"/\"):\"/\";}function getInvalidPathError(char,field,dest,path){return\"Cannot include a '\"+char+\"' character in a manually specified \"+(\"`to.\"+field+\"` field [\"+JSON.stringify(path)+\"].  Please separate it out to the \")+(\"`to.\"+dest+\"` field. Alternatively you may provide the full path as \")+\"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";}/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */function getPathContributingMatches(matches){return matches.filter(function(match,index){return index===0||match.route.path&&match.route.path.length>0;});}/**\n * @private\n */function resolveTo(toArg,routePathnames,locationPathname,isPathRelative){if(isPathRelative===void 0){isPathRelative=false;}var to;if(typeof toArg===\"string\"){to=parsePath(toArg);}else{to=_extends({},toArg);invariant(!to.pathname||!to.pathname.includes(\"?\"),getInvalidPathError(\"?\",\"pathname\",\"search\",to));invariant(!to.pathname||!to.pathname.includes(\"#\"),getInvalidPathError(\"#\",\"pathname\",\"hash\",to));invariant(!to.search||!to.search.includes(\"#\"),getInvalidPathError(\"#\",\"search\",\"hash\",to));}var isEmptyPath=toArg===\"\"||to.pathname===\"\";var toPathname=isEmptyPath?\"/\":to.pathname;var from;// Routing is relative to the current pathname if explicitly requested.\n//\n// If a pathname is explicitly provided in `to`, it should be relative to the\n// route context. This is explained in `Note on `<Link to>` values` in our\n// migration guide from v5 as a means of disambiguation between `to` values\n// that begin with `/` and those that do not. However, this is problematic for\n// `to` values that do not provide a pathname. `to` can simply be a search or\n// hash string, in which case we should assume that the navigation is relative\n// to the current location's pathname and *not* the route pathname.\nif(isPathRelative||toPathname==null){from=locationPathname;}else{var routePathnameIndex=routePathnames.length-1;if(toPathname.startsWith(\"..\")){var toSegments=toPathname.split(\"/\");// Each leading .. segment means \"go up one route\" instead of \"go up one\n// URL segment\".  This is a key difference from how <a href> works and a\n// major reason we call this a \"to\" value instead of a \"href\".\nwhile(toSegments[0]===\"..\"){toSegments.shift();routePathnameIndex-=1;}to.pathname=toSegments.join(\"/\");}// If there are more \"..\" segments than parent routes, resolve relative to\n// the root / URL.\nfrom=routePathnameIndex>=0?routePathnames[routePathnameIndex]:\"/\";}var path=resolvePath(to,from);// Ensure the pathname has a trailing slash if the original \"to\" had one\nvar hasExplicitTrailingSlash=toPathname&&toPathname!==\"/\"&&toPathname.endsWith(\"/\");// Or if this was a link to the current path which has a trailing slash\nvar hasCurrentTrailingSlash=(isEmptyPath||toPathname===\".\")&&locationPathname.endsWith(\"/\");if(!path.pathname.endsWith(\"/\")&&(hasExplicitTrailingSlash||hasCurrentTrailingSlash)){path.pathname+=\"/\";}return path;}/**\n * @private\n */function getToPathname(to){// Empty strings should be treated the same as / paths\nreturn to===\"\"||to.pathname===\"\"?\"/\":typeof to===\"string\"?parsePath(to).pathname:to.pathname;}/**\n * @private\n */var joinPaths=function joinPaths(paths){return paths.join(\"/\").replace(/\\/\\/+/g,\"/\");};/**\n * @private\n */var normalizePathname=function normalizePathname(pathname){return pathname.replace(/\\/+$/,\"\").replace(/^\\/*/,\"/\");};/**\n * @private\n */var normalizeSearch=function normalizeSearch(search){return!search||search===\"?\"?\"\":search.startsWith(\"?\")?search:\"?\"+search;};/**\n * @private\n */var normalizeHash=function normalizeHash(hash){return!hash||hash===\"#\"?\"\":hash.startsWith(\"#\")?hash:\"#\"+hash;};/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */var json=function json(data,init){if(init===void 0){init={};}var responseInit=typeof init===\"number\"?{status:init}:init;var headers=new Headers(responseInit.headers);if(!headers.has(\"Content-Type\")){headers.set(\"Content-Type\",\"application/json; charset=utf-8\");}return new Response(JSON.stringify(data),_extends({},responseInit,{headers:headers}));};var AbortedDeferredError=/*#__PURE__*/function(_Error){_inherits(AbortedDeferredError,_Error);var _super=_createSuper(AbortedDeferredError);function AbortedDeferredError(){_classCallCheck(this,AbortedDeferredError);return _super.apply(this,arguments);}return _createClass(AbortedDeferredError);}(/*#__PURE__*/_wrapNativeSuper(Error));var DeferredData=/*#__PURE__*/function(){function DeferredData(data,responseInit){var _this=this;_classCallCheck(this,DeferredData);this.pendingKeysSet=new Set();this.subscribers=new Set();this.deferredKeys=[];invariant(data&&typeof data===\"object\"&&!Array.isArray(data),\"defer() only accepts plain objects\");// Set up an AbortController + Promise we can race against to exit early\n// cancellation\nvar reject;this.abortPromise=new Promise(function(_,r){return reject=r;});this.controller=new AbortController();var onAbort=function onAbort(){return reject(new AbortedDeferredError(\"Deferred data aborted\"));};this.unlistenAbortSignal=function(){return _this.controller.signal.removeEventListener(\"abort\",onAbort);};this.controller.signal.addEventListener(\"abort\",onAbort);this.data=Object.entries(data).reduce(function(acc,_ref){var _ref5=_slicedToArray(_ref,2),key=_ref5[0],value=_ref5[1];return Object.assign(acc,_defineProperty({},key,_this.trackPromise(key,value)));},{});if(this.done){// All incoming values were resolved\nthis.unlistenAbortSignal();}this.init=responseInit;}_createClass(DeferredData,[{key:\"trackPromise\",value:function trackPromise(key,value){var _this2=this;if(!(value instanceof Promise)){return value;}this.deferredKeys.push(key);this.pendingKeysSet.add(key);// We store a little wrapper promise that will be extended with\n// _data/_error props upon resolve/reject\nvar promise=Promise.race([value,this.abortPromise]).then(function(data){return _this2.onSettle(promise,key,undefined,data);},function(error){return _this2.onSettle(promise,key,error);});// Register rejection listeners to avoid uncaught promise rejections on\n// errors or aborted deferred values\npromise.catch(function(){});Object.defineProperty(promise,\"_tracked\",{get:function get(){return true;}});return promise;}},{key:\"onSettle\",value:function onSettle(promise,key,error,data){if(this.controller.signal.aborted&&error instanceof AbortedDeferredError){this.unlistenAbortSignal();Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});return Promise.reject(error);}this.pendingKeysSet.delete(key);if(this.done){// Nothing left to abort!\nthis.unlistenAbortSignal();}// If the promise was resolved/rejected with undefined, we'll throw an error as you\n// should always resolve with a value or null\nif(error===undefined&&data===undefined){var undefinedError=new Error(\"Deferred data for key \\\"\"+key+\"\\\" resolved/rejected with `undefined`, \"+\"you must resolve/reject with a value or `null`.\");Object.defineProperty(promise,\"_error\",{get:function get(){return undefinedError;}});this.emit(false,key);return Promise.reject(undefinedError);}if(data===undefined){Object.defineProperty(promise,\"_error\",{get:function get(){return error;}});this.emit(false,key);return Promise.reject(error);}Object.defineProperty(promise,\"_data\",{get:function get(){return data;}});this.emit(false,key);return data;}},{key:\"emit\",value:function emit(aborted,settledKey){this.subscribers.forEach(function(subscriber){return subscriber(aborted,settledKey);});}},{key:\"subscribe\",value:function subscribe(fn){var _this3=this;this.subscribers.add(fn);return function(){return _this3.subscribers.delete(fn);};}},{key:\"cancel\",value:function cancel(){var _this4=this;this.controller.abort();this.pendingKeysSet.forEach(function(v,k){return _this4.pendingKeysSet.delete(k);});this.emit(true);}},{key:\"resolveData\",value:function(){var _resolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(signal){var _this5=this;var aborted,onAbort;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:aborted=false;if(this.done){_context.next=7;break;}onAbort=function onAbort(){return _this5.cancel();};signal.addEventListener(\"abort\",onAbort);_context.next=6;return new Promise(function(resolve){_this5.subscribe(function(aborted){signal.removeEventListener(\"abort\",onAbort);if(aborted||_this5.done){resolve(aborted);}});});case 6:aborted=_context.sent;case 7:return _context.abrupt(\"return\",aborted);case 8:case\"end\":return _context.stop();}},_callee,this);}));function resolveData(_x){return _resolveData.apply(this,arguments);}return resolveData;}()},{key:\"done\",get:function get(){return this.pendingKeysSet.size===0;}},{key:\"unwrappedData\",get:function get(){invariant(this.data!==null&&this.done,\"Can only unwrap data on initialized and settled deferreds\");return Object.entries(this.data).reduce(function(acc,_ref2){var _ref6=_slicedToArray(_ref2,2),key=_ref6[0],value=_ref6[1];return Object.assign(acc,_defineProperty({},key,unwrapTrackedPromise(value)));},{});}},{key:\"pendingKeys\",get:function get(){return Array.from(this.pendingKeysSet);}}]);return DeferredData;}();function isTrackedPromise(value){return value instanceof Promise&&value._tracked===true;}function unwrapTrackedPromise(value){if(!isTrackedPromise(value)){return value;}if(value._error){throw value._error;}return value._data;}var defer=function defer(data,init){if(init===void 0){init={};}var responseInit=typeof init===\"number\"?{status:init}:init;return new DeferredData(data,responseInit);};/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */var redirect=function redirect(url,init){if(init===void 0){init=302;}var responseInit=init;if(typeof responseInit===\"number\"){responseInit={status:responseInit};}else if(typeof responseInit.status===\"undefined\"){responseInit.status=302;}var headers=new Headers(responseInit.headers);headers.set(\"Location\",url);return new Response(null,_extends({},responseInit,{headers:headers}));};/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */var redirectDocument=function redirectDocument(url,init){var response=redirect(url,init);response.headers.set(\"X-Remix-Reload-Document\",\"true\");return response;};/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */var ErrorResponseImpl=/*#__PURE__*/_createClass(function ErrorResponseImpl(status,statusText,data,internal){_classCallCheck(this,ErrorResponseImpl);if(internal===void 0){internal=false;}this.status=status;this.statusText=statusText||\"\";this.internal=internal;if(data instanceof Error){this.data=data.toString();this.error=data;}else{this.data=data;}});/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */function isRouteErrorResponse(error){return error!=null&&typeof error.status===\"number\"&&typeof error.statusText===\"string\"&&typeof error.internal===\"boolean\"&&\"data\"in error;}var validMutationMethodsArr=[\"post\",\"put\",\"patch\",\"delete\"];var validMutationMethods=new Set(validMutationMethodsArr);var validRequestMethodsArr=[\"get\"].concat(validMutationMethodsArr);var validRequestMethods=new Set(validRequestMethodsArr);var redirectStatusCodes=new Set([301,302,303,307,308]);var redirectPreserveMethodStatusCodes=new Set([307,308]);var IDLE_NAVIGATION={state:\"idle\",location:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,json:undefined,text:undefined};var IDLE_FETCHER={state:\"idle\",data:undefined,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,json:undefined,text:undefined};var IDLE_BLOCKER={state:\"unblocked\",proceed:undefined,reset:undefined,location:undefined};var ABSOLUTE_URL_REGEX=/^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;var defaultMapRouteProperties=function defaultMapRouteProperties(route){return{hasErrorBoundary:Boolean(route.hasErrorBoundary)};};var TRANSITIONS_STORAGE_KEY=\"remix-router-transitions\";//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */function createRouter(init){var routerWindow=init.window?init.window:typeof window!==\"undefined\"?window:undefined;var isBrowser=typeof routerWindow!==\"undefined\"&&typeof routerWindow.document!==\"undefined\"&&typeof routerWindow.document.createElement!==\"undefined\";var isServer=!isBrowser;invariant(init.routes.length>0,\"You must provide a non-empty routes array to createRouter\");var mapRouteProperties;if(init.mapRouteProperties){mapRouteProperties=init.mapRouteProperties;}else if(init.detectErrorBoundary){// If they are still using the deprecated version, wrap it with the new API\nvar detectErrorBoundary=init.detectErrorBoundary;mapRouteProperties=function mapRouteProperties(route){return{hasErrorBoundary:detectErrorBoundary(route)};};}else{mapRouteProperties=defaultMapRouteProperties;}// Routes keyed by ID\nvar manifest={};// Routes in tree format for matching\nvar dataRoutes=convertRoutesToDataRoutes(init.routes,mapRouteProperties,undefined,manifest);var inFlightDataRoutes;var basename=init.basename||\"/\";// Config driven behavior flags\nvar future=_extends({v7_normalizeFormMethod:false,v7_prependBasename:false},init.future);// Cleanup function for history\nvar unlistenHistory=null;// Externally-provided functions to call on all state changes\nvar subscribers=new Set();// Externally-provided object to hold scroll restoration locations during routing\nvar savedScrollPositions=null;// Externally-provided function to get scroll restoration keys\nvar getScrollRestorationKey=null;// Externally-provided function to get current scroll position\nvar getScrollPosition=null;// One-time flag to control the initial hydration scroll restoration.  Because\n// we don't get the saved positions from <ScrollRestoration /> until _after_\n// the initial render, we need to manually trigger a separate updateState to\n// send along the restoreScrollPosition\n// Set to true if we have `hydrationData` since we assume we were SSR'd and that\n// SSR did the initial scroll restoration.\nvar initialScrollRestored=init.hydrationData!=null;var initialMatches=matchRoutes(dataRoutes,init.history.location,basename);var initialErrors=null;if(initialMatches==null){// If we do not match a user-provided-route, fall back to the root\n// to allow the error boundary to take over\nvar error=getInternalRouterError(404,{pathname:init.history.location.pathname});var _getShortCircuitMatch=getShortCircuitMatches(dataRoutes),matches=_getShortCircuitMatch.matches,route=_getShortCircuitMatch.route;initialMatches=matches;initialErrors=_defineProperty({},route.id,error);}var initialized=// All initialMatches need to be loaded before we're ready.  If we have lazy\n// functions around still then we'll need to run them in initialize()\n!initialMatches.some(function(m){return m.route.lazy;})&&(// And we have to either have no loaders or have been provided hydrationData\n!initialMatches.some(function(m){return m.route.loader;})||init.hydrationData!=null);var router;var state={historyAction:init.history.action,location:init.history.location,matches:initialMatches,initialized:initialized,navigation:IDLE_NAVIGATION,// Don't restore on initial updateState() if we were SSR'd\nrestoreScrollPosition:init.hydrationData!=null?false:null,preventScrollReset:false,revalidation:\"idle\",loaderData:init.hydrationData&&init.hydrationData.loaderData||{},actionData:init.hydrationData&&init.hydrationData.actionData||null,errors:init.hydrationData&&init.hydrationData.errors||initialErrors,fetchers:new Map(),blockers:new Map()};// -- Stateful internal variables to manage navigations --\n// Current navigation in progress (to be committed in completeNavigation)\nvar pendingAction=Action.Pop;// Should the current navigation prevent the scroll reset if scroll cannot\n// be restored?\nvar pendingPreventScrollReset=false;// AbortController for the active navigation\nvar pendingNavigationController;// Should the current navigation enable document.startViewTransition?\nvar pendingViewTransitionEnabled=false;// Store applied view transitions so we can apply them on POP\nvar appliedViewTransitions=new Map();// Cleanup function for persisting applied transitions to sessionStorage\nvar removePageHideEventListener=null;// We use this to avoid touching history in completeNavigation if a\n// revalidation is entirely uninterrupted\nvar isUninterruptedRevalidation=false;// Use this internal flag to force revalidation of all loaders:\n//  - submissions (completed or interrupted)\n//  - useRevalidator()\n//  - X-Remix-Revalidate (from redirect)\nvar isRevalidationRequired=false;// Use this internal array to capture routes that require revalidation due\n// to a cancelled deferred on action submission\nvar cancelledDeferredRoutes=[];// Use this internal array to capture fetcher loads that were cancelled by an\n// action navigation and require revalidation\nvar cancelledFetcherLoads=[];// AbortControllers for any in-flight fetchers\nvar fetchControllers=new Map();// Track loads based on the order in which they started\nvar incrementingLoadId=0;// Track the outstanding pending navigation data load to be compared against\n// the globally incrementing load when a fetcher load lands after a completed\n// navigation\nvar pendingNavigationLoadId=-1;// Fetchers that triggered data reloads as a result of their actions\nvar fetchReloadIds=new Map();// Fetchers that triggered redirect navigations\nvar fetchRedirectIds=new Set();// Most recent href/match for fetcher.load calls for fetchers\nvar fetchLoadMatches=new Map();// Store DeferredData instances for active route matches.  When a\n// route loader returns defer() we stick one in here.  Then, when a nested\n// promise resolves we update loaderData.  If a new navigation starts we\n// cancel active deferreds for eliminated routes.\nvar activeDeferreds=new Map();// Store blocker functions in a separate Map outside of router state since\n// we don't need to update UI state if they change\nvar blockerFunctions=new Map();// Flag to ignore the next history update, so we can revert the URL change on\n// a POP navigation that was blocked by the user without touching router state\nvar ignoreNextHistoryUpdate=false;// Initialize the router, all side effects should be kicked off from here.\n// Implemented as a Fluent API for ease of:\n//   let router = createRouter(init).initialize();\nfunction initialize(){// If history informs us of a POP navigation, start the navigation but do not update\n// state.  We'll update our own state once the navigation completes\nunlistenHistory=init.history.listen(function(_ref){var historyAction=_ref.action,location=_ref.location,delta=_ref.delta;// Ignore this event if it was just us resetting the URL from a\n// blocked POP navigation\nif(ignoreNextHistoryUpdate){ignoreNextHistoryUpdate=false;return;}warning(blockerFunctions.size===0||delta!=null,\"You are trying to use a blocker on a POP navigation to a location \"+\"that was not created by @remix-run/router. This will fail silently in \"+\"production. This can happen if you are navigating outside the router \"+\"via `window.history.pushState`/`window.location.hash` instead of using \"+\"router navigation APIs.  This can also happen if you are using \"+\"createHashRouter and the user manually changes the URL.\");var blockerKey=shouldBlockNavigation({currentLocation:state.location,nextLocation:location,historyAction:historyAction});if(blockerKey&&delta!=null){// Restore the URL to match the current UI, but don't update router state\nignoreNextHistoryUpdate=true;init.history.go(delta*-1);// Put the blocker into a blocked state\nupdateBlocker(blockerKey,{state:\"blocked\",location:location,proceed:function proceed(){updateBlocker(blockerKey,{state:\"proceeding\",proceed:undefined,reset:undefined,location:location});// Re-do the same POP navigation we just blocked\ninit.history.go(delta);},reset:function reset(){var blockers=new Map(state.blockers);blockers.set(blockerKey,IDLE_BLOCKER);updateState({blockers:blockers});}});return;}return startNavigation(historyAction,location);});if(isBrowser){// FIXME: This feels gross.  How can we cleanup the lines between\n// scrollRestoration/appliedTransitions persistance?\nrestoreAppliedTransitions(routerWindow,appliedViewTransitions);var _saveAppliedTransitions=function _saveAppliedTransitions(){return persistAppliedTransitions(routerWindow,appliedViewTransitions);};routerWindow.addEventListener(\"pagehide\",_saveAppliedTransitions);removePageHideEventListener=function removePageHideEventListener(){return routerWindow.removeEventListener(\"pagehide\",_saveAppliedTransitions);};}// Kick off initial data load if needed.  Use Pop to avoid modifying history\n// Note we don't do any handling of lazy here.  For SPA's it'll get handled\n// in the normal navigation flow.  For SSR it's expected that lazy modules are\n// resolved prior to router creation since we can't go into a fallbackElement\n// UI for SSR'd apps\nif(!state.initialized){startNavigation(Action.Pop,state.location);}return router;}// Clean up a router and it's side effects\nfunction dispose(){if(unlistenHistory){unlistenHistory();}if(removePageHideEventListener){removePageHideEventListener();}subscribers.clear();pendingNavigationController&&pendingNavigationController.abort();state.fetchers.forEach(function(_,key){return deleteFetcher(key);});state.blockers.forEach(function(_,key){return deleteBlocker(key);});}// Subscribe to state updates for the router\nfunction subscribe(fn){subscribers.add(fn);return function(){return subscribers.delete(fn);};}// Update our state and notify the calling context of the change\nfunction updateState(newState,viewTransitionOpts){state=_extends({},state,newState);subscribers.forEach(function(subscriber){return subscriber(state,{unstable_viewTransitionOpts:viewTransitionOpts});});}// Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n// and setting state.[historyAction/location/matches] to the new route.\n// - Location is a required param\n// - Navigation will always be set to IDLE_NAVIGATION\n// - Can pass any other state in newState\nfunction completeNavigation(location,newState){var _location$state,_location$state2;// Deduce if we're in a loading/actionReload state:\n// - We have committed actionData in the store\n// - The current navigation was a mutation submission\n// - We're past the submitting state and into the loading state\n// - The location being loaded is not the result of a redirect\nvar isActionReload=state.actionData!=null&&state.navigation.formMethod!=null&&isMutationMethod(state.navigation.formMethod)&&state.navigation.state===\"loading\"&&((_location$state=location.state)==null?void 0:_location$state._isRedirect)!==true;var actionData;if(newState.actionData){if(Object.keys(newState.actionData).length>0){actionData=newState.actionData;}else{// Empty actionData -> clear prior actionData due to an action error\nactionData=null;}}else if(isActionReload){// Keep the current data if we're wrapping up the action reload\nactionData=state.actionData;}else{// Clear actionData on any other completed navigations\nactionData=null;}// Always preserve any existing loaderData from re-used routes\nvar loaderData=newState.loaderData?mergeLoaderData(state.loaderData,newState.loaderData,newState.matches||[],newState.errors):state.loaderData;// On a successful navigation we can assume we got through all blockers\n// so we can start fresh\nvar blockers=state.blockers;if(blockers.size>0){blockers=new Map(blockers);blockers.forEach(function(_,k){return blockers.set(k,IDLE_BLOCKER);});}// Always respect the user flag.  Otherwise don't reset on mutation\n// submission navigations unless they redirect\nvar preventScrollReset=pendingPreventScrollReset===true||state.navigation.formMethod!=null&&isMutationMethod(state.navigation.formMethod)&&((_location$state2=location.state)==null?void 0:_location$state2._isRedirect)!==true;if(inFlightDataRoutes){dataRoutes=inFlightDataRoutes;inFlightDataRoutes=undefined;}if(isUninterruptedRevalidation);else if(pendingAction===Action.Pop);else if(pendingAction===Action.Push){init.history.push(location,location.state);}else if(pendingAction===Action.Replace){init.history.replace(location,location.state);}var viewTransitionOpts;// On POP, enable transitions if they were enabled on the original navigation\nif(pendingAction===Action.Pop){// Forward takes precedence so they behave like the original navigation\nvar priorPaths=appliedViewTransitions.get(state.location.pathname);if(priorPaths&&priorPaths.has(location.pathname)){viewTransitionOpts={currentLocation:state.location,nextLocation:location};}else if(appliedViewTransitions.has(location.pathname)){// If we don't have a previous forward nav, assume we're popping back to\n// the new location and enable if that location previously enabled\nviewTransitionOpts={currentLocation:location,nextLocation:state.location};}}else if(pendingViewTransitionEnabled){// Store the applied transition on PUSH/REPLACE\nvar toPaths=appliedViewTransitions.get(state.location.pathname);if(toPaths){toPaths.add(location.pathname);}else{toPaths=new Set([location.pathname]);appliedViewTransitions.set(state.location.pathname,toPaths);}viewTransitionOpts={currentLocation:state.location,nextLocation:location};}updateState(_extends({},newState,{actionData:actionData,loaderData:loaderData,historyAction:pendingAction,location:location,initialized:true,navigation:IDLE_NAVIGATION,revalidation:\"idle\",restoreScrollPosition:getSavedScrollPosition(location,newState.matches||state.matches),preventScrollReset:preventScrollReset,blockers:blockers}),viewTransitionOpts);// Reset stateful navigation vars\npendingAction=Action.Pop;pendingPreventScrollReset=false;pendingViewTransitionEnabled=false;isUninterruptedRevalidation=false;isRevalidationRequired=false;cancelledDeferredRoutes=[];cancelledFetcherLoads=[];}// Trigger a navigation event, which can either be a numerical POP or a PUSH\n// replace with an optional submission\nfunction navigate(_x2,_x3){return _navigate.apply(this,arguments);}// Revalidate all current loaders.  If a navigation is in progress or if this\n// is interrupted by a navigation, allow this to \"succeed\" by calling all\n// loaders during the next loader round\nfunction _navigate(){_navigate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(to,opts){var normalizedPath,_normalizeNavigateOpt2,path,submission,error,currentLocation,nextLocation,userReplace,historyAction,preventScrollReset,blockerKey;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(typeof to===\"number\")){_context2.next=3;break;}init.history.go(to);return _context2.abrupt(\"return\");case 3:normalizedPath=normalizeTo(state.location,state.matches,basename,future.v7_prependBasename,to,opts==null?void 0:opts.fromRouteId,opts==null?void 0:opts.relative);_normalizeNavigateOpt2=normalizeNavigateOptions(future.v7_normalizeFormMethod,false,normalizedPath,opts),path=_normalizeNavigateOpt2.path,submission=_normalizeNavigateOpt2.submission,error=_normalizeNavigateOpt2.error;currentLocation=state.location;nextLocation=createLocation(state.location,path,opts&&opts.state);// When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n// URL from window.location, so we need to encode it here so the behavior\n// remains the same as POP and non-data-router usages.  new URL() does all\n// the same encoding we'd get from a history.pushState/window.location read\n// without having to touch history\nnextLocation=_extends({},nextLocation,init.history.encodeLocation(nextLocation));userReplace=opts&&opts.replace!=null?opts.replace:undefined;historyAction=Action.Push;if(userReplace===true){historyAction=Action.Replace;}else if(userReplace===false);else if(submission!=null&&isMutationMethod(submission.formMethod)&&submission.formAction===state.location.pathname+state.location.search){// By default on submissions to the current location we REPLACE so that\n// users don't have to double-click the back button to get to the prior\n// location.  If the user redirects to a different location from the\n// action/loader this will be ignored and the redirect will be a PUSH\nhistoryAction=Action.Replace;}preventScrollReset=opts&&\"preventScrollReset\"in opts?opts.preventScrollReset===true:undefined;blockerKey=shouldBlockNavigation({currentLocation:currentLocation,nextLocation:nextLocation,historyAction:historyAction});if(!blockerKey){_context2.next=16;break;}// Put the blocker into a blocked state\nupdateBlocker(blockerKey,{state:\"blocked\",location:nextLocation,proceed:function proceed(){updateBlocker(blockerKey,{state:\"proceeding\",proceed:undefined,reset:undefined,location:nextLocation});// Send the same navigation through\nnavigate(to,opts);},reset:function reset(){var blockers=new Map(state.blockers);blockers.set(blockerKey,IDLE_BLOCKER);updateState({blockers:blockers});}});return _context2.abrupt(\"return\");case 16:_context2.next=18;return startNavigation(historyAction,nextLocation,{submission:submission,// Send through the formData serialization error if we have one so we can\n// render at the right error boundary after we match routes\npendingError:error,preventScrollReset:preventScrollReset,replace:opts&&opts.replace,enableViewTransition:opts&&opts.unstable_viewTransition});case 18:return _context2.abrupt(\"return\",_context2.sent);case 19:case\"end\":return _context2.stop();}},_callee2);}));return _navigate.apply(this,arguments);}function revalidate(){interruptActiveLoads();updateState({revalidation:\"loading\"});// If we're currently submitting an action, we don't need to start a new\n// navigation, we'll just let the follow up loader execution call all loaders\nif(state.navigation.state===\"submitting\"){return;}// If we're currently in an idle state, start a new navigation for the current\n// action/location and mark it as uninterrupted, which will skip the history\n// update in completeNavigation\nif(state.navigation.state===\"idle\"){startNavigation(state.historyAction,state.location,{startUninterruptedRevalidation:true});return;}// Otherwise, if we're currently in a loading state, just start a new\n// navigation to the navigation.location but do not trigger an uninterrupted\n// revalidation so that history correctly updates once the navigation completes\nstartNavigation(pendingAction||state.historyAction,state.navigation.location,{overrideNavigation:state.navigation});}// Start a navigation to the given action/location.  Can optionally provide a\n// overrideNavigation which will override the normalLoad in the case of a redirect\n// navigation\nfunction startNavigation(_x4,_x5,_x6){return _startNavigation.apply(this,arguments);}// Call the action matched by the leaf route for this navigation and handle\n// redirects/errors\nfunction _startNavigation(){_startNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(historyAction,location,opts){var routesToUse,loadingNavigation,matches,_error,_getShortCircuitMatch2,notFoundMatches,_route,request,pendingActionData,pendingError,actionOutput,_yield$handleLoaders,shortCircuited,loaderData,errors;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:// Abort any in-progress navigations and start a new one. Unset any ongoing\n// uninterrupted revalidations unless told otherwise, since we want this\n// new navigation to update history normally\npendingNavigationController&&pendingNavigationController.abort();pendingNavigationController=null;pendingAction=historyAction;isUninterruptedRevalidation=(opts&&opts.startUninterruptedRevalidation)===true;// Save the current scroll position every time we start a new navigation,\n// and track whether we should reset scroll on completion\nsaveScrollPosition(state.location,state.matches);pendingPreventScrollReset=(opts&&opts.preventScrollReset)===true;pendingViewTransitionEnabled=(opts&&opts.enableViewTransition)===true;routesToUse=inFlightDataRoutes||dataRoutes;loadingNavigation=opts&&opts.overrideNavigation;matches=matchRoutes(routesToUse,location,basename);// Short circuit with a 404 on the root error boundary if we match nothing\nif(matches){_context3.next=16;break;}_error=getInternalRouterError(404,{pathname:location.pathname});_getShortCircuitMatch2=getShortCircuitMatches(routesToUse),notFoundMatches=_getShortCircuitMatch2.matches,_route=_getShortCircuitMatch2.route;// Cancel all pending deferred on 404s since we don't keep any routes\ncancelActiveDeferreds();completeNavigation(location,{matches:notFoundMatches,loaderData:{},errors:_defineProperty({},_route.id,_error)});return _context3.abrupt(\"return\");case 16:if(!(state.initialized&&!isRevalidationRequired&&isHashChangeOnly(state.location,location)&&!(opts&&opts.submission&&isMutationMethod(opts.submission.formMethod)))){_context3.next=19;break;}completeNavigation(location,{matches:matches});return _context3.abrupt(\"return\");case 19:// Create a controller/Request for this navigation\npendingNavigationController=new AbortController();request=createClientSideRequest(init.history,location,pendingNavigationController.signal,opts&&opts.submission);if(!(opts&&opts.pendingError)){_context3.next=25;break;}// If we have a pendingError, it means the user attempted a GET submission\n// with binary FormData so assign here and skip to handleLoaders.  That\n// way we handle calling loaders above the boundary etc.  It's not really\n// different from an actionError in that sense.\npendingError=_defineProperty({},findNearestBoundary(matches).route.id,opts.pendingError);_context3.next=35;break;case 25:if(!(opts&&opts.submission&&isMutationMethod(opts.submission.formMethod))){_context3.next=35;break;}_context3.next=28;return handleAction(request,location,opts.submission,matches,{replace:opts.replace});case 28:actionOutput=_context3.sent;if(!actionOutput.shortCircuited){_context3.next=31;break;}return _context3.abrupt(\"return\");case 31:pendingActionData=actionOutput.pendingActionData;pendingError=actionOutput.pendingActionError;loadingNavigation=getLoadingNavigation(location,opts.submission);// Create a GET request for the loaders\nrequest=new Request(request.url,{signal:request.signal});case 35:_context3.next=37;return handleLoaders(request,location,matches,loadingNavigation,opts&&opts.submission,opts&&opts.fetcherSubmission,opts&&opts.replace,pendingActionData,pendingError);case 37:_yield$handleLoaders=_context3.sent;shortCircuited=_yield$handleLoaders.shortCircuited;loaderData=_yield$handleLoaders.loaderData;errors=_yield$handleLoaders.errors;if(!shortCircuited){_context3.next=43;break;}return _context3.abrupt(\"return\");case 43:// Clean up now that the action/loaders have completed.  Don't clean up if\n// we short circuited because pendingNavigationController will have already\n// been assigned to a new controller for the next navigation\npendingNavigationController=null;completeNavigation(location,_extends({matches:matches},pendingActionData?{actionData:pendingActionData}:{},{loaderData:loaderData,errors:errors}));case 45:case\"end\":return _context3.stop();}},_callee3);}));return _startNavigation.apply(this,arguments);}function handleAction(_x7,_x8,_x9,_x10,_x11){return _handleAction.apply(this,arguments);}// Call all applicable loaders for the given matches, handling redirects,\n// errors, etc.\nfunction _handleAction(){_handleAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request,location,submission,matches,opts){var navigation,result,actionMatch,replace,boundaryMatch;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:if(opts===void 0){opts={};}interruptActiveLoads();// Put us in a submitting state\nnavigation=getSubmittingNavigation(location,submission);updateState({navigation:navigation});// Call our action and get the result\nactionMatch=getTargetMatch(matches,location);if(!(!actionMatch.route.action&&!actionMatch.route.lazy)){_context4.next=9;break;}result={type:ResultType.error,error:getInternalRouterError(405,{method:request.method,pathname:location.pathname,routeId:actionMatch.route.id})};_context4.next=14;break;case 9:_context4.next=11;return callLoaderOrAction(\"action\",request,actionMatch,matches,manifest,mapRouteProperties,basename);case 11:result=_context4.sent;if(!request.signal.aborted){_context4.next=14;break;}return _context4.abrupt(\"return\",{shortCircuited:true});case 14:if(!isRedirectResult(result)){_context4.next=19;break;}if(opts&&opts.replace!=null){replace=opts.replace;}else{// If the user didn't explicity indicate replace behavior, replace if\n// we redirected to the exact same location we're currently at to avoid\n// double back-buttons\nreplace=result.location===state.location.pathname+state.location.search;}_context4.next=18;return startRedirectNavigation(state,result,{submission:submission,replace:replace});case 18:return _context4.abrupt(\"return\",{shortCircuited:true});case 19:if(!isErrorResult(result)){_context4.next=23;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\nboundaryMatch=findNearestBoundary(matches,actionMatch.route.id);// By default, all submissions are REPLACE navigations, but if the\n// action threw an error that'll be rendered in an errorElement, we fall\n// back to PUSH so that the user can use the back button to get back to\n// the pre-submission form location to try again\nif((opts&&opts.replace)!==true){pendingAction=Action.Push;}return _context4.abrupt(\"return\",{// Send back an empty object we can use to clear out any prior actionData\npendingActionData:{},pendingActionError:_defineProperty({},boundaryMatch.route.id,result.error)});case 23:if(!isDeferredResult(result)){_context4.next=25;break;}throw getInternalRouterError(400,{type:\"defer-action\"});case 25:return _context4.abrupt(\"return\",{pendingActionData:_defineProperty({},actionMatch.route.id,result.data)});case 26:case\"end\":return _context4.stop();}},_callee4);}));return _handleAction.apply(this,arguments);}function handleLoaders(_x12,_x13,_x14,_x15,_x16,_x17,_x18,_x19,_x20){return _handleLoaders.apply(this,arguments);}function _handleLoaders(){_handleLoaders=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request,location,matches,overrideNavigation,submission,fetcherSubmission,replace,pendingActionData,pendingError){var loadingNavigation,activeSubmission,routesToUse,_getMatchesToLoad,_getMatchesToLoad2,matchesToLoad,revalidatingFetchers,_updatedFetchers,actionData,abortPendingFetchRevalidations,_yield$callLoadersAnd,results,loaderResults,fetcherResults,redirect,fetcherKey,_processLoaderData,loaderData,errors,updatedFetchers,didAbortFetchLoads,shouldUpdateFetchers;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:// Figure out the right navigation we want to use for data loading\nloadingNavigation=overrideNavigation||getLoadingNavigation(location,submission);// If this was a redirect from an action we don't have a \"submission\" but\n// we have it on the loading navigation so use that if available\nactiveSubmission=submission||fetcherSubmission||getSubmissionFromNavigation(loadingNavigation);routesToUse=inFlightDataRoutes||dataRoutes;_getMatchesToLoad=getMatchesToLoad(init.history,state,matches,activeSubmission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,fetchRedirectIds,routesToUse,basename,pendingActionData,pendingError),_getMatchesToLoad2=_slicedToArray(_getMatchesToLoad,2),matchesToLoad=_getMatchesToLoad2[0],revalidatingFetchers=_getMatchesToLoad2[1];// Cancel pending deferreds for no-longer-matched routes or routes we're\n// about to reload.  Note that if this is an action reload we would have\n// already cancelled all pending deferreds so this would be a no-op\ncancelActiveDeferreds(function(routeId){return!(matches&&matches.some(function(m){return m.route.id===routeId;}))||matchesToLoad&&matchesToLoad.some(function(m){return m.route.id===routeId;});});pendingNavigationLoadId=++incrementingLoadId;// Short circuit if we have no loaders to run\nif(!(matchesToLoad.length===0&&revalidatingFetchers.length===0)){_context5.next=10;break;}_updatedFetchers=markFetchRedirectsDone();completeNavigation(location,_extends({matches:matches,loaderData:{},// Commit pending error if we're short circuiting\nerrors:pendingError||null},pendingActionData?{actionData:pendingActionData}:{},_updatedFetchers?{fetchers:new Map(state.fetchers)}:{}));return _context5.abrupt(\"return\",{shortCircuited:true});case 10:// If this is an uninterrupted revalidation, we remain in our current idle\n// state.  If not, we need to switch to our loading state and load data,\n// preserving any new action data or existing action data (in the case of\n// a revalidation interrupting an actionReload)\nif(!isUninterruptedRevalidation){revalidatingFetchers.forEach(function(rf){var fetcher=state.fetchers.get(rf.key);var revalidatingFetcher=getLoadingFetcher(undefined,fetcher?fetcher.data:undefined);state.fetchers.set(rf.key,revalidatingFetcher);});actionData=pendingActionData||state.actionData;updateState(_extends({navigation:loadingNavigation},actionData?Object.keys(actionData).length===0?{actionData:null}:{actionData:actionData}:{},revalidatingFetchers.length>0?{fetchers:new Map(state.fetchers)}:{}));}revalidatingFetchers.forEach(function(rf){if(fetchControllers.has(rf.key)){abortFetcher(rf.key);}if(rf.controller){// Fetchers use an independent AbortController so that aborting a fetcher\n// (via deleteFetcher) does not abort the triggering navigation that\n// triggered the revalidation\nfetchControllers.set(rf.key,rf.controller);}});// Proxy navigation abort through to revalidation fetchers\nabortPendingFetchRevalidations=function abortPendingFetchRevalidations(){return revalidatingFetchers.forEach(function(f){return abortFetcher(f.key);});};if(pendingNavigationController){pendingNavigationController.signal.addEventListener(\"abort\",abortPendingFetchRevalidations);}_context5.next=16;return callLoadersAndMaybeResolveData(state.matches,matches,matchesToLoad,revalidatingFetchers,request);case 16:_yield$callLoadersAnd=_context5.sent;results=_yield$callLoadersAnd.results;loaderResults=_yield$callLoadersAnd.loaderResults;fetcherResults=_yield$callLoadersAnd.fetcherResults;if(!request.signal.aborted){_context5.next=22;break;}return _context5.abrupt(\"return\",{shortCircuited:true});case 22:// Clean up _after_ loaders have completed.  Don't clean up if we short\n// circuited because fetchControllers would have been aborted and\n// reassigned to new controllers for the next navigation\nif(pendingNavigationController){pendingNavigationController.signal.removeEventListener(\"abort\",abortPendingFetchRevalidations);}revalidatingFetchers.forEach(function(rf){return fetchControllers.delete(rf.key);});// If any loaders returned a redirect Response, start a new REPLACE navigation\nredirect=findRedirect(results);if(!redirect){_context5.next=30;break;}if(redirect.idx>=matchesToLoad.length){// If this redirect came from a fetcher make sure we mark it in\n// fetchRedirectIds so it doesn't get revalidated on the next set of\n// loader executions\nfetcherKey=revalidatingFetchers[redirect.idx-matchesToLoad.length].key;fetchRedirectIds.add(fetcherKey);}_context5.next=29;return startRedirectNavigation(state,redirect.result,{replace:replace});case 29:return _context5.abrupt(\"return\",{shortCircuited:true});case 30:// Process and commit output from loaders\n_processLoaderData=processLoaderData(state,matches,matchesToLoad,loaderResults,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData.loaderData,errors=_processLoaderData.errors;// Wire up subscribers to update loaderData as promises settle\nactiveDeferreds.forEach(function(deferredData,routeId){deferredData.subscribe(function(aborted){// Note: No need to updateState here since the TrackedPromise on\n// loaderData is stable across resolve/reject\n// Remove this instance if we were aborted or if promises have settled\nif(aborted||deferredData.done){activeDeferreds.delete(routeId);}});});updatedFetchers=markFetchRedirectsDone();didAbortFetchLoads=abortStaleFetchLoads(pendingNavigationLoadId);shouldUpdateFetchers=updatedFetchers||didAbortFetchLoads||revalidatingFetchers.length>0;return _context5.abrupt(\"return\",_extends({loaderData:loaderData,errors:errors},shouldUpdateFetchers?{fetchers:new Map(state.fetchers)}:{}));case 36:case\"end\":return _context5.stop();}},_callee5);}));return _handleLoaders.apply(this,arguments);}function getFetcher(key){return state.fetchers.get(key)||IDLE_FETCHER;}// Trigger a fetcher load/submit for the given fetcher key\nfunction fetch(key,routeId,href,opts){if(isServer){throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \"+\"You are likely calling a useFetcher() method in the body of your component. \"+\"Try moving it to a useEffect or a callback.\");}if(fetchControllers.has(key))abortFetcher(key);var routesToUse=inFlightDataRoutes||dataRoutes;var normalizedPath=normalizeTo(state.location,state.matches,basename,future.v7_prependBasename,href,routeId,opts==null?void 0:opts.relative);var matches=matchRoutes(routesToUse,normalizedPath,basename);if(!matches){setFetcherError(key,routeId,getInternalRouterError(404,{pathname:normalizedPath}));return;}var _normalizeNavigateOpt=normalizeNavigateOptions(future.v7_normalizeFormMethod,true,normalizedPath,opts),path=_normalizeNavigateOpt.path,submission=_normalizeNavigateOpt.submission,error=_normalizeNavigateOpt.error;if(error){setFetcherError(key,routeId,error);return;}var match=getTargetMatch(matches,path);pendingPreventScrollReset=(opts&&opts.preventScrollReset)===true;if(submission&&isMutationMethod(submission.formMethod)){handleFetcherAction(key,routeId,path,match,matches,submission);return;}// Store off the match so we can call it's shouldRevalidate on subsequent\n// revalidations\nfetchLoadMatches.set(key,{routeId:routeId,path:path});handleFetcherLoader(key,routeId,path,match,matches,submission);}// Call the action for the matched fetcher.submit(), and then handle redirects,\n// errors, and revalidation\nfunction handleFetcherAction(_x21,_x22,_x23,_x24,_x25,_x26){return _handleFetcherAction.apply(this,arguments);}// Call the matched loader for fetcher.load(), handling redirects, errors, etc.\nfunction _handleFetcherAction(){_handleFetcherAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key,routeId,path,match,requestMatches,submission){var _error2,existingFetcher,fetcher,abortController,fetchRequest,originatingLoadId,actionResult,doneFetcher,loadingFetcher,nextLocation,revalidationRequest,routesToUse,matches,loadId,loadFetcher,_getMatchesToLoad3,_getMatchesToLoad4,matchesToLoad,revalidatingFetchers,abortPendingFetchRevalidations,_yield$callLoadersAnd2,results,loaderResults,fetcherResults,redirect,fetcherKey,_processLoaderData2,loaderData,errors,_doneFetcher,didAbortFetchLoads;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:interruptActiveLoads();fetchLoadMatches.delete(key);if(!(!match.route.action&&!match.route.lazy)){_context6.next=6;break;}_error2=getInternalRouterError(405,{method:submission.formMethod,pathname:path,routeId:routeId});setFetcherError(key,routeId,_error2);return _context6.abrupt(\"return\");case 6:// Put this fetcher into it's submitting state\nexistingFetcher=state.fetchers.get(key);fetcher=getSubmittingFetcher(submission,existingFetcher);state.fetchers.set(key,fetcher);updateState({fetchers:new Map(state.fetchers)});// Call the action for the fetcher\nabortController=new AbortController();fetchRequest=createClientSideRequest(init.history,path,abortController.signal,submission);fetchControllers.set(key,abortController);originatingLoadId=incrementingLoadId;_context6.next=16;return callLoaderOrAction(\"action\",fetchRequest,match,requestMatches,manifest,mapRouteProperties,basename);case 16:actionResult=_context6.sent;if(!fetchRequest.signal.aborted){_context6.next=20;break;}// We can delete this so long as we weren't aborted by ou our own fetcher\n// re-submit which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}return _context6.abrupt(\"return\");case 20:if(!isRedirectResult(actionResult)){_context6.next=34;break;}fetchControllers.delete(key);if(!(pendingNavigationLoadId>originatingLoadId)){_context6.next=29;break;}// A new navigation was kicked off after our action started, so that\n// should take precedence over this redirect navigation.  We already\n// set isRevalidationRequired so all loaders for the new route should\n// fire unless opted out via shouldRevalidate\ndoneFetcher=getDoneFetcher(undefined);state.fetchers.set(key,doneFetcher);updateState({fetchers:new Map(state.fetchers)});return _context6.abrupt(\"return\");case 29:fetchRedirectIds.add(key);loadingFetcher=getLoadingFetcher(submission);state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});return _context6.abrupt(\"return\",startRedirectNavigation(state,actionResult,{fetcherSubmission:submission}));case 34:if(!isErrorResult(actionResult)){_context6.next=37;break;}setFetcherError(key,routeId,actionResult.error);return _context6.abrupt(\"return\");case 37:if(!isDeferredResult(actionResult)){_context6.next=39;break;}throw getInternalRouterError(400,{type:\"defer-action\"});case 39:// Start the data load for current matches, or the next location if we're\n// in the middle of a navigation\nnextLocation=state.navigation.location||state.location;revalidationRequest=createClientSideRequest(init.history,nextLocation,abortController.signal);routesToUse=inFlightDataRoutes||dataRoutes;matches=state.navigation.state!==\"idle\"?matchRoutes(routesToUse,state.navigation.location,basename):state.matches;invariant(matches,\"Didn't find any matches after fetcher action\");loadId=++incrementingLoadId;fetchReloadIds.set(key,loadId);loadFetcher=getLoadingFetcher(submission,actionResult.data);state.fetchers.set(key,loadFetcher);_getMatchesToLoad3=getMatchesToLoad(init.history,state,matches,submission,nextLocation,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,fetchRedirectIds,routesToUse,basename,_defineProperty({},match.route.id,actionResult.data),undefined// No need to send through errors since we short circuit above\n),_getMatchesToLoad4=_slicedToArray(_getMatchesToLoad3,2),matchesToLoad=_getMatchesToLoad4[0],revalidatingFetchers=_getMatchesToLoad4[1];// Put all revalidating fetchers into the loading state, except for the\n// current fetcher which we want to keep in it's current loading state which\n// contains it's action submission info + action data\nrevalidatingFetchers.filter(function(rf){return rf.key!==key;}).forEach(function(rf){var staleKey=rf.key;var existingFetcher=state.fetchers.get(staleKey);var revalidatingFetcher=getLoadingFetcher(undefined,existingFetcher?existingFetcher.data:undefined);state.fetchers.set(staleKey,revalidatingFetcher);if(fetchControllers.has(staleKey)){abortFetcher(staleKey);}if(rf.controller){fetchControllers.set(staleKey,rf.controller);}});updateState({fetchers:new Map(state.fetchers)});abortPendingFetchRevalidations=function abortPendingFetchRevalidations(){return revalidatingFetchers.forEach(function(rf){return abortFetcher(rf.key);});};abortController.signal.addEventListener(\"abort\",abortPendingFetchRevalidations);_context6.next=55;return callLoadersAndMaybeResolveData(state.matches,matches,matchesToLoad,revalidatingFetchers,revalidationRequest);case 55:_yield$callLoadersAnd2=_context6.sent;results=_yield$callLoadersAnd2.results;loaderResults=_yield$callLoadersAnd2.loaderResults;fetcherResults=_yield$callLoadersAnd2.fetcherResults;if(!abortController.signal.aborted){_context6.next=61;break;}return _context6.abrupt(\"return\");case 61:abortController.signal.removeEventListener(\"abort\",abortPendingFetchRevalidations);fetchReloadIds.delete(key);fetchControllers.delete(key);revalidatingFetchers.forEach(function(r){return fetchControllers.delete(r.key);});redirect=findRedirect(results);if(!redirect){_context6.next=69;break;}if(redirect.idx>=matchesToLoad.length){// If this redirect came from a fetcher make sure we mark it in\n// fetchRedirectIds so it doesn't get revalidated on the next set of\n// loader executions\nfetcherKey=revalidatingFetchers[redirect.idx-matchesToLoad.length].key;fetchRedirectIds.add(fetcherKey);}return _context6.abrupt(\"return\",startRedirectNavigation(state,redirect.result));case 69:// Process and commit output from loaders\n_processLoaderData2=processLoaderData(state,state.matches,matchesToLoad,loaderResults,undefined,revalidatingFetchers,fetcherResults,activeDeferreds),loaderData=_processLoaderData2.loaderData,errors=_processLoaderData2.errors;// Since we let revalidations complete even if the submitting fetcher was\n// deleted, only put it back to idle if it hasn't been deleted\nif(state.fetchers.has(key)){_doneFetcher=getDoneFetcher(actionResult.data);state.fetchers.set(key,_doneFetcher);}didAbortFetchLoads=abortStaleFetchLoads(loadId);// If we are currently in a navigation loading state and this fetcher is\n// more recent than the navigation, we want the newer data so abort the\n// navigation and complete it with the fetcher data\nif(state.navigation.state===\"loading\"&&loadId>pendingNavigationLoadId){invariant(pendingAction,\"Expected pending action\");pendingNavigationController&&pendingNavigationController.abort();completeNavigation(state.navigation.location,{matches:matches,loaderData:loaderData,errors:errors,fetchers:new Map(state.fetchers)});}else{// otherwise just update with the fetcher data, preserving any existing\n// loaderData for loaders that did not need to reload.  We have to\n// manually merge here since we aren't going through completeNavigation\nupdateState(_extends({errors:errors,loaderData:mergeLoaderData(state.loaderData,loaderData,matches,errors)},didAbortFetchLoads||revalidatingFetchers.length>0?{fetchers:new Map(state.fetchers)}:{}));isRevalidationRequired=false;}case 73:case\"end\":return _context6.stop();}},_callee6);}));return _handleFetcherAction.apply(this,arguments);}function handleFetcherLoader(_x27,_x28,_x29,_x30,_x31,_x32){return _handleFetcherLoader.apply(this,arguments);}/**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */function _handleFetcherLoader(){_handleFetcherLoader=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key,routeId,path,match,matches,submission){var existingFetcher,loadingFetcher,abortController,fetchRequest,originatingLoadId,result,_doneFetcher2,boundaryMatch,doneFetcher;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:existingFetcher=state.fetchers.get(key);// Put this fetcher into it's loading state\nloadingFetcher=getLoadingFetcher(submission,existingFetcher?existingFetcher.data:undefined);state.fetchers.set(key,loadingFetcher);updateState({fetchers:new Map(state.fetchers)});// Call the loader for this fetcher route match\nabortController=new AbortController();fetchRequest=createClientSideRequest(init.history,path,abortController.signal);fetchControllers.set(key,abortController);originatingLoadId=incrementingLoadId;_context7.next=10;return callLoaderOrAction(\"loader\",fetchRequest,match,matches,manifest,mapRouteProperties,basename);case 10:result=_context7.sent;if(!isDeferredResult(result)){_context7.next=18;break;}_context7.next=14;return resolveDeferredData(result,fetchRequest.signal,true);case 14:_context7.t0=_context7.sent;if(_context7.t0){_context7.next=17;break;}_context7.t0=result;case 17:result=_context7.t0;case 18:// We can delete this so long as we weren't aborted by our our own fetcher\n// re-load which would have put _new_ controller is in fetchControllers\nif(fetchControllers.get(key)===abortController){fetchControllers.delete(key);}if(!fetchRequest.signal.aborted){_context7.next=21;break;}return _context7.abrupt(\"return\");case 21:if(!isRedirectResult(result)){_context7.next=33;break;}if(!(pendingNavigationLoadId>originatingLoadId)){_context7.next=29;break;}// A new navigation was kicked off after our loader started, so that\n// should take precedence over this redirect navigation\n_doneFetcher2=getDoneFetcher(undefined);state.fetchers.set(key,_doneFetcher2);updateState({fetchers:new Map(state.fetchers)});return _context7.abrupt(\"return\");case 29:fetchRedirectIds.add(key);_context7.next=32;return startRedirectNavigation(state,result);case 32:return _context7.abrupt(\"return\");case 33:if(!isErrorResult(result)){_context7.next=38;break;}boundaryMatch=findNearestBoundary(state.matches,routeId);state.fetchers.delete(key);// TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n// do we need to behave any differently with our non-redirect errors?\n// What if it was a non-redirect Response?\nupdateState({fetchers:new Map(state.fetchers),errors:_defineProperty({},boundaryMatch.route.id,result.error)});return _context7.abrupt(\"return\");case 38:invariant(!isDeferredResult(result),\"Unhandled fetcher deferred data\");// Put the fetcher back into an idle state\ndoneFetcher=getDoneFetcher(result.data);state.fetchers.set(key,doneFetcher);updateState({fetchers:new Map(state.fetchers)});case 42:case\"end\":return _context7.stop();}},_callee7);}));return _handleFetcherLoader.apply(this,arguments);}function startRedirectNavigation(_x33,_x34,_x35){return _startRedirectNavigation.apply(this,arguments);}function _startRedirectNavigation(){_startRedirectNavigation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(state,redirect,_temp){var _ref7,submission,fetcherSubmission,replace,redirectLocation,isDocumentReload,url,redirectHistoryAction,_state$navigation,formMethod,formAction,formEncType,activeSubmission,overrideNavigation;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:_ref7=_temp===void 0?{}:_temp,submission=_ref7.submission,fetcherSubmission=_ref7.fetcherSubmission,replace=_ref7.replace;if(redirect.revalidate){isRevalidationRequired=true;}redirectLocation=createLocation(state.location,redirect.location,{_isRedirect:true});invariant(redirectLocation,\"Expected a location on the redirect navigation\");if(!isBrowser){_context8.next=10;break;}isDocumentReload=false;if(redirect.reloadDocument){// Hard reload if the response contained X-Remix-Reload-Document\nisDocumentReload=true;}else if(ABSOLUTE_URL_REGEX.test(redirect.location)){url=init.history.createURL(redirect.location);isDocumentReload=// Hard reload if it's an absolute URL to a new origin\nurl.origin!==routerWindow.location.origin||// Hard reload if it's an absolute URL that does not match our basename\nstripBasename(url.pathname,basename)==null;}if(!isDocumentReload){_context8.next=10;break;}if(replace){routerWindow.location.replace(redirect.location);}else{routerWindow.location.assign(redirect.location);}return _context8.abrupt(\"return\");case 10:// There's no need to abort on redirects, since we don't detect the\n// redirect until the action/loaders have settled\npendingNavigationController=null;redirectHistoryAction=replace===true?Action.Replace:Action.Push;// Use the incoming submission if provided, fallback on the active one in\n// state.navigation\n_state$navigation=state.navigation,formMethod=_state$navigation.formMethod,formAction=_state$navigation.formAction,formEncType=_state$navigation.formEncType;if(!submission&&!fetcherSubmission&&formMethod&&formAction&&formEncType){submission=getSubmissionFromNavigation(state.navigation);}// If this was a 307/308 submission we want to preserve the HTTP method and\n// re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n// redirected location\nactiveSubmission=submission||fetcherSubmission;if(!(redirectPreserveMethodStatusCodes.has(redirect.status)&&activeSubmission&&isMutationMethod(activeSubmission.formMethod))){_context8.next=20;break;}_context8.next=18;return startNavigation(redirectHistoryAction,redirectLocation,{submission:_extends({},activeSubmission,{formAction:redirect.location}),// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 18:_context8.next=23;break;case 20:// If we have a navigation submission, we will preserve it through the\n// redirect navigation\noverrideNavigation=getLoadingNavigation(redirectLocation,submission);_context8.next=23;return startNavigation(redirectHistoryAction,redirectLocation,{overrideNavigation:overrideNavigation,// Send fetcher submissions through for shouldRevalidate\nfetcherSubmission:fetcherSubmission,// Preserve this flag across redirects\npreventScrollReset:pendingPreventScrollReset});case 23:case\"end\":return _context8.stop();}},_callee8);}));return _startRedirectNavigation.apply(this,arguments);}function callLoadersAndMaybeResolveData(_x36,_x37,_x38,_x39,_x40){return _callLoadersAndMaybeResolveData.apply(this,arguments);}function _callLoadersAndMaybeResolveData(){_callLoadersAndMaybeResolveData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(currentMatches,matches,matchesToLoad,fetchersToLoad,request){var results,loaderResults,fetcherResults;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1)switch(_context9.prev=_context9.next){case 0:_context9.next=2;return Promise.all([].concat(_toConsumableArray(matchesToLoad.map(function(match){return callLoaderOrAction(\"loader\",request,match,matches,manifest,mapRouteProperties,basename);})),_toConsumableArray(fetchersToLoad.map(function(f){if(f.matches&&f.match&&f.controller){return callLoaderOrAction(\"loader\",createClientSideRequest(init.history,f.path,f.controller.signal),f.match,f.matches,manifest,mapRouteProperties,basename);}else{var _error3={type:ResultType.error,error:getInternalRouterError(404,{pathname:f.path})};return _error3;}}))));case 2:results=_context9.sent;loaderResults=results.slice(0,matchesToLoad.length);fetcherResults=results.slice(matchesToLoad.length);_context9.next=7;return Promise.all([resolveDeferredResults(currentMatches,matchesToLoad,loaderResults,loaderResults.map(function(){return request.signal;}),false,state.loaderData),resolveDeferredResults(currentMatches,fetchersToLoad.map(function(f){return f.match;}),fetcherResults,fetchersToLoad.map(function(f){return f.controller?f.controller.signal:null;}),true)]);case 7:return _context9.abrupt(\"return\",{results:results,loaderResults:loaderResults,fetcherResults:fetcherResults});case 8:case\"end\":return _context9.stop();}},_callee9);}));return _callLoadersAndMaybeResolveData.apply(this,arguments);}function interruptActiveLoads(){var _cancelledDeferredRou;// Every interruption triggers a revalidation\nisRevalidationRequired=true;// Cancel pending route-level deferreds and mark cancelled routes for\n// revalidation\n(_cancelledDeferredRou=cancelledDeferredRoutes).push.apply(_cancelledDeferredRou,_toConsumableArray(cancelActiveDeferreds()));// Abort in-flight fetcher loads\nfetchLoadMatches.forEach(function(_,key){if(fetchControllers.has(key)){cancelledFetcherLoads.push(key);abortFetcher(key);}});}function setFetcherError(key,routeId,error){var boundaryMatch=findNearestBoundary(state.matches,routeId);deleteFetcher(key);updateState({errors:_defineProperty({},boundaryMatch.route.id,error),fetchers:new Map(state.fetchers)});}function deleteFetcher(key){var fetcher=state.fetchers.get(key);// Don't abort the controller if this is a deletion of a fetcher.submit()\n// in it's loading phase since - we don't want to abort the corresponding\n// revalidation and want them to complete and land\nif(fetchControllers.has(key)&&!(fetcher&&fetcher.state===\"loading\"&&fetchReloadIds.has(key))){abortFetcher(key);}fetchLoadMatches.delete(key);fetchReloadIds.delete(key);fetchRedirectIds.delete(key);state.fetchers.delete(key);}function abortFetcher(key){var controller=fetchControllers.get(key);invariant(controller,\"Expected fetch controller: \"+key);controller.abort();fetchControllers.delete(key);}function markFetchersDone(keys){var _iterator2=_createForOfIteratorHelper(keys),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var key=_step2.value;var fetcher=getFetcher(key);var doneFetcher=getDoneFetcher(fetcher.data);state.fetchers.set(key,doneFetcher);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}function markFetchRedirectsDone(){var doneKeys=[];var updatedFetchers=false;var _iterator3=_createForOfIteratorHelper(fetchRedirectIds),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var key=_step3.value;var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){fetchRedirectIds.delete(key);doneKeys.push(key);updatedFetchers=true;}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}markFetchersDone(doneKeys);return updatedFetchers;}function abortStaleFetchLoads(landedId){var yeetedKeys=[];var _iterator4=_createForOfIteratorHelper(fetchReloadIds),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _step4$value=_slicedToArray(_step4.value,2),key=_step4$value[0],id=_step4$value[1];if(id<landedId){var fetcher=state.fetchers.get(key);invariant(fetcher,\"Expected fetcher: \"+key);if(fetcher.state===\"loading\"){abortFetcher(key);fetchReloadIds.delete(key);yeetedKeys.push(key);}}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}markFetchersDone(yeetedKeys);return yeetedKeys.length>0;}function getBlocker(key,fn){var blocker=state.blockers.get(key)||IDLE_BLOCKER;if(blockerFunctions.get(key)!==fn){blockerFunctions.set(key,fn);}return blocker;}function deleteBlocker(key){state.blockers.delete(key);blockerFunctions.delete(key);}// Utility function to update blockers, ensuring valid state transitions\nfunction updateBlocker(key,newBlocker){var blocker=state.blockers.get(key)||IDLE_BLOCKER;// Poor mans state machine :)\n// https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\ninvariant(blocker.state===\"unblocked\"&&newBlocker.state===\"blocked\"||blocker.state===\"blocked\"&&newBlocker.state===\"blocked\"||blocker.state===\"blocked\"&&newBlocker.state===\"proceeding\"||blocker.state===\"blocked\"&&newBlocker.state===\"unblocked\"||blocker.state===\"proceeding\"&&newBlocker.state===\"unblocked\",\"Invalid blocker state transition: \"+blocker.state+\" -> \"+newBlocker.state);var blockers=new Map(state.blockers);blockers.set(key,newBlocker);updateState({blockers:blockers});}function shouldBlockNavigation(_ref2){var currentLocation=_ref2.currentLocation,nextLocation=_ref2.nextLocation,historyAction=_ref2.historyAction;if(blockerFunctions.size===0){return;}// We ony support a single active blocker at the moment since we don't have\n// any compelling use cases for multi-blocker yet\nif(blockerFunctions.size>1){warning(false,\"A router only supports one blocker at a time\");}var entries=Array.from(blockerFunctions.entries());var _entries=_slicedToArray(entries[entries.length-1],2),blockerKey=_entries[0],blockerFunction=_entries[1];var blocker=state.blockers.get(blockerKey);if(blocker&&blocker.state===\"proceeding\"){// If the blocker is currently proceeding, we don't need to re-check\n// it and can let this navigation continue\nreturn;}// At this point, we know we're unblocked/blocked so we need to check the\n// user-provided blocker function\nif(blockerFunction({currentLocation:currentLocation,nextLocation:nextLocation,historyAction:historyAction})){return blockerKey;}}function cancelActiveDeferreds(predicate){var cancelledRouteIds=[];activeDeferreds.forEach(function(dfd,routeId){if(!predicate||predicate(routeId)){// Cancel the deferred - but do not remove from activeDeferreds here -\n// we rely on the subscribers to do that so our tests can assert proper\n// cleanup via _internalActiveDeferreds\ndfd.cancel();cancelledRouteIds.push(routeId);activeDeferreds.delete(routeId);}});return cancelledRouteIds;}// Opt in to capturing and reporting scroll positions during navigations,\n// used by the <ScrollRestoration> component\nfunction enableScrollRestoration(positions,getPosition,getKey){savedScrollPositions=positions;getScrollPosition=getPosition;getScrollRestorationKey=getKey||null;// Perform initial hydration scroll restoration, since we miss the boat on\n// the initial updateState() because we've not yet rendered <ScrollRestoration/>\n// and therefore have no savedScrollPositions available\nif(!initialScrollRestored&&state.navigation===IDLE_NAVIGATION){initialScrollRestored=true;var y=getSavedScrollPosition(state.location,state.matches);if(y!=null){updateState({restoreScrollPosition:y});}}return function(){savedScrollPositions=null;getScrollPosition=null;getScrollRestorationKey=null;};}function getScrollKey(location,matches){if(getScrollRestorationKey){var key=getScrollRestorationKey(location,matches.map(function(m){return convertRouteMatchToUiMatch(m,state.loaderData);}));return key||location.key;}return location.key;}function saveScrollPosition(location,matches){if(savedScrollPositions&&getScrollPosition){var key=getScrollKey(location,matches);savedScrollPositions[key]=getScrollPosition();}}function getSavedScrollPosition(location,matches){if(savedScrollPositions){var key=getScrollKey(location,matches);var y=savedScrollPositions[key];if(typeof y===\"number\"){return y;}}return null;}function _internalSetRoutes(newRoutes){manifest={};inFlightDataRoutes=convertRoutesToDataRoutes(newRoutes,mapRouteProperties,undefined,manifest);}router={get basename(){return basename;},get state(){return state;},get routes(){return dataRoutes;},get window(){return routerWindow;},initialize:initialize,subscribe:subscribe,enableScrollRestoration:enableScrollRestoration,navigate:navigate,fetch:fetch,revalidate:revalidate,// Passthrough to history-aware createHref used by useHref so we get proper\n// hash-aware URLs in DOM paths\ncreateHref:function createHref(to){return init.history.createHref(to);},encodeLocation:function encodeLocation(to){return init.history.encodeLocation(to);},getFetcher:getFetcher,deleteFetcher:deleteFetcher,dispose:dispose,getBlocker:getBlocker,deleteBlocker:deleteBlocker,_internalFetchControllers:fetchControllers,_internalActiveDeferreds:activeDeferreds,// TODO: Remove setRoutes, it's temporary to avoid dealing with\n// updating the tree while validating the update algorithm.\n_internalSetRoutes:_internalSetRoutes};return router;}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nvar UNSAFE_DEFERRED_SYMBOL=Symbol(\"deferred\");function createStaticHandler(routes,opts){invariant(routes.length>0,\"You must provide a non-empty routes array to createStaticHandler\");var manifest={};var basename=(opts?opts.basename:null)||\"/\";var mapRouteProperties;if(opts!=null&&opts.mapRouteProperties){mapRouteProperties=opts.mapRouteProperties;}else if(opts!=null&&opts.detectErrorBoundary){// If they are still using the deprecated version, wrap it with the new API\nvar detectErrorBoundary=opts.detectErrorBoundary;mapRouteProperties=function mapRouteProperties(route){return{hasErrorBoundary:detectErrorBoundary(route)};};}else{mapRouteProperties=defaultMapRouteProperties;}var dataRoutes=convertRoutesToDataRoutes(routes,mapRouteProperties,undefined,manifest);/**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */function query(_x41,_x42){return _query.apply(this,arguments);}/**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */function _query(){_query=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request,_temp2){var _ref8,requestContext,url,method,location,matches,error,_getShortCircuitMatch3,methodNotAllowedMatches,route,_error4,_getShortCircuitMatch4,notFoundMatches,_route2,result;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1)switch(_context10.prev=_context10.next){case 0:_ref8=_temp2===void 0?{}:_temp2,requestContext=_ref8.requestContext;url=new URL(request.url);method=request.method;location=createLocation(\"\",createPath(url),null,\"default\");matches=matchRoutes(dataRoutes,location,basename);// SSR supports HEAD requests while SPA doesn't\nif(!(!isValidMethod(method)&&method!==\"HEAD\")){_context10.next=11;break;}error=getInternalRouterError(405,{method:method});_getShortCircuitMatch3=getShortCircuitMatches(dataRoutes),methodNotAllowedMatches=_getShortCircuitMatch3.matches,route=_getShortCircuitMatch3.route;return _context10.abrupt(\"return\",{basename:basename,location:location,matches:methodNotAllowedMatches,loaderData:{},actionData:null,errors:_defineProperty({},route.id,error),statusCode:error.status,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 11:if(matches){_context10.next=15;break;}_error4=getInternalRouterError(404,{pathname:location.pathname});_getShortCircuitMatch4=getShortCircuitMatches(dataRoutes),notFoundMatches=_getShortCircuitMatch4.matches,_route2=_getShortCircuitMatch4.route;return _context10.abrupt(\"return\",{basename:basename,location:location,matches:notFoundMatches,loaderData:{},actionData:null,errors:_defineProperty({},_route2.id,_error4),statusCode:_error4.status,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 15:_context10.next=17;return queryImpl(request,location,matches,requestContext);case 17:result=_context10.sent;if(!isResponse(result)){_context10.next=20;break;}return _context10.abrupt(\"return\",result);case 20:return _context10.abrupt(\"return\",_extends({location:location,basename:basename},result));case 21:case\"end\":return _context10.stop();}},_callee10);}));return _query.apply(this,arguments);}function queryRoute(_x43,_x44){return _queryRoute.apply(this,arguments);}function _queryRoute(){_queryRoute=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request,_temp3){var _ref9,routeId,requestContext,url,method,location,matches,match,result,error,_result$activeDeferre,data;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1)switch(_context11.prev=_context11.next){case 0:_ref9=_temp3===void 0?{}:_temp3,routeId=_ref9.routeId,requestContext=_ref9.requestContext;url=new URL(request.url);method=request.method;location=createLocation(\"\",createPath(url),null,\"default\");matches=matchRoutes(dataRoutes,location,basename);// SSR supports HEAD requests while SPA doesn't\nif(!(!isValidMethod(method)&&method!==\"HEAD\"&&method!==\"OPTIONS\")){_context11.next=9;break;}throw getInternalRouterError(405,{method:method});case 9:if(matches){_context11.next=11;break;}throw getInternalRouterError(404,{pathname:location.pathname});case 11:match=routeId?matches.find(function(m){return m.route.id===routeId;}):getTargetMatch(matches,location);if(!(routeId&&!match)){_context11.next=16;break;}throw getInternalRouterError(403,{pathname:location.pathname,routeId:routeId});case 16:if(match){_context11.next=18;break;}throw getInternalRouterError(404,{pathname:location.pathname});case 18:_context11.next=20;return queryImpl(request,location,matches,requestContext,match);case 20:result=_context11.sent;if(!isResponse(result)){_context11.next=23;break;}return _context11.abrupt(\"return\",result);case 23:error=result.errors?Object.values(result.errors)[0]:undefined;if(!(error!==undefined)){_context11.next=26;break;}throw error;case 26:if(!result.actionData){_context11.next=28;break;}return _context11.abrupt(\"return\",Object.values(result.actionData)[0]);case 28:if(!result.loaderData){_context11.next=32;break;}data=Object.values(result.loaderData)[0];if((_result$activeDeferre=result.activeDeferreds)!=null&&_result$activeDeferre[match.route.id]){data[UNSAFE_DEFERRED_SYMBOL]=result.activeDeferreds[match.route.id];}return _context11.abrupt(\"return\",data);case 32:return _context11.abrupt(\"return\",undefined);case 33:case\"end\":return _context11.stop();}},_callee11);}));return _queryRoute.apply(this,arguments);}function queryImpl(_x45,_x46,_x47,_x48,_x49){return _queryImpl.apply(this,arguments);}function _queryImpl(){_queryImpl=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request,location,matches,requestContext,routeMatch){var _result,result;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1)switch(_context12.prev=_context12.next){case 0:invariant(request.signal,\"query()/queryRoute() requests must contain an AbortController signal\");_context12.prev=1;if(!isMutationMethod(request.method.toLowerCase())){_context12.next=7;break;}_context12.next=5;return submit(request,matches,routeMatch||getTargetMatch(matches,location),requestContext,routeMatch!=null);case 5:_result=_context12.sent;return _context12.abrupt(\"return\",_result);case 7:_context12.next=9;return loadRouteData(request,matches,requestContext,routeMatch);case 9:result=_context12.sent;return _context12.abrupt(\"return\",isResponse(result)?result:_extends({},result,{actionData:null,actionHeaders:{}}));case 13:_context12.prev=13;_context12.t0=_context12[\"catch\"](1);if(!isQueryRouteResponse(_context12.t0)){_context12.next=19;break;}if(!(_context12.t0.type===ResultType.error)){_context12.next=18;break;}throw _context12.t0.response;case 18:return _context12.abrupt(\"return\",_context12.t0.response);case 19:if(!isRedirectResponse(_context12.t0)){_context12.next=21;break;}return _context12.abrupt(\"return\",_context12.t0);case 21:throw _context12.t0;case 22:case\"end\":return _context12.stop();}},_callee12,null,[[1,13]]);}));return _queryImpl.apply(this,arguments);}function submit(_x50,_x51,_x52,_x53,_x54){return _submit.apply(this,arguments);}function _submit(){_submit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request,matches,actionMatch,requestContext,isRouteRequest){var result,error,method,_error5,boundaryMatch,_context13,loaderRequest,context;return _regeneratorRuntime().wrap(function _callee13$(_context14){while(1)switch(_context14.prev=_context14.next){case 0:if(!(!actionMatch.route.action&&!actionMatch.route.lazy)){_context14.next=7;break;}error=getInternalRouterError(405,{method:request.method,pathname:new URL(request.url).pathname,routeId:actionMatch.route.id});if(!isRouteRequest){_context14.next=4;break;}throw error;case 4:result={type:ResultType.error,error:error};_context14.next=13;break;case 7:_context14.next=9;return callLoaderOrAction(\"action\",request,actionMatch,matches,manifest,mapRouteProperties,basename,{isStaticRequest:true,isRouteRequest:isRouteRequest,requestContext:requestContext});case 9:result=_context14.sent;if(!request.signal.aborted){_context14.next=13;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted: \"+request.method+\" \"+request.url);case 13:if(!isRedirectResult(result)){_context14.next=15;break;}throw new Response(null,{status:result.status,headers:{Location:result.location}});case 15:if(!isDeferredResult(result)){_context14.next=20;break;}_error5=getInternalRouterError(400,{type:\"defer-action\"});if(!isRouteRequest){_context14.next=19;break;}throw _error5;case 19:result={type:ResultType.error,error:_error5};case 20:if(!isRouteRequest){_context14.next=24;break;}if(!isErrorResult(result)){_context14.next=23;break;}throw result.error;case 23:return _context14.abrupt(\"return\",{matches:[actionMatch],loaderData:{},actionData:_defineProperty({},actionMatch.route.id,result.data),errors:null,// Note: statusCode + headers are unused here since queryRoute will\n// return the raw Response or value\nstatusCode:200,loaderHeaders:{},actionHeaders:{},activeDeferreds:null});case 24:if(!isErrorResult(result)){_context14.next=30;break;}// Store off the pending error - we use it to determine which loaders\n// to call and will commit it when we complete the navigation\nboundaryMatch=findNearestBoundary(matches,actionMatch.route.id);_context14.next=28;return loadRouteData(request,matches,requestContext,undefined,_defineProperty({},boundaryMatch.route.id,result.error));case 28:_context13=_context14.sent;return _context14.abrupt(\"return\",_extends({},_context13,{statusCode:isRouteErrorResponse(result.error)?result.error.status:500,actionData:null,actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 30:// Create a GET request for the loaders\nloaderRequest=new Request(request.url,{headers:request.headers,redirect:request.redirect,signal:request.signal});_context14.next=33;return loadRouteData(loaderRequest,matches,requestContext);case 33:context=_context14.sent;return _context14.abrupt(\"return\",_extends({},context,result.statusCode?{statusCode:result.statusCode}:{},{actionData:_defineProperty({},actionMatch.route.id,result.data),actionHeaders:_extends({},result.headers?_defineProperty({},actionMatch.route.id,result.headers):{})}));case 35:case\"end\":return _context14.stop();}},_callee13);}));return _submit.apply(this,arguments);}function loadRouteData(_x55,_x56,_x57,_x58,_x59){return _loadRouteData.apply(this,arguments);}function _loadRouteData(){_loadRouteData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request,matches,requestContext,routeMatch,pendingActionError){var isRouteRequest,requestMatches,matchesToLoad,results,method,activeDeferreds,context,executedLoaders;return _regeneratorRuntime().wrap(function _callee14$(_context15){while(1)switch(_context15.prev=_context15.next){case 0:isRouteRequest=routeMatch!=null;// Short circuit if we have no loaders to run (queryRoute())\nif(!(isRouteRequest&&!(routeMatch!=null&&routeMatch.route.loader)&&!(routeMatch!=null&&routeMatch.route.lazy))){_context15.next=3;break;}throw getInternalRouterError(400,{method:request.method,pathname:new URL(request.url).pathname,routeId:routeMatch==null?void 0:routeMatch.route.id});case 3:requestMatches=routeMatch?[routeMatch]:getLoaderMatchesUntilBoundary(matches,Object.keys(pendingActionError||{})[0]);matchesToLoad=requestMatches.filter(function(m){return m.route.loader||m.route.lazy;});// Short circuit if we have no loaders to run (query())\nif(!(matchesToLoad.length===0)){_context15.next=7;break;}return _context15.abrupt(\"return\",{matches:matches,// Add a null for all matched routes for proper revalidation on the client\nloaderData:matches.reduce(function(acc,m){return Object.assign(acc,_defineProperty({},m.route.id,null));},{}),errors:pendingActionError||null,statusCode:200,loaderHeaders:{},activeDeferreds:null});case 7:_context15.next=9;return Promise.all(_toConsumableArray(matchesToLoad.map(function(match){return callLoaderOrAction(\"loader\",request,match,matches,manifest,mapRouteProperties,basename,{isStaticRequest:true,isRouteRequest:isRouteRequest,requestContext:requestContext});})));case 9:results=_context15.sent;if(!request.signal.aborted){_context15.next=13;break;}method=isRouteRequest?\"queryRoute\":\"query\";throw new Error(method+\"() call aborted: \"+request.method+\" \"+request.url);case 13:// Process and commit output from loaders\nactiveDeferreds=new Map();context=processRouteLoaderData(matches,matchesToLoad,results,pendingActionError,activeDeferreds);// Add a null for any non-loader matches for proper revalidation on the client\nexecutedLoaders=new Set(matchesToLoad.map(function(match){return match.route.id;}));matches.forEach(function(match){if(!executedLoaders.has(match.route.id)){context.loaderData[match.route.id]=null;}});return _context15.abrupt(\"return\",_extends({},context,{matches:matches,activeDeferreds:activeDeferreds.size>0?Object.fromEntries(activeDeferreds.entries()):null}));case 18:case\"end\":return _context15.stop();}},_callee14);}));return _loadRouteData.apply(this,arguments);}return{dataRoutes:dataRoutes,query:query,queryRoute:queryRoute};}//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */function getStaticContextFromError(routes,context,error){var newContext=_extends({},context,{statusCode:500,errors:_defineProperty({},context._deepestRenderedBoundaryId||routes[0].id,error)});return newContext;}function isSubmissionNavigation(opts){return opts!=null&&(\"formData\"in opts&&opts.formData!=null||\"body\"in opts&&opts.body!==undefined);}function normalizeTo(location,matches,basename,prependBasename,to,fromRouteId,relative){var contextualMatches;var activeRouteMatch;if(fromRouteId!=null&&relative!==\"path\"){// Grab matches up to the calling route so our route-relative logic is\n// relative to the correct source route.  When using relative:path,\n// fromRouteId is ignored since that is always relative to the current\n// location path\ncontextualMatches=[];var _iterator5=_createForOfIteratorHelper(matches),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var match=_step5.value;contextualMatches.push(match);if(match.route.id===fromRouteId){activeRouteMatch=match;break;}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}else{contextualMatches=matches;activeRouteMatch=matches[matches.length-1];}// Resolve the relative path\nvar path=resolveTo(to?to:\".\",getPathContributingMatches(contextualMatches).map(function(m){return m.pathnameBase;}),stripBasename(location.pathname,basename)||location.pathname,relative===\"path\");// When `to` is not specified we inherit search/hash from the current\n// location, unlike when to=\".\" and we just inherit the path.\n// See https://github.com/remix-run/remix/issues/927\nif(to==null){path.search=location.search;path.hash=location.hash;}// Add an ?index param for matched index routes if we don't already have one\nif((to==null||to===\"\"||to===\".\")&&activeRouteMatch&&activeRouteMatch.route.index&&!hasNakedIndexQuery(path.search)){path.search=path.search?path.search.replace(/^\\?/,\"?index&\"):\"?index\";}// If we're operating within a basename, prepend it to the pathname.  If\n// this is a root navigation, then just use the raw basename which allows\n// the basename to have full control over the presence of a trailing slash\n// on root actions\nif(prependBasename&&basename!==\"/\"){path.pathname=path.pathname===\"/\"?basename:joinPaths([basename,path.pathname]);}return createPath(path);}// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod,isFetcher,path,opts){// Return location verbatim on non-submission navigations\nif(!opts||!isSubmissionNavigation(opts)){return{path:path};}if(opts.formMethod&&!isValidMethod(opts.formMethod)){return{path:path,error:getInternalRouterError(405,{method:opts.formMethod})};}var getInvalidBodyError=function getInvalidBodyError(){return{path:path,error:getInternalRouterError(400,{type:\"invalid-body\"})};};// Create a Submission on non-GET navigations\nvar rawFormMethod=opts.formMethod||\"get\";var formMethod=normalizeFormMethod?rawFormMethod.toUpperCase():rawFormMethod.toLowerCase();var formAction=stripHashFromPath(path);if(opts.body!==undefined){if(opts.formEncType===\"text/plain\"){// text only support POST/PUT/PATCH/DELETE submissions\nif(!isMutationMethod(formMethod)){return getInvalidBodyError();}var text=typeof opts.body===\"string\"?opts.body:opts.body instanceof FormData||opts.body instanceof URLSearchParams?// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\nArray.from(opts.body.entries()).reduce(function(acc,_ref3){var _ref12=_slicedToArray(_ref3,2),name=_ref12[0],value=_ref12[1];return\"\"+acc+name+\"=\"+value+\"\\n\";},\"\"):String(opts.body);return{path:path,submission:{formMethod:formMethod,formAction:formAction,formEncType:opts.formEncType,formData:undefined,json:undefined,text:text}};}else if(opts.formEncType===\"application/json\"){// json only supports POST/PUT/PATCH/DELETE submissions\nif(!isMutationMethod(formMethod)){return getInvalidBodyError();}try{var _json=typeof opts.body===\"string\"?JSON.parse(opts.body):opts.body;return{path:path,submission:{formMethod:formMethod,formAction:formAction,formEncType:opts.formEncType,formData:undefined,json:_json,text:undefined}};}catch(e){return getInvalidBodyError();}}}invariant(typeof FormData===\"function\",\"FormData is not available in this environment\");var searchParams;var formData;if(opts.formData){searchParams=convertFormDataToSearchParams(opts.formData);formData=opts.formData;}else if(opts.body instanceof FormData){searchParams=convertFormDataToSearchParams(opts.body);formData=opts.body;}else if(opts.body instanceof URLSearchParams){searchParams=opts.body;formData=convertSearchParamsToFormData(searchParams);}else if(opts.body==null){searchParams=new URLSearchParams();formData=new FormData();}else{try{searchParams=new URLSearchParams(opts.body);formData=convertSearchParamsToFormData(searchParams);}catch(e){return getInvalidBodyError();}}var submission={formMethod:formMethod,formAction:formAction,formEncType:opts&&opts.formEncType||\"application/x-www-form-urlencoded\",formData:formData,json:undefined,text:undefined};if(isMutationMethod(submission.formMethod)){return{path:path,submission:submission};}// Flatten submission onto URLSearchParams for GET submissions\nvar parsedPath=parsePath(path);// On GET navigation submissions we can drop the ?index param from the\n// resulting location since all loaders will run.  But fetcher GET submissions\n// only run a single loader so we need to preserve any incoming ?index params\nif(isFetcher&&parsedPath.search&&hasNakedIndexQuery(parsedPath.search)){searchParams.append(\"index\",\"\");}parsedPath.search=\"?\"+searchParams;return{path:createPath(parsedPath),submission:submission};}// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches,boundaryId){var boundaryMatches=matches;if(boundaryId){var index=matches.findIndex(function(m){return m.route.id===boundaryId;});if(index>=0){boundaryMatches=matches.slice(0,index);}}return boundaryMatches;}function getMatchesToLoad(history,state,matches,submission,location,isRevalidationRequired,cancelledDeferredRoutes,cancelledFetcherLoads,fetchLoadMatches,fetchRedirectIds,routesToUse,basename,pendingActionData,pendingError){var actionResult=pendingError?Object.values(pendingError)[0]:pendingActionData?Object.values(pendingActionData)[0]:undefined;var currentUrl=history.createURL(state.location);var nextUrl=history.createURL(location);// Pick navigation matches that are net-new or qualify for revalidation\nvar boundaryId=pendingError?Object.keys(pendingError)[0]:undefined;var boundaryMatches=getLoaderMatchesUntilBoundary(matches,boundaryId);var navigationMatches=boundaryMatches.filter(function(match,index){if(match.route.lazy){// We haven't loaded this route yet so we don't know if it's got a loader!\nreturn true;}if(match.route.loader==null){return false;}// Always call the loader on new route instances and pending defer cancellations\nif(isNewLoader(state.loaderData,state.matches[index],match)||cancelledDeferredRoutes.some(function(id){return id===match.route.id;})){return true;}// This is the default implementation for when we revalidate.  If the route\n// provides it's own implementation, then we give them full control but\n// provide this value so they can leverage it if needed after they check\n// their own specific use cases\nvar currentRouteMatch=state.matches[index];var nextRouteMatch=match;return shouldRevalidateLoader(match,_extends({currentUrl:currentUrl,currentParams:currentRouteMatch.params,nextUrl:nextUrl,nextParams:nextRouteMatch.params},submission,{actionResult:actionResult,defaultShouldRevalidate:// Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\nisRevalidationRequired||// Clicked the same link, resubmitted a GET form\ncurrentUrl.pathname+currentUrl.search===nextUrl.pathname+nextUrl.search||// Search params affect all loaders\ncurrentUrl.search!==nextUrl.search||isNewRouteInstance(currentRouteMatch,nextRouteMatch)}));});// Pick fetcher.loads that need to be revalidated\nvar revalidatingFetchers=[];fetchLoadMatches.forEach(function(f,key){// Don't revalidate if fetcher won't be present in the subsequent render\nif(!matches.some(function(m){return m.route.id===f.routeId;})){return;}var fetcherMatches=matchRoutes(routesToUse,f.path,basename);// If the fetcher path no longer matches, push it in with null matches so\n// we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n// currently only a use-case for Remix HMR where the route tree can change\n// at runtime and remove a route previously loaded via a fetcher\nif(!fetcherMatches){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:null,match:null,controller:null});return;}// Revalidating fetchers are decoupled from the route matches since they\n// load from a static href.  They revalidate based on explicit revalidation\n// (submission, useRevalidator, or X-Remix-Revalidate)\nvar fetcher=state.fetchers.get(key);var fetcherMatch=getTargetMatch(fetcherMatches,f.path);var shouldRevalidate=false;if(fetchRedirectIds.has(key)){// Never trigger a revalidation of an actively redirecting fetcher\nshouldRevalidate=false;}else if(cancelledFetcherLoads.includes(key)){// Always revalidate if the fetcher was cancelled\nshouldRevalidate=true;}else if(fetcher&&fetcher.state!==\"idle\"&&fetcher.data===undefined){// If the fetcher hasn't ever completed loading yet, then this isn't a\n// revalidation, it would just be a brand new load if an explicit\n// revalidation is required\nshouldRevalidate=isRevalidationRequired;}else{// Otherwise fall back on any user-defined shouldRevalidate, defaulting\n// to explicit revalidations only\nshouldRevalidate=shouldRevalidateLoader(fetcherMatch,_extends({currentUrl:currentUrl,currentParams:state.matches[state.matches.length-1].params,nextUrl:nextUrl,nextParams:matches[matches.length-1].params},submission,{actionResult:actionResult,defaultShouldRevalidate:isRevalidationRequired}));}if(shouldRevalidate){revalidatingFetchers.push({key:key,routeId:f.routeId,path:f.path,matches:fetcherMatches,match:fetcherMatch,controller:new AbortController()});}});return[navigationMatches,revalidatingFetchers];}function isNewLoader(currentLoaderData,currentMatch,match){var isNew=// [a] -> [a, b]\n!currentMatch||// [a, b] -> [a, c]\nmatch.route.id!==currentMatch.route.id;// Handle the case that we don't have data for a re-used route, potentially\n// from a prior error or from a cancelled pending deferred\nvar isMissingData=currentLoaderData[match.route.id]===undefined;// Always load if this is a net-new route or we don't yet have data\nreturn isNew||isMissingData;}function isNewRouteInstance(currentMatch,match){var currentPath=currentMatch.route.path;return(// param change for this match, /users/123 -> /users/456\ncurrentMatch.pathname!==match.pathname||// splat param changed, which is not present in match.path\n// e.g. /files/images/avatar.jpg -> files/finances.xls\ncurrentPath!=null&&currentPath.endsWith(\"*\")&&currentMatch.params[\"*\"]!==match.params[\"*\"]);}function shouldRevalidateLoader(loaderMatch,arg){if(loaderMatch.route.shouldRevalidate){var routeChoice=loaderMatch.route.shouldRevalidate(arg);if(typeof routeChoice===\"boolean\"){return routeChoice;}}return arg.defaultShouldRevalidate;}/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */function loadLazyRouteModule(_x60,_x61,_x62){return _loadLazyRouteModule.apply(this,arguments);}function _loadLazyRouteModule(){_loadLazyRouteModule=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(route,mapRouteProperties,manifest){var lazyRoute,routeToUpdate,routeUpdates,lazyRouteProperty,staticRouteValue,isPropertyStaticallyDefined;return _regeneratorRuntime().wrap(function _callee15$(_context16){while(1)switch(_context16.prev=_context16.next){case 0:if(route.lazy){_context16.next=2;break;}return _context16.abrupt(\"return\");case 2:_context16.next=4;return route.lazy();case 4:lazyRoute=_context16.sent;if(route.lazy){_context16.next=7;break;}return _context16.abrupt(\"return\");case 7:routeToUpdate=manifest[route.id];invariant(routeToUpdate,\"No route found in manifest\");// Update the route in place.  This should be safe because there's no way\n// we could yet be sitting on this route as we can't get there without\n// resolving lazy() first.\n//\n// This is different than the HMR \"update\" use-case where we may actively be\n// on the route being updated.  The main concern boils down to \"does this\n// mutation affect any ongoing navigations or any current state.matches\n// values?\".  If not, it should be safe to update in place.\nrouteUpdates={};for(lazyRouteProperty in lazyRoute){staticRouteValue=routeToUpdate[lazyRouteProperty];isPropertyStaticallyDefined=staticRouteValue!==undefined&&// This property isn't static since it should always be updated based\n// on the route updates\nlazyRouteProperty!==\"hasErrorBoundary\";warning(!isPropertyStaticallyDefined,\"Route \\\"\"+routeToUpdate.id+\"\\\" has a static property \\\"\"+lazyRouteProperty+\"\\\" \"+\"defined but its lazy function is also returning a value for this property. \"+(\"The lazy route property \\\"\"+lazyRouteProperty+\"\\\" will be ignored.\"));if(!isPropertyStaticallyDefined&&!immutableRouteKeys.has(lazyRouteProperty)){routeUpdates[lazyRouteProperty]=lazyRoute[lazyRouteProperty];}}// Mutate the route with the provided updates.  Do this first so we pass\n// the updated version to mapRouteProperties\nObject.assign(routeToUpdate,routeUpdates);// Mutate the `hasErrorBoundary` property on the route based on the route\n// updates and remove the `lazy` function so we don't resolve the lazy\n// route again.\nObject.assign(routeToUpdate,_extends({},mapRouteProperties(routeToUpdate),{lazy:undefined}));case 13:case\"end\":return _context16.stop();}},_callee15);}));return _loadLazyRouteModule.apply(this,arguments);}function callLoaderOrAction(_x63,_x64,_x65,_x66,_x67,_x68,_x69,_x70){return _callLoaderOrAction.apply(this,arguments);}// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction _callLoaderOrAction(){_callLoaderOrAction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(type,request,match,matches,manifest,mapRouteProperties,basename,opts){var resultType,result,onReject,runHandler,handler,handlerError,values,url,pathname,_url,_pathname,status,location,currentUrl,_url2,isSameBasename,queryRouteResponse,data,contentType,_result$init,_result$init2;return _regeneratorRuntime().wrap(function _callee16$(_context17){while(1)switch(_context17.prev=_context17.next){case 0:if(opts===void 0){opts={};}runHandler=function runHandler(handler){// Setup a promise we can race against so that abort signals short circuit\nvar reject;var abortPromise=new Promise(function(_,r){return reject=r;});onReject=function onReject(){return reject();};request.signal.addEventListener(\"abort\",onReject);return Promise.race([handler({request:request,params:match.params,context:opts.requestContext}),abortPromise]);};_context17.prev=2;handler=match.route[type];if(!match.route.lazy){_context17.next=32;break;}if(!handler){_context17.next=14;break;}_context17.next=8;return Promise.all([// If the handler throws, don't let it immediately bubble out,\n// since we need to let the lazy() execution finish so we know if this\n// route has a boundary that can handle the error\nrunHandler(handler).catch(function(e){handlerError=e;}),loadLazyRouteModule(match.route,mapRouteProperties,manifest)]);case 8:values=_context17.sent;if(!handlerError){_context17.next=11;break;}throw handlerError;case 11:result=values[0];_context17.next=30;break;case 14:_context17.next=16;return loadLazyRouteModule(match.route,mapRouteProperties,manifest);case 16:handler=match.route[type];if(!handler){_context17.next=23;break;}_context17.next=20;return runHandler(handler);case 20:result=_context17.sent;_context17.next=30;break;case 23:if(!(type===\"action\")){_context17.next=29;break;}url=new URL(request.url);pathname=url.pathname+url.search;throw getInternalRouterError(405,{method:request.method,pathname:pathname,routeId:match.route.id});case 29:return _context17.abrupt(\"return\",{type:ResultType.data,data:undefined});case 30:_context17.next=41;break;case 32:if(handler){_context17.next=38;break;}_url=new URL(request.url);_pathname=_url.pathname+_url.search;throw getInternalRouterError(404,{pathname:_pathname});case 38:_context17.next=40;return runHandler(handler);case 40:result=_context17.sent;case 41:invariant(result!==undefined,\"You defined \"+(type===\"action\"?\"an action\":\"a loader\")+\" for route \"+(\"\\\"\"+match.route.id+\"\\\" but didn't return anything from your `\"+type+\"` \")+\"function. Please return a value or `null`.\");_context17.next=48;break;case 44:_context17.prev=44;_context17.t0=_context17[\"catch\"](2);resultType=ResultType.error;result=_context17.t0;case 48:_context17.prev=48;if(onReject){request.signal.removeEventListener(\"abort\",onReject);}return _context17.finish(48);case 51:if(!isResponse(result)){_context17.next=77;break;}status=result.status;// Process redirects\nif(!redirectStatusCodes.has(status)){_context17.next=61;break;}location=result.headers.get(\"Location\");invariant(location,\"Redirects returned/thrown from loaders/actions must have a Location header\");// Support relative routing in internal redirects\nif(!ABSOLUTE_URL_REGEX.test(location)){location=normalizeTo(new URL(request.url),matches.slice(0,matches.indexOf(match)+1),basename,true,location);}else if(!opts.isStaticRequest){// Strip off the protocol+origin for same-origin + same-basename absolute\n// redirects. If this is a static request, we can let it go back to the\n// browser as-is\ncurrentUrl=new URL(request.url);_url2=location.startsWith(\"//\")?new URL(currentUrl.protocol+location):new URL(location);isSameBasename=stripBasename(_url2.pathname,basename)!=null;if(_url2.origin===currentUrl.origin&&isSameBasename){location=_url2.pathname+_url2.search+_url2.hash;}}// Don't process redirects in the router during static requests requests.\n// Instead, throw the Response and let the server handle it with an HTTP\n// redirect.  We also update the Location header in place in this flow so\n// basename and relative routing is taken into account\nif(!opts.isStaticRequest){_context17.next=60;break;}result.headers.set(\"Location\",location);throw result;case 60:return _context17.abrupt(\"return\",{type:ResultType.redirect,status:status,location:location,revalidate:result.headers.get(\"X-Remix-Revalidate\")!==null,reloadDocument:result.headers.get(\"X-Remix-Reload-Document\")!==null});case 61:if(!opts.isRouteRequest){_context17.next=64;break;}queryRouteResponse={type:resultType===ResultType.error?ResultType.error:ResultType.data,response:result};throw queryRouteResponse;case 64:contentType=result.headers.get(\"Content-Type\");// Check between word boundaries instead of startsWith() due to the last\n// paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\nif(!(contentType&&/\\bapplication\\/json\\b/.test(contentType))){_context17.next=71;break;}_context17.next=68;return result.json();case 68:data=_context17.sent;_context17.next=74;break;case 71:_context17.next=73;return result.text();case 73:data=_context17.sent;case 74:if(!(resultType===ResultType.error)){_context17.next=76;break;}return _context17.abrupt(\"return\",{type:resultType,error:new ErrorResponseImpl(status,result.statusText,data),headers:result.headers});case 76:return _context17.abrupt(\"return\",{type:ResultType.data,data:data,statusCode:result.status,headers:result.headers});case 77:if(!(resultType===ResultType.error)){_context17.next=79;break;}return _context17.abrupt(\"return\",{type:resultType,error:result});case 79:if(!isDeferredData(result)){_context17.next=81;break;}return _context17.abrupt(\"return\",{type:ResultType.deferred,deferredData:result,statusCode:(_result$init=result.init)==null?void 0:_result$init.status,headers:((_result$init2=result.init)==null?void 0:_result$init2.headers)&&new Headers(result.init.headers)});case 81:return _context17.abrupt(\"return\",{type:ResultType.data,data:result});case 82:case\"end\":return _context17.stop();}},_callee16,null,[[2,44,48,51]]);}));return _callLoaderOrAction.apply(this,arguments);}function createClientSideRequest(history,location,signal,submission){var url=history.createURL(stripHashFromPath(location)).toString();var init={signal:signal};if(submission&&isMutationMethod(submission.formMethod)){var formMethod=submission.formMethod,formEncType=submission.formEncType;// Didn't think we needed this but it turns out unlike other methods, patch\n// won't be properly normalized to uppercase and results in a 405 error.\n// See: https://fetch.spec.whatwg.org/#concept-method\ninit.method=formMethod.toUpperCase();if(formEncType===\"application/json\"){init.headers=new Headers({\"Content-Type\":formEncType});init.body=JSON.stringify(submission.json);}else if(formEncType===\"text/plain\"){// Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\ninit.body=submission.text;}else if(formEncType===\"application/x-www-form-urlencoded\"&&submission.formData){// Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\ninit.body=convertFormDataToSearchParams(submission.formData);}else{// Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\ninit.body=submission.formData;}}return new Request(url,init);}function convertFormDataToSearchParams(formData){var searchParams=new URLSearchParams();var _iterator6=_createForOfIteratorHelper(formData.entries()),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var _step6$value=_slicedToArray(_step6.value,2),key=_step6$value[0],value=_step6$value[1];// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\nsearchParams.append(key,typeof value===\"string\"?value:value.name);}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}return searchParams;}function convertSearchParamsToFormData(searchParams){var formData=new FormData();var _iterator7=_createForOfIteratorHelper(searchParams.entries()),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var _step7$value=_slicedToArray(_step7.value,2),key=_step7$value[0],value=_step7$value[1];formData.append(key,value);}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}return formData;}function processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds){// Fill in loaderData/errors from our loaders\nvar loaderData={};var errors=null;var statusCode;var foundError=false;var loaderHeaders={};// Process loader results into state.loaderData/state.errors\nresults.forEach(function(result,index){var id=matchesToLoad[index].route.id;invariant(!isRedirectResult(result),\"Cannot handle redirect results in processLoaderData\");if(isErrorResult(result)){// Look upwards from the matched route for the closest ancestor\n// error boundary, defaulting to the root match\nvar boundaryMatch=findNearestBoundary(matches,id);var error=result.error;// If we have a pending action error, we report it at the highest-route\n// that throws a loader error, and then clear it out to indicate that\n// it was consumed\nif(pendingError){error=Object.values(pendingError)[0];pendingError=undefined;}errors=errors||{};// Prefer higher error values if lower errors bubble to the same boundary\nif(errors[boundaryMatch.route.id]==null){errors[boundaryMatch.route.id]=error;}// Clear our any prior loaderData for the throwing route\nloaderData[id]=undefined;// Once we find our first (highest) error, we set the status code and\n// prevent deeper status codes from overriding\nif(!foundError){foundError=true;statusCode=isRouteErrorResponse(result.error)?result.error.status:500;}if(result.headers){loaderHeaders[id]=result.headers;}}else{if(isDeferredResult(result)){activeDeferreds.set(id,result.deferredData);loaderData[id]=result.deferredData.data;}else{loaderData[id]=result.data;}// Error status codes always override success status codes, but if all\n// loaders are successful we take the deepest status code.\nif(result.statusCode!=null&&result.statusCode!==200&&!foundError){statusCode=result.statusCode;}if(result.headers){loaderHeaders[id]=result.headers;}}});// If we didn't consume the pending action error (i.e., all loaders\n// resolved), then consume it here.  Also clear out any loaderData for the\n// throwing route\nif(pendingError){errors=pendingError;loaderData[Object.keys(pendingError)[0]]=undefined;}return{loaderData:loaderData,errors:errors,statusCode:statusCode||200,loaderHeaders:loaderHeaders};}function processLoaderData(state,matches,matchesToLoad,results,pendingError,revalidatingFetchers,fetcherResults,activeDeferreds){var _processRouteLoaderDa=processRouteLoaderData(matches,matchesToLoad,results,pendingError,activeDeferreds),loaderData=_processRouteLoaderDa.loaderData,errors=_processRouteLoaderDa.errors;// Process results from our revalidating fetchers\nfor(var index=0;index<revalidatingFetchers.length;index++){var _revalidatingFetchers=revalidatingFetchers[index],key=_revalidatingFetchers.key,match=_revalidatingFetchers.match,controller=_revalidatingFetchers.controller;invariant(fetcherResults!==undefined&&fetcherResults[index]!==undefined,\"Did not find corresponding fetcher result\");var result=fetcherResults[index];// Process fetcher non-redirect errors\nif(controller&&controller.signal.aborted){// Nothing to do for aborted fetchers\ncontinue;}else if(isErrorResult(result)){var boundaryMatch=findNearestBoundary(state.matches,match==null?void 0:match.route.id);if(!(errors&&errors[boundaryMatch.route.id])){errors=_extends({},errors,_defineProperty({},boundaryMatch.route.id,result.error));}state.fetchers.delete(key);}else if(isRedirectResult(result)){// Should never get here, redirects should get processed above, but we\n// keep this to type narrow to a success result in the else\ninvariant(false,\"Unhandled fetcher revalidation redirect\");}else if(isDeferredResult(result)){// Should never get here, deferred data should be awaited for fetchers\n// in resolveDeferredResults\ninvariant(false,\"Unhandled fetcher deferred data\");}else{var doneFetcher=getDoneFetcher(result.data);state.fetchers.set(key,doneFetcher);}}return{loaderData:loaderData,errors:errors};}function mergeLoaderData(loaderData,newLoaderData,matches,errors){var mergedLoaderData=_extends({},newLoaderData);var _iterator8=_createForOfIteratorHelper(matches),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var match=_step8.value;var id=match.route.id;if(newLoaderData.hasOwnProperty(id)){if(newLoaderData[id]!==undefined){mergedLoaderData[id]=newLoaderData[id];}}else if(loaderData[id]!==undefined&&match.route.loader){// Preserve existing keys not included in newLoaderData and where a loader\n// wasn't removed by HMR\nmergedLoaderData[id]=loaderData[id];}if(errors&&errors.hasOwnProperty(id)){// Don't keep any loader data below the boundary\nbreak;}}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}return mergedLoaderData;}// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches,routeId){var eligibleMatches=routeId?matches.slice(0,matches.findIndex(function(m){return m.route.id===routeId;})+1):_toConsumableArray(matches);return eligibleMatches.reverse().find(function(m){return m.route.hasErrorBoundary===true;})||matches[0];}function getShortCircuitMatches(routes){// Prefer a root layout route if present, otherwise shim in a route object\nvar route=routes.length===1?routes[0]:routes.find(function(r){return r.index||!r.path||r.path===\"/\";})||{id:\"__shim-error-route__\"};return{matches:[{params:{},pathname:\"\",pathnameBase:\"\",route:route}],route:route};}function getInternalRouterError(status,_temp4){var _ref13=_temp4===void 0?{}:_temp4,pathname=_ref13.pathname,routeId=_ref13.routeId,method=_ref13.method,type=_ref13.type;var statusText=\"Unknown Server Error\";var errorMessage=\"Unknown @remix-run/router error\";if(status===400){statusText=\"Bad Request\";if(method&&pathname&&routeId){errorMessage=\"You made a \"+method+\" request to \\\"\"+pathname+\"\\\" but \"+(\"did not provide a `loader` for route \\\"\"+routeId+\"\\\", \")+\"so there is no way to handle the request.\";}else if(type===\"defer-action\"){errorMessage=\"defer() is not supported in actions\";}else if(type===\"invalid-body\"){errorMessage=\"Unable to encode submission body\";}}else if(status===403){statusText=\"Forbidden\";errorMessage=\"Route \\\"\"+routeId+\"\\\" does not match URL \\\"\"+pathname+\"\\\"\";}else if(status===404){statusText=\"Not Found\";errorMessage=\"No route matches URL \\\"\"+pathname+\"\\\"\";}else if(status===405){statusText=\"Method Not Allowed\";if(method&&pathname&&routeId){errorMessage=\"You made a \"+method.toUpperCase()+\" request to \\\"\"+pathname+\"\\\" but \"+(\"did not provide an `action` for route \\\"\"+routeId+\"\\\", \")+\"so there is no way to handle the request.\";}else if(method){errorMessage=\"Invalid request method \\\"\"+method.toUpperCase()+\"\\\"\";}}return new ErrorResponseImpl(status||500,statusText,new Error(errorMessage),true);}// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results){for(var i=results.length-1;i>=0;i--){var result=results[i];if(isRedirectResult(result)){return{result:result,idx:i};}}}function stripHashFromPath(path){var parsedPath=typeof path===\"string\"?parsePath(path):path;return createPath(_extends({},parsedPath,{hash:\"\"}));}function isHashChangeOnly(a,b){if(a.pathname!==b.pathname||a.search!==b.search){return false;}if(a.hash===\"\"){// /page -> /page#hash\nreturn b.hash!==\"\";}else if(a.hash===b.hash){// /page#hash -> /page#hash\nreturn true;}else if(b.hash!==\"\"){// /page#hash -> /page#other\nreturn true;}// If the hash is removed the browser will re-perform a request to the server\n// /page#hash -> /page\nreturn false;}function isDeferredResult(result){return result.type===ResultType.deferred;}function isErrorResult(result){return result.type===ResultType.error;}function isRedirectResult(result){return(result&&result.type)===ResultType.redirect;}function isDeferredData(value){var deferred=value;return deferred&&typeof deferred===\"object\"&&typeof deferred.data===\"object\"&&typeof deferred.subscribe===\"function\"&&typeof deferred.cancel===\"function\"&&typeof deferred.resolveData===\"function\";}function isResponse(value){return value!=null&&typeof value.status===\"number\"&&typeof value.statusText===\"string\"&&typeof value.headers===\"object\"&&typeof value.body!==\"undefined\";}function isRedirectResponse(result){if(!isResponse(result)){return false;}var status=result.status;var location=result.headers.get(\"Location\");return status>=300&&status<=399&&location!=null;}function isQueryRouteResponse(obj){return obj&&isResponse(obj.response)&&(obj.type===ResultType.data||obj.type===ResultType.error);}function isValidMethod(method){return validRequestMethods.has(method.toLowerCase());}function isMutationMethod(method){return validMutationMethods.has(method.toLowerCase());}function resolveDeferredResults(_x71,_x72,_x73,_x74,_x75,_x76){return _resolveDeferredResults.apply(this,arguments);}function _resolveDeferredResults(){_resolveDeferredResults=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(currentMatches,matchesToLoad,results,signals,isFetcher,currentLoaderData){var _loop,index;return _regeneratorRuntime().wrap(function _callee17$(_context19){while(1)switch(_context19.prev=_context19.next){case 0:_loop=/*#__PURE__*/_regeneratorRuntime().mark(function _loop(index){var result,match,currentMatch,isRevalidatingLoader,signal;return _regeneratorRuntime().wrap(function _loop$(_context18){while(1)switch(_context18.prev=_context18.next){case 0:result=results[index];match=matchesToLoad[index];// If we don't have a match, then we can have a deferred result to do\n// anything with.  This is for revalidating fetchers where the route was\n// removed during HMR\nif(match){_context18.next=4;break;}return _context18.abrupt(\"return\",1);case 4:currentMatch=currentMatches.find(function(m){return m.route.id===match.route.id;});isRevalidatingLoader=currentMatch!=null&&!isNewRouteInstance(currentMatch,match)&&(currentLoaderData&&currentLoaderData[match.route.id])!==undefined;if(!(isDeferredResult(result)&&(isFetcher||isRevalidatingLoader))){_context18.next=11;break;}// Note: we do not have to touch activeDeferreds here since we race them\n// against the signal in resolveDeferredData and they'll get aborted\n// there if needed\nsignal=signals[index];invariant(signal,\"Expected an AbortSignal for revalidating fetcher deferred result\");_context18.next=11;return resolveDeferredData(result,signal,isFetcher).then(function(result){if(result){results[index]=result||results[index];}});case 11:case\"end\":return _context18.stop();}},_loop);});index=0;case 2:if(!(index<results.length)){_context19.next=9;break;}return _context19.delegateYield(_loop(index),\"t0\",4);case 4:if(!_context19.t0){_context19.next=6;break;}return _context19.abrupt(\"continue\",6);case 6:index++;_context19.next=2;break;case 9:case\"end\":return _context19.stop();}},_callee17);}));return _resolveDeferredResults.apply(this,arguments);}function resolveDeferredData(_x77,_x78,_x79){return _resolveDeferredData.apply(this,arguments);}function _resolveDeferredData(){_resolveDeferredData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(result,signal,unwrap){var aborted;return _regeneratorRuntime().wrap(function _callee18$(_context20){while(1)switch(_context20.prev=_context20.next){case 0:if(unwrap===void 0){unwrap=false;}_context20.next=3;return result.deferredData.resolveData(signal);case 3:aborted=_context20.sent;if(!aborted){_context20.next=6;break;}return _context20.abrupt(\"return\");case 6:if(!unwrap){_context20.next=14;break;}_context20.prev=7;return _context20.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.unwrappedData});case 11:_context20.prev=11;_context20.t0=_context20[\"catch\"](7);return _context20.abrupt(\"return\",{type:ResultType.error,error:_context20.t0});case 14:return _context20.abrupt(\"return\",{type:ResultType.data,data:result.deferredData.data});case 15:case\"end\":return _context20.stop();}},_callee18,null,[[7,11]]);}));return _resolveDeferredData.apply(this,arguments);}function hasNakedIndexQuery(search){return new URLSearchParams(search).getAll(\"index\").some(function(v){return v===\"\";});}function getTargetMatch(matches,location){var search=typeof location===\"string\"?parsePath(location).search:location.search;if(matches[matches.length-1].route.index&&hasNakedIndexQuery(search||\"\")){// Return the leaf index route when index is present\nreturn matches[matches.length-1];}// Otherwise grab the deepest \"path contributing\" match (ignoring index and\n// pathless layout routes)\nvar pathMatches=getPathContributingMatches(matches);return pathMatches[pathMatches.length-1];}function getSubmissionFromNavigation(navigation){var formMethod=navigation.formMethod,formAction=navigation.formAction,formEncType=navigation.formEncType,text=navigation.text,formData=navigation.formData,json=navigation.json;if(!formMethod||!formAction||!formEncType){return;}if(text!=null){return{formMethod:formMethod,formAction:formAction,formEncType:formEncType,formData:undefined,json:undefined,text:text};}else if(formData!=null){return{formMethod:formMethod,formAction:formAction,formEncType:formEncType,formData:formData,json:undefined,text:undefined};}else if(json!==undefined){return{formMethod:formMethod,formAction:formAction,formEncType:formEncType,formData:undefined,json:json,text:undefined};}}function getLoadingNavigation(location,submission){if(submission){var navigation={state:\"loading\",location:location,formMethod:submission.formMethod,formAction:submission.formAction,formEncType:submission.formEncType,formData:submission.formData,json:submission.json,text:submission.text};return navigation;}else{var _navigation={state:\"loading\",location:location,formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,json:undefined,text:undefined};return _navigation;}}function getSubmittingNavigation(location,submission){var navigation={state:\"submitting\",location:location,formMethod:submission.formMethod,formAction:submission.formAction,formEncType:submission.formEncType,formData:submission.formData,json:submission.json,text:submission.text};return navigation;}function getLoadingFetcher(submission,data){if(submission){var fetcher={state:\"loading\",formMethod:submission.formMethod,formAction:submission.formAction,formEncType:submission.formEncType,formData:submission.formData,json:submission.json,text:submission.text,data:data};return fetcher;}else{var _fetcher={state:\"loading\",formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,json:undefined,text:undefined,data:data};return _fetcher;}}function getSubmittingFetcher(submission,existingFetcher){var fetcher={state:\"submitting\",formMethod:submission.formMethod,formAction:submission.formAction,formEncType:submission.formEncType,formData:submission.formData,json:submission.json,text:submission.text,data:existingFetcher?existingFetcher.data:undefined};return fetcher;}function getDoneFetcher(data){var fetcher={state:\"idle\",formMethod:undefined,formAction:undefined,formEncType:undefined,formData:undefined,json:undefined,text:undefined,data:data};return fetcher;}function restoreAppliedTransitions(_window,transitions){try{var sessionPositions=_window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);if(sessionPositions){var _json2=JSON.parse(sessionPositions);for(var _i=0,_Object$entries=Object.entries(_json2||{});_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),k=_Object$entries$_i[0],v=_Object$entries$_i[1];if(v&&Array.isArray(v)){transitions.set(k,new Set(v||[]));}}}}catch(e){// no-op, use default empty object\n}}function persistAppliedTransitions(_window,transitions){if(transitions.size>0){var _json3={};var _iterator9=_createForOfIteratorHelper(transitions),_step9;try{for(_iterator9.s();!(_step9=_iterator9.n()).done;){var _step9$value=_slicedToArray(_step9.value,2),k=_step9$value[0],v=_step9$value[1];_json3[k]=_toConsumableArray(v);}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}try{_window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY,JSON.stringify(_json3));}catch(error){warning(false,\"Failed to save applied view transitions in sessionStorage (\"+error+\").\");}}}//#endregion\nexport{AbortedDeferredError,Action,IDLE_BLOCKER,IDLE_FETCHER,IDLE_NAVIGATION,UNSAFE_DEFERRED_SYMBOL,DeferredData as UNSAFE_DeferredData,ErrorResponseImpl as UNSAFE_ErrorResponseImpl,convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch,convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes,getPathContributingMatches as UNSAFE_getPathContributingMatches,invariant as UNSAFE_invariant,warning as UNSAFE_warning,createBrowserHistory,createHashHistory,createMemoryHistory,createPath,createRouter,createStaticHandler,defer,generatePath,getStaticContextFromError,getToPathname,isDeferredData,isRouteErrorResponse,joinPaths,json,matchPath,matchRoutes,normalizePathname,parsePath,redirect,redirectDocument,resolvePath,resolveTo,stripBasename};","map":{"version":3,"names":["Action","PopStateEventType","createMemoryHistory","options","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","entries","map","entry","index","createMemoryLocation","state","undefined","clampIndex","length","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","key","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","history","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","_window$location","usr","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","startsWith","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","invariant","value","message","Error","cond","console","warn","e","createKey","random","toString","getHistoryState","idx","current","_extends","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","getIndex","replaceState","handlePop","historyState","pushState","error","DOMException","name","assign","origin","addEventListener","removeEventListener","ResultType","immutableRouteKeys","Set","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","concat","_toConsumableArray","id","join","children","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","i","matchRouteBranch","safelyDecodeURI","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","joinPaths","routesMeta","score","computeScore","forEach","_route$path","includes","_iterator","_createForOfIteratorHelper","explodeOptionalSegments","_step","s","done","exploded","err","f","segments","split","_segments","_toArray","first","rest","isOptional","endsWith","required","restExploded","result","apply","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","Object","pathnameBase","normalizePathname","generatePath","originalPath","prefix","p","String","array","isLastSegment","star","keyMatch","_keyMatch","_slicedToArray","optional","param","pattern","_compilePath","compilePath","_compilePath2","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","_","RegExp","decodeURI","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref4","toPathname","_ref4$search","_ref4$hash","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","getToPathname","paths","json","init","responseInit","status","headers","Headers","has","set","Response","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","arguments","_createClass","_wrapNativeSuper","DeferredData","_this","pendingKeysSet","subscribers","deferredKeys","Array","isArray","reject","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref5","_defineProperty","trackPromise","_this2","add","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","undefinedError","emit","settledKey","subscriber","subscribe","_this3","cancel","_this4","abort","v","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_callee$","_context","prev","next","resolve","sent","abrupt","stop","resolveData","_x","size","_ref2","_ref6","unwrapTrackedPromise","isTrackedPromise","_tracked","_error","_data","defer","redirect","redirectDocument","response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","dataRoutes","inFlightDataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","initialized","m","lazy","loader","router","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","initialize","blockerKey","shouldBlockNavigation","currentLocation","updateBlocker","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","dispose","clear","deleteFetcher","deleteBlocker","newState","viewTransitionOpts","unstable_viewTransitionOpts","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","priorPaths","toPaths","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","userReplace","_callee2$","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","pendingError","enableViewTransition","unstable_viewTransition","revalidate","interruptActiveLoads","startUninterruptedRevalidation","overrideNavigation","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_callee3$","_context3","saveScrollPosition","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","getLoadingNavigation","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_callee4$","_context4","getSubmittingNavigation","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","fetcherKey","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_callee5$","_context5","getSubmissionFromNavigation","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","getLoadingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","fetch","setFetcherError","_normalizeNavigateOpt","handleFetcherAction","handleFetcherLoader","_x21","_x22","_x23","_x24","_x25","_x26","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","doneFetcher","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","_doneFetcher","_callee6$","_context6","getSubmittingFetcher","getDoneFetcher","staleKey","_x27","_x28","_x29","_x30","_x31","_x32","_handleFetcherLoader","_callee7","_doneFetcher2","_callee7$","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_ref7","redirectLocation","isDocumentReload","redirectHistoryAction","_state$navigation","_callee8$","_context8","reloadDocument","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_callee9$","_context9","all","resolveDeferredResults","_cancelledDeferredRou","markFetchersDone","_iterator2","_step2","doneKeys","_iterator3","_step3","landedId","yeetedKeys","_iterator4","_step4","_step4$value","getBlocker","blocker","newBlocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","_internalSetRoutes","newRoutes","_internalFetchControllers","_internalActiveDeferreds","UNSAFE_DEFERRED_SYMBOL","Symbol","createStaticHandler","query","_x41","_x42","_query","_callee10","_temp2","_ref8","requestContext","_getShortCircuitMatch3","methodNotAllowedMatches","_error4","_getShortCircuitMatch4","_route2","_callee10$","_context10","isValidMethod","statusCode","loaderHeaders","actionHeaders","queryImpl","isResponse","queryRoute","_x43","_x44","_queryRoute","_callee11","_temp3","_ref9","_result$activeDeferre","_callee11$","_context11","find","values","_x45","_x46","_x47","_x48","_x49","_queryImpl","_callee12","routeMatch","_result","_callee12$","_context12","submit","loadRouteData","isQueryRouteResponse","isRedirectResponse","_x50","_x51","_x52","_x53","_x54","_submit","_callee13","isRouteRequest","_error5","_context13","loaderRequest","context","_callee13$","_context14","isStaticRequest","Location","_x55","_x56","_x57","_x58","_x59","_loadRouteData","_callee14","executedLoaders","_callee14$","_context15","getLoaderMatchesUntilBoundary","processRouteLoaderData","fromEntries","getStaticContextFromError","newContext","_deepestRenderedBoundaryId","isSubmissionNavigation","body","prependBasename","contextualMatches","activeRouteMatch","_iterator5","_step5","hasNakedIndexQuery","normalizeFormMethod","isFetcher","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","_ref3","_ref12","parse","searchParams","convertFormDataToSearchParams","convertSearchParamsToFormData","append","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_callee15$","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_callLoaderOrAction","_callee16","resultType","onReject","runHandler","handler","handlerError","_url","_pathname","_url2","isSameBasename","queryRouteResponse","contentType","_result$init","_result$init2","_callee16$","_context17","finish","protocol","isDeferredData","deferred","_iterator6","_step6","_step6$value","_iterator7","_step7","_step7$value","foundError","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","mergedLoaderData","_iterator8","_step8","hasOwnProperty","eligibleMatches","reverse","_temp4","_ref13","errorMessage","obj","_x71","_x72","_x73","_x74","_x75","_x76","_resolveDeferredResults","_callee17","signals","_loop","_callee17$","_context19","isRevalidatingLoader","_loop$","_context18","delegateYield","_x77","_x78","_x79","_resolveDeferredData","_callee18","unwrap","_callee18$","_context20","unwrappedData","getAll","pathMatches","_window","transitions","sessionPositions","sessionStorage","getItem","_i","_Object$entries","_Object$entries$_i","_iterator9","_step9","_step9$value","setItem"],"sources":["/Users/christinaqiu/Documents/GitHub/personal-website/src/node_modules/@remix-run/router/history.ts","/Users/christinaqiu/Documents/GitHub/personal-website/src/node_modules/@remix-run/router/utils.ts","/Users/christinaqiu/Documents/GitHub/personal-website/src/node_modules/@remix-run/router/router.ts"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction<Context = any> {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    viewTransitionOpts?: ViewTransitionOpts\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) =>\n      subscriber(state, { unstable_viewTransitionOpts: viewTransitionOpts })\n    );\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      viewTransitionOpts\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(\n          `${method}() call aborted: ${request.method} ${request.url}`\n        );\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(\n        `${method}() call aborted: ${request.method} ${request.url}`\n      );\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n\n//#endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}